{"version":3,"sources":["components/contact/ContactForm.js","pages/Contact.js","../node_modules/@material-ui/core/Grid/GridContext.js","../node_modules/@material-ui/core/Grid/gridClasses.js","../node_modules/@material-ui/core/Grid/Grid.js"],"names":["ContactForm","onSubmit","event","preventDefault","Grid","container","spacing","item","xs","sm","Typography","color","sx","mb","variant","TextField","fullWidth","name","required","type","Select","MenuItem","value","multiline","rows","Box","display","justifyContent","mt","Button","size","Link","href","underline","Contact","useEffect","gtm","push","gridTemplateColumns","lg","minHeight","backgroundColor","pt","Container","maxWidth","pl","component","BrowserLink","to","Logo","height","width","alignItems","py","Avatar","mr","Mail","fontWeight","alt","src","style","pr","pb","GridContext","React","getGridUtilityClass","slot","generateUtilityClass","GRID_SIZES","gridClasses","generateUtilityClasses","map","direction","wrap","getOffset","val","parse","parseFloat","String","replace","GridRoot","experimentalStyled","overridesResolver","props","styles","styleProps","md","xl","zeroMinWidth","_extends","root","boxSizing","flexWrap","margin","minWidth","flexDirection","theme","themeSpacing","marginTop","marginLeft","paddingTop","paddingLeft","breakpoints","keys","reduce","globalStyles","breakpoint","flexBasis","flexGrow","Math","round","columns","more","values","Object","assign","up","generateGrid","inProps","ref","element","themeProps","useThemeProps","extendSxProp","className","columnsProp","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","as","Provider","children"],"mappings":"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","file":"static/js/103.df0b8182.chunk.js","sourcesContent":["import {\n  Box,\n  Button,\n  Grid,\n  Link,\n  MenuItem,\n  Select,\n  TextField,\n  Typography\n} from '@material-ui/core';\n\nconst ContactForm = () => {\n  const handleSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Grid\n        container\n        spacing={3}\n      >\n        <Grid\n          item\n          xs={12}\n          sm={6}\n        >\n          <Typography\n            color=\"textPrimary\"\n            sx={{ mb: 1 }}\n            variant=\"subtitle2\"\n          >\n            Full Name *\n          </Typography>\n          <TextField\n            fullWidth\n            name=\"name\"\n            required\n            variant=\"outlined\"\n          />\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sm={6}\n        >\n          <Typography\n            color=\"textPrimary\"\n            sx={{ mb: 1 }}\n            variant=\"subtitle2\"\n          >\n            Company Name*\n          </Typography>\n          <TextField\n            fullWidth\n            name=\"company\"\n            required\n            variant=\"outlined\"\n          />\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sm={6}\n        >\n          <Typography\n            color=\"textPrimary\"\n            sx={{ mb: 1 }}\n            variant=\"subtitle2\"\n          >\n            Work Email *\n          </Typography>\n          <TextField\n            fullWidth\n            name=\"email\"\n            type=\"email\"\n            required\n            variant=\"outlined\"\n          />\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sm={6}\n        >\n          <Typography\n            color=\"textPrimary\"\n            sx={{ mb: 1 }}\n            variant=\"subtitle2\"\n          >\n            Phone Number *\n          </Typography>\n          <TextField\n            fullWidth\n            name=\"phone\"\n            required\n            type=\"tel\"\n            variant=\"outlined\"\n          />\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sm={6}\n        >\n          <Typography\n            color=\"textPrimary\"\n            sx={{ mb: 1 }}\n            variant=\"subtitle2\"\n          >\n            Company Size\n          </Typography>\n          <Select\n            fullWidth\n            variant=\"outlined\"\n          >\n            <MenuItem value=\"10-20\">1-10</MenuItem>\n            <MenuItem value=\"11-30\">11-30</MenuItem>\n            <MenuItem value=\"31-50\">31-50</MenuItem>\n          </Select>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sm={6}\n        >\n          <Typography\n            color=\"textPrimary\"\n            sx={{ mb: 1 }}\n            variant=\"subtitle2\"\n          >\n            Team\n          </Typography>\n          <Select\n            fullWidth\n            variant=\"outlined\"\n          >\n            <MenuItem value=\"engineering\">Engineering</MenuItem>\n            <MenuItem value=\"design\">Design</MenuItem>\n          </Select>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n        >\n          <Typography\n            color=\"textPrimary\"\n            sx={{ mb: 1 }}\n            variant=\"subtitle2\"\n          >\n            Project Budget *\n          </Typography>\n          <Select\n            fullWidth\n            required\n            variant=\"outlined\"\n          >\n            <MenuItem value={20000}>$20,000+</MenuItem>\n            <MenuItem value={50000}>$50,000+</MenuItem>\n          </Select>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n        >\n          <Typography\n            color=\"textPrimary\"\n            sx={{ mb: 1 }}\n            variant=\"subtitle2\"\n          >\n            Message\n          </Typography>\n          <TextField\n            fullWidth\n            name=\"message\"\n            required\n            multiline\n            rows={6}\n            variant=\"outlined\"\n          />\n        </Grid>\n      </Grid>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n          mt: 3\n        }}\n      >\n        <Button\n          color=\"primary\"\n          fullWidth\n          size=\"large\"\n          variant=\"contained\"\n        >\n          Let&apos;s Talk\n        </Button>\n      </Box>\n      <Typography\n        color=\"textSecondary\"\n        sx={{ mt: 3 }}\n        variant=\"body2\"\n      >\n        By submitting this, you agree to the\n        {' '}\n        <Link\n          color=\"textPrimary\"\n          href=\"#\"\n          underline=\"always\"\n          variant=\"subtitle2\"\n        >\n          Privacy Policy\n        </Link>\n        {' '}\n        and\n        {' '}\n        <Link\n          color=\"textPrimary\"\n          href=\"#\"\n          underline=\"always\"\n          variant=\"subtitle2\"\n        >\n          Cookie Policy\n        </Link>\n        .\n      </Typography>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import { useEffect } from 'react';\nimport { Link as BrowserLink } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport { Avatar, Box, Container, Link, Typography } from '@material-ui/core';\nimport { ContactForm } from '../components/contact';\nimport Logo from '../components/Logo';\nimport MailIcon from '../icons/Mail';\nimport gtm from '../lib/gtm';\n\nconst Contact = () => {\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Contact | Material Kit Pro</title>\n      </Helmet>\n      <Box\n        sx={{\n          display: 'grid',\n          gridTemplateColumns: {\n            lg: 'repeat(2, 1fr)',\n            xs: 'repeat(1, 1fr)'\n          },\n          minHeight: '100%'\n        }}\n      >\n        <Box\n          sx={{\n            backgroundColor: 'background.default',\n            pt: 8\n          }}\n        >\n          <Container\n            maxWidth=\"md\"\n            sx={{\n              pl: {\n                lg: 15\n              }\n            }}\n          >\n            <Link\n              component={BrowserLink}\n              to=\"/\"\n            >\n              <Logo\n                sx={{\n                  height: 33,\n                  width: 42\n                }}\n              />\n            </Link>\n            <Box\n              sx={{\n                alignItems: 'center',\n                display: 'flex',\n                py: 3\n              }}\n            >\n              <Avatar\n                sx={{\n                  backgroundColor: 'primary.main',\n                  color: 'primary.contrastText',\n                  mr: 2\n                }}\n                variant=\"rounded\"\n              >\n                <MailIcon />\n              </Avatar>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"overline\"\n              >\n                Contact sales\n              </Typography>\n            </Box>\n            <Typography\n              color=\"textPrimary\"\n              sx={{ fontWeight: 'fontWeightBold' }}\n              variant=\"h1\"\n            >\n              Talk to our account expert\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              sx={{ py: 3 }}\n              variant=\"body1\"\n            >\n              Have questions about integrating our APIs? Fill out the form\n              and a senior web expert will be in touch shortly.\n            </Typography>\n            <Typography\n              sx={{ color: 'primary.main' }}\n              variant=\"h6\"\n            >\n              Join 3,000+ forward-thinking companies:\n            </Typography>\n            <Box sx={{ pt: 2 }}>\n              <img\n                alt=\"logoipsum1\"\n                src=\"/static/contact/contact_logos.svg\"\n                style={{ maxWidth: '100%' }}\n              />\n            </Box>\n          </Container>\n        </Box>\n        <Box\n          sx={{\n            backgroundColor: 'background.paper',\n            pt: 8\n          }}\n        >\n          <Container\n            maxWidth=\"md\"\n            sx={{\n              pr: {\n                lg: 15\n              }\n            }}\n          >\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h6\"\n              sx={{ pb: 3 }}\n            >\n              Fill the form below\n            </Typography>\n            <Box sx={{}}>\n              <ContactForm />\n            </Box>\n          </Container>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default Contact;\n","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst GridContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  GridContext.displayName = 'GridContext';\n}\n\nexport default GridContext;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getGridUtilityClass(slot) {\n  return generateUtilityClass('MuiGrid', slot);\n}\nconst SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst DIRECTIONS = ['column-reverse', 'column', 'row-reverse', 'row'];\nconst WRAPS = ['nowrap', 'wrap-reverse', 'wrap'];\nconst GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nconst gridClasses = generateUtilityClasses('MuiGrid', ['root', 'container', 'item', 'zeroMinWidth', // spacings\n...SPACINGS.map(spacing => `spacing-xs-${spacing}`), // direction values\n...DIRECTIONS.map(direction => `direction-xs-${direction}`), // wrap values\n...WRAPS.map(wrap => `wrap-xs-${wrap}`), // grid sizes for all breakpoints\n...GRID_SIZES.map(size => `grid-xs-${size}`), ...GRID_SIZES.map(size => `grid-sm-${size}`), ...GRID_SIZES.map(size => `grid-md-${size}`), ...GRID_SIZES.map(size => `grid-lg-${size}`), ...GRID_SIZES.map(size => `grid-xl-${size}`)]);\nexport default gridClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@material-ui/system';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport GridContext from './GridContext';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getOffset(val) {\n  const parse = parseFloat(val);\n  return `${parse}${String(val).replace(String(parse), '') || 'px'}`;\n}\n\nfunction generateGrid(globalStyles, theme, breakpoint, styleProps) {\n  const size = styleProps[breakpoint];\n  if (!size) return;\n  let styles = {};\n\n  if (size === true) {\n    // For the auto layouting\n    styles = {\n      flexBasis: 0,\n      flexGrow: 1,\n      maxWidth: '100%'\n    };\n  } else if (size === 'auto') {\n    styles = {\n      flexBasis: 'auto',\n      flexGrow: 0,\n      maxWidth: 'none'\n    };\n  } else {\n    // Keep 7 significant numbers.\n    const width = `${Math.round(size / styleProps.columns * 10e7) / 10e5}%`;\n    let more = {};\n\n    if (styleProps.container && styleProps.item && styleProps.spacing !== 0) {\n      const themeSpacing = theme.spacing(styleProps.spacing);\n\n      if (themeSpacing !== '0px') {\n        const fullWidth = `calc(${width} + ${getOffset(themeSpacing)})`;\n        more = {\n          flexBasis: fullWidth,\n          maxWidth: fullWidth\n        };\n      }\n    } // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n\n    styles = _extends({\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    }, more);\n  } // No need for a media query for the first size.\n\n\n  if (theme.breakpoints.values[breakpoint] === 0) {\n    Object.assign(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction generateGap({\n  theme,\n  styleProps\n}) {\n  const {\n    container,\n    spacing\n  } = styleProps;\n  let styles = {};\n\n  if (container && spacing !== 0) {\n    const themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing !== '0px') {\n      styles = {\n        width: `calc(100% + ${getOffset(themeSpacing)})`,\n        marginTop: `-${getOffset(themeSpacing)}`,\n        marginLeft: `-${getOffset(themeSpacing)}`,\n        [`& > .${gridClasses.item}`]: {\n          paddingTop: getOffset(themeSpacing),\n          paddingLeft: getOffset(themeSpacing)\n        }\n      };\n    }\n  }\n\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nconst GridRoot = experimentalStyled('div', {}, {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      container,\n      direction,\n      item,\n      lg,\n      md,\n      sm,\n      spacing,\n      wrap,\n      xl,\n      xs,\n      zeroMinWidth\n    } = props.styleProps;\n    return _extends({}, styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, container && spacing !== 0 && styles[`spacing-xs-${String(spacing)}`], direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], xs !== false && styles[`grid-xs-${String(xs)}`], sm !== false && styles[`grid-sm-${String(sm)}`], md !== false && styles[`grid-md-${String(md)}`], lg !== false && styles[`grid-lg-${String(lg)}`], xl !== false && styles[`grid-xl-${String(xl)}`]);\n  }\n})(({\n  styleProps\n}) => _extends({\n  boxSizing: 'border-box'\n}, styleProps.container && {\n  display: 'flex',\n  flexWrap: 'wrap',\n  width: '100%'\n}, styleProps.item && {\n  margin: 0 // For instance, it's useful when used with a `figure` element.\n\n}, styleProps.zeroMinWidth && {\n  minWidth: 0\n}, styleProps.direction === 'column' && {\n  flexDirection: 'column',\n  [`& > .${gridClasses.item}`]: {\n    maxWidth: 'none'\n  }\n}, styleProps.direction === 'column-reverse' && {\n  flexDirection: 'column-reverse',\n  [`& > .${gridClasses.item}`]: {\n    maxWidth: 'none'\n  }\n}, styleProps.direction === 'row-reverse' && {\n  flexDirection: 'row-reverse'\n}, styleProps.wrap === 'nowrap' && {\n  flexWrap: 'nowrap'\n}, styleProps.wrap === 'reverse' && {\n  flexWrap: 'wrap-reverse'\n}), generateGap, ({\n  theme,\n  styleProps\n}) => theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n  // Use side effect over immutability for better performance.\n  generateGrid(globalStyles, theme, breakpoint, styleProps);\n  return globalStyles;\n}, {}));\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    spacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  } = styleProps;\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', container && spacing !== 0 && `spacing-xs-${String(spacing)}`, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, xs !== false && `grid-xs-${String(xs)}`, sm !== false && `grid-sm-${String(sm)}`, md !== false && `grid-md-${String(md)}`, lg !== false && `grid-lg-${String(lg)}`, xl !== false && `grid-xl-${String(xl)}`]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\n\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const props = extendSxProp(themeProps);\n\n  const {\n    className,\n    columns: columnsProp = 12,\n    component = 'div',\n    container = false,\n    direction = 'row',\n    item = false,\n    lg = false,\n    md = false,\n    sm = false,\n    spacing = 0,\n    wrap = 'wrap',\n    xl = false,\n    xs = false,\n    zeroMinWidth = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"columns\", \"component\", \"container\", \"direction\", \"item\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  const columns = React.useContext(GridContext) || columnsProp;\n\n  const styleProps = _extends({}, props, {\n    columns,\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    spacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  });\n\n  const classes = useUtilityClasses(styleProps);\n\n  const wrapChild = element => columns !== 12 ? /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: element\n  }) : element;\n\n  return wrapChild( /*#__PURE__*/_jsx(GridRoot, _extends({\n    styleProps: styleProps,\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid); // eslint-disable-next-line no-useless-concat\n\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default Grid;"],"sourceRoot":""}