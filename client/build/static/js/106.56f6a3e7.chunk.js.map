{"version":3,"sources":["pages/dashboard/Finance.js","../node_modules/@material-ui/core/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/Breadcrumbs/breadcrumbsClasses.js","../node_modules/@material-ui/core/Breadcrumbs/Breadcrumbs.js"],"names":["Finance","settings","useSettings","useEffect","gtm","push","event","sx","backgroundColor","minHeight","py","maxWidth","compact","container","justifyContent","spacing","item","color","variant","aria-label","separator","fontSize","mt","component","RouterLink","to","endIcon","ml","xs","md","createSvgIcon","_jsx","d","BreadcrumbCollapsedButton","experimentalStyled","ButtonBase","skipSx","theme","_extends","display","marginLeft","marginRight","palette","mode","grey","borderRadius","boxShadow","shadows","emphasize","BreadcrumbCollapsedIcon","MoreHorizIcon","width","height","BreadcrumbCollapsed","props","styleProps","children","focusRipple","getBreadcrumbsUtilityClass","slot","generateUtilityClass","breadcrumbsClasses","generateUtilityClasses","BreadcrumbsRoot","Typography","name","overridesResolver","styles","li","root","BreadcrumbsOl","ol","flexWrap","alignItems","padding","margin","listStyle","BreadcrumbsSeparator","userSelect","insertSeparators","items","className","reduce","acc","current","index","length","concat","Breadcrumbs","React","inProps","ref","useThemeProps","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","other","_objectWithoutPropertiesLoose","expanded","setExpanded","classes","composeClasses","useUtilityClasses","listRef","allItems","toArray","filter","child","map","clsx","slice","onClick","focusable","querySelector","focus","renderItemsBeforeAndAfter"],"mappings":"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","file":"static/js/106.56f6a3e7.chunk.js","sourcesContent":["import { useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Breadcrumbs, Button, Container, Grid, Link, Typography } from '@material-ui/core';\nimport {\n  FinanceCostBreakdown,\n  FinanceOverview,\n  FinanceIncrementalSales,\n  FinanceProfitableProducts,\n  FinanceSalesByContinent,\n  FinanceSalesRevenue\n} from '../../components/dashboard/finance';\nimport useSettings from '../../hooks/useSettings';\nimport ChevronDownIcon from '../../icons/ChevronDown';\nimport ChevronRightIcon from '../../icons/ChevronRight';\nimport DownloadIcon from '../../icons/Download';\nimport gtm from '../../lib/gtm';\n\nconst Finance = () => {\n  const { settings } = useSettings();\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Dashboard: Finance | Material Kit Pro</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 8\n        }}\n      >\n        <Container maxWidth={settings.compact ? 'xl' : false}>\n          <Grid\n            container\n            justifyContent=\"space-between\"\n            spacing={3}\n          >\n            <Grid item>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"h5\"\n              >\n                Finance\n              </Typography>\n              <Breadcrumbs\n                aria-label=\"breadcrumb\"\n                separator={<ChevronRightIcon fontSize=\"small\" />}\n                sx={{ mt: 1 }}\n              >\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"/dashboard\"\n                  variant=\"subtitle2\"\n                >\n                  Dashboard\n                </Link>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"subtitle2\"\n                >\n                  Finance\n                </Typography>\n              </Breadcrumbs>\n            </Grid>\n            <Grid item>\n              <Button\n                endIcon={<DownloadIcon fontSize=\"small\" />}\n                variant=\"outlined\"\n              >\n                Export\n              </Button>\n              <Button\n                color=\"primary\"\n                endIcon={<ChevronDownIcon fontSize=\"small\" />}\n                sx={{ ml: 2 }}\n                variant=\"contained\"\n              >\n                Last month\n              </Button>\n            </Grid>\n          </Grid>\n          <Box sx={{ mt: 3 }}>\n            <Grid\n              container\n              spacing={3}\n            >\n              <Grid\n                item\n                xs={12}\n              >\n                <FinanceOverview />\n              </Grid>\n              <Grid\n                item\n                md={8}\n                xs={12}\n              >\n                {/* <FinanceSalesRevenue /> */}\n              </Grid>\n              <Grid\n                item\n                md={4}\n                xs={12}\n              >\n                <FinanceCostBreakdown />\n              </Grid>\n              <Grid\n                item\n                md={8}\n                xs={12}\n              >\n                <FinanceSalesByContinent />\n              </Grid>\n              <Grid\n                item\n                md={4}\n                xs={12}\n              >\n                <FinanceIncrementalSales />\n              </Grid>\n              <Grid\n                item\n                xs={12}\n              >\n                <FinanceProfitableProducts />\n              </Grid>\n            </Grid>\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default Finance;\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = experimentalStyled(ButtonBase, {}, {\n  skipSx: true\n})(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: theme.spacing(0.5),\n  marginRight: theme.spacing(0.5)\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = experimentalStyled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n/**\n * @ignore - internal component.\n */\n\nfunction BreadcrumbCollapsed(props) {\n  const styleProps = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, _extends({\n      focusRipple: true\n    }, props, {\n      styleProps: styleProps,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, {\n        styleProps: styleProps\n      })\n    }))\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\n\nconst BreadcrumbsRoot = experimentalStyled(Typography, {}, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return _extends({\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root);\n  }\n})({});\nconst BreadcrumbsOl = experimentalStyled('ol', {}, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = experimentalStyled('li', {}, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\n\nfunction insertSeparators(items, className, separator, styleProps) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        styleProps: styleProps,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n\n  const {\n    children,\n    className,\n    component = 'nav',\n    expandText = 'Show path',\n    itemsAfterCollapse = 1,\n    itemsBeforeCollapse = 1,\n    maxItems = 8,\n    separator = '/'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const styleProps = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  const listRef = React.useRef(null);\n\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    styleProps: styleProps\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      styleProps: styleProps,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, styleProps)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default Breadcrumbs;"],"sourceRoot":""}