{"version":3,"sources":["components/authentication/password-recovery/PasswordRecoveryAmplify.js","pages/authentication/PasswordRecovery.js"],"names":["PasswordRecoveryAmplify","mounted","useMounted","useAuth","passwordRecovery","useNavigate","initialValues","email","submit","validationSchema","Yup","shape","max","required","onSubmit","values","a","setErrors","setStatus","setSubmitting","console","log","customAxios","postCalls","status","toast","error","success","current","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","TextField","autoFocus","Boolean","fullWidth","helperText","label","margin","name","onBlur","onChange","type","value","variant","Box","sx","mt","FormHelperText","Button","color","disabled","size","platformIcons","Amplify","Auth0","Firebase","JWT","PasswordRecovery","platform","useEffect","gtm","push","event","backgroundColor","display","flexDirection","minHeight","AuthBanner","Container","maxWidth","py","justifyContent","to","Logo","height","width","mb","Card","CardContent","p","alignItems","Typography","gutterBottom","maxHeight","alt","src","flexGrow"],"mappings":"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","file":"static/js/110.e9640094.chunk.js","sourcesContent":["import { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Box, Button, FormHelperText, TextField } from '@material-ui/core';\nimport useAuth from '../../../hooks/useAuth';\nimport useMounted from '../../../hooks/useMounted';\nimport { customAxios } from '../../../mangement/apis/Axios';\nimport toast from 'react-hot-toast';\n\nconst PasswordRecoveryAmplify = () => {\n  const mounted = useMounted();\n  const { passwordRecovery } = useAuth();\n  const navigate = useNavigate();\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        submit: null\n      }}\n      validationSchema={Yup\n        .object()\n        .shape({\n          email: Yup\n            .string()\n            .email('Must be a valid email')\n            .max(255)\n            .required('Email is required')\n        })}\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n        try {\n          console.log(values)\n\n\n         const res= await customAxios.postCalls(\"register/forgot-password\", {\n            ...values,\n          });\n\n         if(res.status==404){\n          return toast.error(\"Invalid User\")\n         }\n\n         return toast.success(\"Reset Link sent to your email Succefully\")\n          // console.log(res)\n          // await passwordRecovery(values.email);\n\n          // navigate('/authentication/password-reset', {\n          //   state: {\n          //     username: values.email\n          //   }\n          // });\n        } catch (err) {\n          console.error(err);\n          if (mounted.current) {\n            setStatus({ success: false });\n            setErrors({ submit: err.message });\n            setSubmitting(false);\n          }\n        }\n      }}\n    >\n      {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n        <form\n          noValidate\n          onSubmit={handleSubmit}\n        >\n          <TextField\n            autoFocus\n            error={Boolean(touched.email && errors.email)}\n            fullWidth\n            helperText={touched.email && errors.email}\n            label=\"Email Address\"\n            margin=\"normal\"\n            name=\"email\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"email\"\n            value={values.email}\n            variant=\"outlined\"\n          />\n          {errors.submit && (\n            <Box sx={{ mt: 3 }}>\n              <FormHelperText error>\n                {errors.submit}\n              </FormHelperText>\n            </Box>\n          )}\n          <Box sx={{ mt: 3 }}>\n            <Button\n              color=\"primary\"\n              disabled={isSubmitting}\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n            >\n             Send\n            </Button>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default PasswordRecoveryAmplify;\n","import { useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Card, CardContent, Container, Typography } from '@material-ui/core';\nimport AuthBanner from '../../components/authentication/AuthBanner';\nimport { PasswordRecoveryAmplify } from '../../components/authentication/password-recovery';\nimport Logo from '../../components/Logo';\nimport useAuth from '../../hooks/useAuth';\nimport gtm from '../../lib/gtm';\n\nconst platformIcons = {\n  Amplify: '/static/icons/amplify.svg',\n  Auth0: '/static/icons/auth0.svg',\n  Firebase: '/static/icons/firebase.svg',\n  JWT: '/static/icons/jwt.svg'\n};\n\nconst PasswordRecovery = () => {\n  const { platform } = useAuth();\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Password Recovery | Material Kit Pro</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          display: 'flex',\n          flexDirection: 'column',\n          minHeight: '100vh'\n        }}\n      >\n        <AuthBanner />\n        <Container\n          maxWidth=\"sm\"\n          sx={{ py: 10 }}\n        >\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: 'center'\n            }}\n          >\n            <RouterLink to=\"/\">\n              <Logo\n                sx={{\n                  height: 40,\n                  width: 40\n                }}\n              />\n            </RouterLink>\n          </Box>\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: 'center',\n              mb: 8\n            }}\n          />\n          <Card>\n            <CardContent\n              sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                p: 4\n              }}\n            >\n              <Box\n                sx={{\n                  alignItems: 'center',\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  mb: 3\n                }}\n              >\n                <div>\n                  <Typography\n                    color=\"textPrimary\"\n                    gutterBottom\n                    variant=\"h4\"\n                  >\n                    Password Recovery\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"body2\"\n                  >\n                    Tell us your email so we can send you a reset link\n                  </Typography>\n                </div>\n                <Box\n                  sx={{\n                    height: 32,\n                    '& > img': {\n                      maxHeight: '100%',\n                      width: 'auto'\n                    }\n                  }}\n                >\n                  <img\n                    alt=\"Auth platform\"\n                    src={platformIcons[platform]}\n                  />\n                </Box>\n              </Box>\n              <Box\n                sx={{\n                  flexGrow: 1,\n                  mt: 3\n                }}\n              >\n                {platform === 'JWT' && <PasswordRecoveryAmplify />}\n              </Box>\n            </CardContent>\n          </Card>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default PasswordRecovery;\n"],"sourceRoot":""}