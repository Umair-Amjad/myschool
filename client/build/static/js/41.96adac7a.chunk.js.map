{"version":3,"sources":["components/dashboard/invoice/InvoiceListTable.js","components/dashboard/invoice/InvoicePDF.js","components/dashboard/invoice/InvoicePreview.js","pages/dashboard/InvoiceList.js","icons/Download.js","icons/Upload.js","icons/ArrowRight.js","icons/Plus.js","icons/PencilAlt.js","components/Label.js","__fakeApi__/invoiceApi.js"],"names":["statusOptions","label","value","sortOptions","getStatusLabel","invoiceStatus","console","log","canceled","color","text","paid","pending","Label","InvoiceListTable","props","invoices","other","useState","selectedInvoices","setSelectedInvoices","page","setPage","limit","setLimit","query","setQuery","sort","setSort","status","filters","setFilters","handleSelectAllInvoices","event","target","checked","map","invoice","id","filteredInvoices","filter","matches","containsQuery","forEach","property","customer","toLowerCase","includes","applyFilters","paginatedInvoices","slice","applyPagination","enableBulkActions","length","selectedSomeInvoices","selectedAllInvoices","Card","Box","sx","alignItems","display","flexWrap","m","p","maxWidth","width","TextField","fullWidth","InputProps","startAdornment","InputAdornment","position","Search","fontSize","onChange","placeholder","variant","name","select","SelectProps","native","option","prevFilters","statusOption","backgroundColor","mt","px","zIndex","Checkbox","indeterminate","Button","ml","Scrollbar","minWidth","Table","TableHead","TableRow","TableCell","padding","align","TableBody","isInvoiceSelected","hover","selected","invoiceId","prevSelected","Link","component","RouterLink","to","underline","Typography","email","numeral","totalAmount","format","currency","issueDate","IconButton","PencilAlt","ArrowRight","TablePagination","count","onPageChange","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions","styles","StyleSheet","create","h4","fontWeight","lineHeight","h6","subtitle2","body2","gutterBottom","marginBottom","header","flexDirection","justifyContent","brand","height","company","marginTop","references","billing","items","notes","table","tableHeader","tableBody","tableRow","borderBottomWidth","borderColor","borderStyle","tableCell1","tableCellN","alignRight","textAlign","InvoicePDF","size","style","source","dueDate","number","item","description","unitAmount","subtotalAmount","taxAmount","InvoicePreview","Paper","Grid","container","Logo","my","taxId","address","InvoiceList","mounted","useMounted","settings","useSettings","setInvoices","useEffect","gtm","push","getInvoices","useCallback","a","invoiceApi","data","current","error","minHeight","py","compact","spacing","aria-label","separator","mb","mx","startIcon","Download","createSvgIcon","xmlns","viewBox","fill","fillRule","d","clipRule","Upload","Plus","LabelRoot","experimentalStyled","theme","styleProps","palette","main","contrastText","borderRadius","shape","cursor","flexGrow","flexShrink","fontFamily","typography","pxToRem","fontWeightMedium","letterSpacing","paddingBottom","paddingLeft","paddingRight","paddingTop","textTransform","whiteSpace","children","now","Date","subHours","getTime","subDays","Promise","resolve"],"mappings":"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","file":"static/js/41.96adac7a.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  Checkbox,\n  IconButton,\n  InputAdornment,\n  Link,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport ArrowRightIcon from '../../../icons/ArrowRight';\nimport PencilAltIcon from '../../../icons/PencilAlt';\nimport SearchIcon from '../../../icons/Search';\nimport Label from '../../Label';\nimport Scrollbar from '../../Scrollbar';\n\nconst statusOptions = [\n  {\n    label: 'All',\n    value: 'all'\n  },\n  {\n    label: 'Paid',\n    value: 'paid'\n  },\n  {\n    label: 'Pending',\n    value: 'pending'\n  },\n  {\n    label: 'Canceled',\n    value: 'canceled'\n  }\n];\n\nconst sortOptions = [\n  {\n    label: 'Newest first',\n    value: 'createdAt|desc'\n  },\n  {\n    label: 'Oldest first',\n    value: 'createdAt|asc'\n  }\n];\n\nconst getStatusLabel = (invoiceStatus) => {\n    console.log(\"sta\", invoiceStatus);\n\n  const map = {\n    canceled: {\n      color: \"error\",\n      text: \"Canceled\",\n    },\n    paid: {\n      color: \"success\",\n      text: \"Paid\",\n    },\n    pending: {\n      color: \"warning\",\n      text: \"Pending\",\n    },\n  };\n\n  const { text, color } = map[invoiceStatus];\n\n  return <Label color={color}>{text}</Label>;\n};\n\nconst applyFilters = (invoices, query, filters) => invoices\n  .filter((invoice) => {\n    let matches = true;\n\n    if (query) {\n      const properties = ['name', 'email'];\n      let containsQuery = false;\n\n      properties.forEach((property) => {\n        if (invoice.customer[property].toLowerCase().includes(query.toLowerCase())) {\n          containsQuery = true;\n        }\n      });\n\n      if (!containsQuery) {\n        matches = false;\n      }\n    }\n\n    if (filters.status && invoice.status !== filters.status) {\n      matches = false;\n    }\n\n    return matches;\n  });\n\nconst applyPagination = (invoices, page, limit) => invoices\n  .slice(page * limit, page * limit + limit);\n\nconst InvoiceListTable = (props) => {\n  const { invoices, ...other } = props;\n  const [selectedInvoices, setSelectedInvoices] = useState([]);\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [query, setQuery] = useState('');\n  const [sort, setSort] = useState(sortOptions[0].value);\n  const [filters, setFilters] = useState({\n    status: null\n  });\n\n  const handleQueryChange = (event) => {\n    setQuery(event.target.value);\n  };\n\n  const handleStatusChange = (event) => {\n    let value = null;\n\n    if (event.target.value !== 'all') {\n      value = event.target.value;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      status: value\n    }));\n  };\n\n  const handleSortChange = (event) => {\n    setSort(event.target.value);\n  };\n\n  const handleSelectAllInvoices = (event) => {\n    setSelectedInvoices(event.target.checked\n      ? invoices.map((invoice) => invoice.id)\n      : []);\n  };\n\n  const handleSelectOneInvoice = (event, invoiceId) => {\n    if (!selectedInvoices.includes(invoiceId)) {\n      setSelectedInvoices((prevSelected) => [...prevSelected, invoiceId]);\n    } else {\n      setSelectedInvoices((prevSelected) => prevSelected.filter((id) => id !== invoiceId));\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value, 10));\n  };\n\n  // Usually query is done on backend with indexing solutions\n  const filteredInvoices = applyFilters(invoices, query, filters);\n  const paginatedInvoices = applyPagination(filteredInvoices, page, limit);\n  const enableBulkActions = selectedInvoices.length > 0;\n  const selectedSomeInvoices = selectedInvoices.length > 0\n    && selectedInvoices.length < invoices.length;\n  const selectedAllInvoices = selectedInvoices.length === invoices.length;\n\n  return (\n    <Card {...other}>\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          flexWrap: 'wrap',\n          m: -1,\n          p: 2\n        }}\n      >\n        <Box\n          sx={{\n            m: 1,\n            maxWidth: '100%',\n            width: 500\n          }}\n        >\n          <TextField\n            fullWidth\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon fontSize=\"small\" />\n                </InputAdornment>\n              )\n            }}\n            onChange={handleQueryChange}\n            placeholder=\"Search invoices by customer\"\n            value={query}\n            variant=\"outlined\"\n          />\n        </Box>\n        <Box\n          sx={{\n            m: 1,\n            maxWidth: '100%',\n            width: 240\n          }}\n        >\n          <TextField\n            fullWidth\n            label=\"Sort By\"\n            name=\"sort\"\n            onChange={handleSortChange}\n            select\n            SelectProps={{ native: true }}\n            value={sort}\n            variant=\"outlined\"\n          >\n            {sortOptions.map((option) => (\n              <option\n                key={option.value}\n                value={option.value}\n              >\n                {option.label}\n              </option>\n            ))}\n          </TextField>\n        </Box>\n        <Box\n          sx={{\n            m: 1,\n            maxWidth: '100%',\n            width: 240\n          }}\n        >\n          <TextField\n            fullWidth\n            label=\"Status\"\n            name=\"status\"\n            onChange={handleStatusChange}\n            select\n            SelectProps={{ native: true }}\n            value={filters.status || 'all'}\n            variant=\"outlined\"\n          >\n            {statusOptions.map((statusOption) => (\n              <option\n                key={statusOption.value}\n                value={statusOption.value}\n              >\n                {statusOption.label}\n              </option>\n            ))}\n          </TextField>\n        </Box>\n      </Box>\n      {enableBulkActions && (\n        <Box sx={{ position: 'relative' }}>\n          <Box\n            sx={{\n              backgroundColor: 'background.paper',\n              mt: '6px',\n              position: 'absolute',\n              px: '4px',\n              width: '100%',\n              zIndex: 2\n            }}\n          >\n            <Checkbox\n              checked={selectedAllInvoices}\n              color=\"primary\"\n              indeterminate={selectedSomeInvoices}\n              onChange={handleSelectAllInvoices}\n            />\n            <Button\n              color=\"primary\"\n              sx={{ ml: 2 }}\n              variant=\"outlined\"\n            >\n              Delete\n            </Button>\n            <Button\n              color=\"primary\"\n              sx={{ ml: 2 }}\n              variant=\"outlined\"\n            >\n              Edit\n            </Button>\n          </Box>\n        </Box>\n      )}\n      <Scrollbar>\n        <Box sx={{ minWidth: 1200 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedAllInvoices}\n                    color=\"primary\"\n                    indeterminate={selectedSomeInvoices}\n                    onChange={handleSelectAllInvoices}\n                  />\n                </TableCell>\n                <TableCell>\n                  Customer\n                </TableCell>\n                <TableCell>\n                  Status\n                </TableCell>\n                <TableCell>\n                  Amount\n                </TableCell>\n                <TableCell>\n                  ID\n                </TableCell>\n                <TableCell>\n                  Date\n                </TableCell>\n                <TableCell align=\"right\">\n                  Actions\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedInvoices.map((invoice) => {\n                // console.log(\"inv\",invoice)\n                const isInvoiceSelected = selectedInvoices.includes(invoice.id);\n\n                return (\n                  <TableRow\n                    hover\n                    key={invoice.id}\n                    selected={isInvoiceSelected}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isInvoiceSelected}\n                        color=\"primary\"\n                        onChange={(event) => handleSelectOneInvoice(event, invoice.id)}\n                        value={isInvoiceSelected}\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <Link\n                        color=\"textPrimary\"\n                        component={RouterLink}\n                        to=\"#\"\n                        underline=\"none\"\n                        variant=\"subtitle2\"\n                      >\n                        {invoice.customer.name}\n                      </Link>\n                      <Typography\n                        color=\"textSecondary\"\n                        variant=\"body2\"\n                      >\n                        {invoice.customer.email}\n                      </Typography>\n                    </TableCell>\n                    <TableCell>\n                      {getStatusLabel(invoice.status)}\n                    </TableCell>\n                    <TableCell>\n                      {numeral(invoice.totalAmount)\n                        .format(`${invoice.currency}0,0.00`)}\n                    </TableCell>\n                    <TableCell>\n                      {invoice.id}\n                    </TableCell>\n                    <TableCell>\n                      {format(invoice.issueDate, 'dd/MM/yyyy')}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <IconButton\n                        component={RouterLink}\n                        to=\"#\"\n                      >\n                        <PencilAltIcon fontSize=\"small\" />\n                      </IconButton>\n                      <IconButton\n                        component={RouterLink}\n                        to=\"/dashboard/invoices/1\"\n                      >\n                        <ArrowRightIcon fontSize=\"small\" />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Box>\n      </Scrollbar>\n      <TablePagination\n        component=\"div\"\n        count={filteredInvoices.length}\n        onPageChange={handlePageChange}\n        onRowsPerPageChange={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nInvoiceListTable.propTypes = {\n  invoices: PropTypes.array.isRequired\n};\n\nexport default InvoiceListTable;\n","import PropTypes from 'prop-types';\nimport { format } from 'date-fns';\nimport numeral from 'numeral';\nimport { Document, Page, View, Text, Image, StyleSheet } from '@react-pdf/renderer';\n\nconst COL1_WIDTH = 60;\nconst COLN_WIDTH = (100 - COL1_WIDTH) / 2;\n\nconst styles = StyleSheet.create({\n  page: {\n    backgroundColor: '#ffffff',\n    padding: 24\n  },\n  h4: {\n    fontSize: 14,\n    fontWeight: 600,\n    lineHeight: 1.235\n  },\n  h6: {\n    fontSize: 12,\n    fontWeight: 600,\n    lineHeight: 1.6\n  },\n  subtitle2: {\n    fontSize: 10,\n    fontWeight: 500,\n    lineHeight: 1.57\n  },\n  body2: {\n    fontSize: 10,\n    lineHeight: 1.43\n  },\n  gutterBottom: {\n    marginBottom: 4\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  brand: {\n    height: 32,\n    width: 32\n  },\n  company: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 32\n  },\n  references: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 32\n  },\n  billing: {\n    marginTop: 32\n  },\n  items: {\n    marginTop: 32\n  },\n  notes: {\n    marginTop: 32\n  },\n  table: {\n    display: 'flex',\n    width: 'auto'\n  },\n  tableHeader: {},\n  tableBody: {},\n  tableRow: {\n    borderBottomWidth: 1,\n    borderColor: '#EEEEEE',\n    borderStyle: 'solid',\n    flexDirection: 'row'\n  },\n  tableCell1: {\n    padding: 6,\n    width: `${COL1_WIDTH}%`\n  },\n  tableCellN: {\n    padding: 6,\n    width: `${COLN_WIDTH}%`\n  },\n  alignRight: {\n    textAlign: 'right'\n  }\n});\n\nconst InvoicePDF = (props) => {\n\n  const { invoice } = props;\n\n  return (\n    <Document>\n      <Page\n        size=\"A4\"\n        style={styles.page}\n      >\n        <View style={styles.header}>\n          <View>\n            <Image\n              source=\"/static/logo.jpg\"\n              style={styles.brand}\n            />\n            <Text style={styles.h6}>\n              www.devias.io\n            </Text>\n          </View>\n          <View>\n            <Text style={styles.h4}>\n              {invoice.status}\n            </Text>\n            <Text style={styles.subtitle2}>\n              Invoice # 3593865\n            </Text>\n          </View>\n        </View>\n        <View style={styles.company}>\n          <View>\n            <Text style={styles.body2}>\n              Street King William, 123\n            </Text>\n            <Text style={styles.body2}>\n              Level 2, C, 442456\n            </Text>\n            <Text style={styles.body2}>\n              San Francisco, CA, Upppp\n            </Text>\n          </View>\n          <View>\n            <Text style={styles.body2}>\n              Company No. 4675933\n            </Text>\n            <Text style={styles.body2}>\n              EU VAT No. 949 67545 45\n            </Text>\n          </View>\n          <View>\n            <Text style={styles.body2}>\n              accounts@devias.io\n            </Text>\n            <Text style={styles.body2}>\n              (+40) 652 3456 23\n            </Text>\n          </View>\n        </View>\n        <View style={styles.references}>\n          <View>\n            <Text style={[styles.subtitle2, styles.gutterBottom]}>\n              Due Date\n            </Text>\n            <Text style={styles.body2}>\n              {format(invoice.dueDate, 'dd MMM yyyy')}\n            </Text>\n          </View>\n          <View>\n            <Text style={[styles.subtitle2, styles.gutterBottom]}>\n              Date of issue\n            </Text>\n            <Text style={styles.body2}>\n              {format(invoice.issueDate, 'dd MMM yyyy')}\n            </Text>\n          </View>\n          <View>\n            <Text style={[styles.subtitle2, styles.gutterBottom]}>\n              Number\n            </Text>\n            <Text style={styles.body2}>\n              {invoice.number}\n            </Text>\n          </View>\n        </View>\n        <View style={styles.billing}>\n          <Text style={[styles.subtitle2, styles.gutterBottom]}>\n            Billed to\n          </Text>\n          <Text style={styles.body2}>\n            Tracey Herman\n          </Text>\n          <Text style={styles.body2}>\n            Countdown Grey Lynn\n          </Text>\n          <Text style={styles.body2}>\n            6934656584231\n          </Text>\n          <Text style={styles.body2}>\n            271 Richmond Rd, Grey Lynn, Auckland 1022, New Zealand\n          </Text>\n        </View>\n        <View style={styles.items}>\n          <View style={styles.table}>\n            <View style={styles.tableHeader}>\n              <View style={styles.tableRow}>\n                <View style={styles.tableCell1}>\n                  <Text style={styles.h6}>\n                    Description\n                  </Text>\n                </View>\n                <View style={styles.tableCellN} />\n                <View style={styles.tableCellN}>\n                  <Text style={[styles.h6, styles.alignRight]}>\n                    Price\n                  </Text>\n                </View>\n              </View>\n            </View>\n            <View style={styles.tableBody}>\n              {invoice.items.map((item) => (\n                <View\n                  style={styles.tableRow}\n                  key={item.id}\n                >\n                  <View style={styles.tableCell1}>\n                    <Text style={styles.body2}>\n                      {item.description}\n                    </Text>\n                  </View>\n                  <View style={styles.tableCellN} />\n                  <View style={styles.tableCellN}>\n                    <Text style={[styles.body2, styles.alignRight]}>\n                      {numeral(item.unitAmount)\n                        .format(`${item.currency}0,0.00`)}\n                    </Text>\n                  </View>\n                </View>\n              ))}\n              <View style={styles.tableRow}>\n                <View style={styles.tableCell1} />\n                <View style={styles.tableCellN}>\n                  <Text style={styles.body2}>\n                    Subtotal\n                  </Text>\n                </View>\n                <View style={styles.tableCellN}>\n                  <Text style={[styles.body2, styles.alignRight]}>\n                    {numeral(invoice.subtotalAmount)\n                      .format(`${invoice.currency}0,0.00`)}\n                  </Text>\n                </View>\n              </View>\n              <View style={styles.tableRow}>\n                <View style={styles.tableCell1} />\n                <View style={styles.tableCellN}>\n                  <Text style={styles.body2}>\n                    Taxes\n                  </Text>\n                </View>\n                <View style={styles.tableCellN}>\n                  <Text style={[styles.body2, styles.alignRight]}>\n                    {numeral(invoice.taxAmount)\n                      .format(`${invoice.currency}0,0.00`)}\n                  </Text>\n                </View>\n              </View>\n              <View style={styles.tableRow}>\n                <View style={styles.tableCell1} />\n                <View style={styles.tableCellN}>\n                  <Text style={styles.body2}>\n                    Total\n                  </Text>\n                </View>\n                <View style={styles.tableCellN}>\n                  <Text style={[styles.body2, styles.alignRight]}>\n                    {numeral(invoice.totalAmount)\n                      .format(`${invoice.currency}0,0.00`)}\n                  </Text>\n                </View>\n              </View>\n            </View>\n          </View>\n        </View>\n        <View style={styles.notes}>\n          <Text style={[styles.h6, styles.gutterBottom]}>\n            Notes\n          </Text>\n          <Text style={styles.body2}>\n            Please make sure you have the right bank registration number\n            as I\n            had issues before and make sure you guys cover transfer\n            expenses.\n          </Text>\n        </View>\n      </Page>\n    </Document>\n  );\n};\n\nInvoicePDF.propTypes = {\n  invoice: PropTypes.object.isRequired\n};\n\nexport default InvoicePDF;\n","import PropTypes from 'prop-types';\nimport { format } from 'date-fns';\nimport numeral from 'numeral';\nimport {\n  Box,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport Logo from '../../Logo';\nimport Scrollbar from '../../Scrollbar';\n\nconst InvoicePreview = (props) => {\n  const { invoice, ...other } = props;\n\n  return (\n    <Paper {...other}>\n      <Scrollbar>\n        <Box\n          sx={{\n            minWidth: 800,\n            p: 6\n          }}\n        >\n          <Grid\n            container\n            justifyContent=\"space-between\"\n          >\n            <Grid item>\n              <Logo />\n              <Typography\n                color=\"textPrimary\"\n                variant=\"h6\"\n              >\n                www.devias.io\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Typography\n                align=\"right\"\n                color=\"textPrimary\"\n                variant=\"h4\"\n              >\n                {invoice.status}\n              </Typography>\n              <Typography\n                align=\"right\"\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                Invoice # 3593865\n              </Typography>\n            </Grid>\n          </Grid>\n          <Box sx={{ my: 4 }}>\n            <Grid\n              container\n              justifyContent=\"space-between\"\n            >\n              <Grid item>\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"body2\"\n                >\n                  Street King William, 123\n                  <br />\n                  Level 2, C, 442456\n                  <br />\n                  San Francisco, CA, USA\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"body2\"\n                >\n                  Company No. 4675933\n                  <br />\n                  EU VAT No. 949 67545 45\n                  <br />\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography\n                  align=\"right\"\n                  color=\"textPrimary\"\n                  variant=\"body2\"\n                >\n                  accounts@devias.io\n                  <br />\n                  (+40) 652 3456 23\n                </Typography>\n              </Grid>\n            </Grid>\n          </Box>\n          <Box sx={{ my: 4 }}>\n            <Grid\n              container\n              justifyContent=\"space-between\"\n            >\n              <Grid item>\n                <Typography\n                  color=\"textPrimary\"\n                  gutterBottom\n                  variant=\"subtitle2\"\n                >\n                  Due date\n                </Typography>\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"body2\"\n                >\n                  {format(invoice.dueDate, 'dd MMM yyyy')}\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography\n                  color=\"textPrimary\"\n                  gutterBottom\n                  variant=\"subtitle2\"\n                >\n                  Date of issue\n                </Typography>\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"body2\"\n                >\n                  {format(invoice.issueDate, 'dd MMM yyyy')}\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography\n                  color=\"textPrimary\"\n                  gutterBottom\n                  variant=\"subtitle2\"\n                >\n                  Number\n                </Typography>\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"body2\"\n                >\n                  {invoice.number}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Box>\n          <Box sx={{ my: 4 }}>\n            <Typography\n              color=\"textPrimary\"\n              gutterBottom\n              variant=\"subtitle2\"\n            >\n              Billed to\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"body2\"\n            >\n              {invoice.customer.name}\n              <br />\n              {invoice.customer.company}\n              <br />\n              {invoice.customer.taxId}\n              <br />\n              {invoice.customer.address}\n            </Typography>\n          </Box>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  Description\n                </TableCell>\n                <TableCell />\n                <TableCell align=\"right\">\n                  Unit Price\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {invoice.items.map((items) => (\n                <TableRow key={items.id}>\n                  <TableCell>\n                    {items.description}\n                  </TableCell>\n                  <TableCell />\n                  <TableCell align=\"right\">\n                    {numeral(items.unitAmount)\n                      .format(`${items.currency}0,0.00`)}\n                  </TableCell>\n                </TableRow>\n              ))}\n              <TableRow>\n                <TableCell />\n                <TableCell>\n                  <Typography\n                    color=\"textPrimary\"\n                    gutterBottom\n                    variant=\"subtitle2\"\n                  >\n                    Subtotal\n                  </Typography>\n                </TableCell>\n                <TableCell align=\"right\">\n                  {numeral(invoice.subtotalAmount)\n                    .format(`${invoice.currency}0,0.00`)}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell />\n                <TableCell>\n                  <Typography\n                    color=\"textPrimary\"\n                    gutterBottom\n                    variant=\"subtitle2\"\n                  >\n                    Taxes\n                  </Typography>\n                </TableCell>\n                <TableCell align=\"right\">\n                  {numeral(invoice.taxAmount)\n                    .format(`${invoice.currency}0,0.00`)}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell />\n                <TableCell>\n                  <Typography\n                    color=\"textPrimary\"\n                    gutterBottom\n                    variant=\"subtitle2\"\n                  >\n                    Total\n                  </Typography>\n                </TableCell>\n                <TableCell align=\"right\">\n                  {numeral(invoice.totalAmount)\n                    .format(`${invoice.currency}0,0.00`)}\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n          <Box sx={{ mt: 2 }}>\n            <Typography\n              color=\"textPrimary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              Notes\n            </Typography>\n            <Typography\n              color=\"textSecondary\"\n              variant=\"body2\"\n            >\n              Please make sure you have the right bank registration number\n              as I\n              had issues before and make sure you guys cover transfer\n              expenses.\n            </Typography>\n          </Box>\n        </Box>\n      </Scrollbar>\n    </Paper>\n  );\n};\n\nInvoicePreview.propTypes = {\n  invoice: PropTypes.object.isRequired\n};\n\nexport default InvoicePreview;\n","import { useState, useEffect, useCallback } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Breadcrumbs, Button, Container, Grid, Link, Typography } from '@material-ui/core';\nimport { invoiceApi } from '../../__fakeApi__/invoiceApi';\nimport { InvoiceListTable } from '../../components/dashboard/invoice';\nimport useMounted from '../../hooks/useMounted';\nimport useSettings from '../../hooks/useSettings';\nimport ChevronRightIcon from '../../icons/ChevronRight';\nimport DownloadIcon from '../../icons/Download';\nimport PlusIcon from '../../icons/Plus';\nimport UploadIcon from '../../icons/Upload';\nimport gtm from '../../lib/gtm';\n\nconst InvoiceList = () => {\n  const mounted = useMounted();\n  const { settings } = useSettings();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  const getInvoices = useCallback(async () => {\n    try {\n      const data = await invoiceApi.getInvoices();\n\n      if (mounted.current) {\n        setInvoices(data);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [mounted]);\n\n  useEffect(() => {\n    getInvoices();\n  }, [getInvoices]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Dashboard: Invoice List | Material Kit Pro</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 8\n        }}\n      >\n        <Container maxWidth={settings.compact ? 'xl' : false}>\n          <Grid\n            container\n            justifyContent=\"space-between\"\n            spacing={3}\n          >\n            <Grid item>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"h5\"\n              >\n                Invoice List\n              </Typography>\n              <Breadcrumbs\n                aria-label=\"breadcrumb\"\n                separator={<ChevronRightIcon fontSize=\"small\" />}\n                sx={{ mt: 1 }}\n              >\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"/dashboard\"\n                  variant=\"subtitle2\"\n                >\n                  Dashboard\n                </Link>\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"/dashboard\"\n                  variant=\"subtitle2\"\n                >\n                  Management\n                </Link>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"subtitle2\"\n                >\n                  Invoices\n                </Typography>\n              </Breadcrumbs>\n              <Box\n                sx={{\n                  mb: -1,\n                  mx: -1,\n                  mt: 1\n                }}\n              >\n                <Button\n                  color=\"primary\"\n                  startIcon={<UploadIcon fontSize=\"small\" />}\n                  sx={{ m: 1 }}\n                  variant=\"text\"\n                >\n                  Import\n                </Button>\n                <Button\n                  color=\"primary\"\n                  startIcon={<DownloadIcon fontSize=\"small\" />}\n                  sx={{ m: 1 }}\n                  variant=\"text\"\n                >\n                  Export\n                </Button>\n              </Box>\n            </Grid>\n            <Grid item>\n              <Box sx={{ m: -1 }}>\n                <Button\n                  color=\"primary\"\n                  startIcon={<PlusIcon fontSize=\"small\" />}\n                  sx={{ m: 1 }}\n                  variant=\"contained\"\n                >\n                  New Invoice\n                </Button>\n              </Box>\n            </Grid>\n          </Grid>\n          <Box sx={{ mt: 3 }}>\n            <InvoiceListTable invoices={invoices} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default InvoiceList;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Download = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Download'\n);\n\nexport default Download;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Upload = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM6.293 6.707a1 1 0 010-1.414l3-3a1 1 0 011.414 0l3 3a1 1 0 01-1.414 1.414L11 5.414V13a1 1 0 11-2 0V5.414L7.707 6.707a1 1 0 01-1.414 0z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Upload'\n);\n\nexport default Upload;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst ArrowRight = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'ArrowRight'\n);\n\nexport default ArrowRight;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Plus = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Plus'\n);\n\nexport default Plus;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst PencilAlt = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z\" />\n    <path\n      fillRule=\"evenodd\"\n      d=\"M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'PencilAlt'\n);\n\nexport default PencilAlt;\n","import PropTypes from 'prop-types';\nimport { experimentalStyled } from '@material-ui/core/styles';\n\nconst LabelRoot = experimentalStyled('span')((({ theme, styleProps }) => {\n  const backgroundColor = theme.palette[styleProps.color].main;\n  const color = theme.palette[styleProps.color].contrastText;\n\n  return {\n    alignItems: 'center',\n    backgroundColor,\n    borderRadius: theme.shape.borderRadius,\n    color,\n    cursor: 'default',\n    display: 'inline-flex',\n    flexGrow: 0,\n    flexShrink: 0,\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(11),\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    paddingBottom: theme.spacing(0.5),\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    paddingTop: theme.spacing(0.5),\n    textTransform: 'uppercase',\n    whiteSpace: 'nowrap'\n  };\n}));\n\nconst Label = (props) => {\n  const { color = 'success', children, ...other } = props;\n\n  const styleProps = { color };\n\n  return (\n    <LabelRoot\n      styleProps={styleProps}\n      {...other}\n    >\n      {children}\n    </LabelRoot>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.oneOf([\n   \"primary\",\n    'error',\n    'warning',\n    'success'\n  ])\n};\n\nexport default Label;\n","import { subHours, subDays } from 'date-fns';\n\nconst now = new Date();\n\nclass InvoiceApi {\n  getInvoices() {\n    const invoices = [\n      {\n        id: '5ecb868d0f437390ef3ac62c',\n        currency: '$',\n        customer: {\n          email: 'contact@anahenisky.io',\n          name: 'Ana Henisky'\n        },\n        issueDate: subHours(now, 1).getTime(),\n        status: 'paid',\n        totalAmount: 55.50\n      },\n      {\n        id: '5ecb868ada8deedee0638502',\n        currency: '$',\n        customer: {\n          email: 'sales@matt-jason.com',\n          name: 'Matt Jason'\n        },\n        issueDate: subDays(subHours(now, 5), 2).getTime(),\n        status: 'pending',\n        totalAmount: 253.76\n      },\n      {\n        id: '5ecb868700aba84d0f1c0e48',\n        currency: '$',\n        customer: {\n          email: 'support@terrythomas.io',\n          name: 'Terry Thomas'\n        },\n        issueDate: subDays(subHours(now, 4), 6).getTime(),\n        status: 'canceled',\n        totalAmount: 781.50\n      },\n      {\n        id: '5ecb8682038e1ddf4e868764',\n        currency: '$',\n        customer: {\n          email: 'contact@triv-shopper.co.uk',\n          name: 'Triv Shopper'\n        },\n        issueDate: subDays(subHours(now, 2), 15).getTime(),\n        status: 'paid',\n        totalAmount: 96.64\n      }\n    ];\n\n    return Promise.resolve(invoices);\n  }\n\n  getInvoice() {\n    const invoice = {\n      id: '5ecb86785312dcc69b5799ad',\n      currency: '$',\n      customer: {\n        address: '271 Richmond Rd, Grey Lynn, Auckland 1022, New Zealand',\n        company: 'Countdown Grey Lynn',\n        email: 'contact@anahenisky.io',\n        name: 'Ana Henisky',\n        taxId: '6934656584231'\n      },\n      dueDate: now.getTime(),\n      issueDate: subHours(now, 1).getTime(),\n      items: [\n        {\n          id: '5ecb8694db1760a701dfbf74',\n          currency: '$',\n          description: 'Freelancer Subscription (12/05/2019 - 11/06/2019)',\n          unitAmount: 55.50\n        }\n      ],\n      number: 'DEV-9483',\n      status: 'paid',\n      subtotalAmount: 50.00,\n      taxAmount: 5.50,\n      totalAmount: 55.50\n    };\n\n    return Promise.resolve(invoice);\n  }\n}\n\nexport const invoiceApi = new InvoiceApi();\n"],"sourceRoot":""}