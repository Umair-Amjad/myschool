{"version":3,"sources":["../node_modules/@material-ui/core/ClickAwayListener/ClickAwayListener.js","../node_modules/@material-ui/core/AvatarGroup/avatarGroupClasses.js","../node_modules/@material-ui/core/AvatarGroup/AvatarGroup.js","components/dashboard/chat/ChatContactSearch.js","components/dashboard/chat/ChatMessage.js","components/dashboard/chat/ChatMessageAdd.js","components/dashboard/chat/ChatMessages.js","components/dashboard/chat/ChatThreadItem.js","components/dashboard/chat/ChatThreadList.js","components/dashboard/chat/ChatSidebar.js","components/dashboard/chat/ChatThreadComposer.js","icons/Phone.js","components/dashboard/chat/ChatThreadToolbar.js","components/dashboard/chat/ChatThread.js","pages/dashboard/Chat.js","icons/PencilAlt.js","icons/Trash.js","icons/DotsHorizontal.js","icons/Archive.js","icons/Ban.js","icons/Camera.js"],"names":["mapEventPropToEvent","eventProp","substring","toLowerCase","ClickAwayListener","props","children","disableReactTree","mouseEvent","onClickAway","touchEvent","movedRef","React","nodeRef","activatedRef","syntheticEventRef","setTimeout","current","handleRef","useForkRef","ref","handleClickAway","useEventCallback","event","insideReactTree","doc","ownerDocument","documentElement","clientWidth","clientX","clientHeight","clientY","clickedRootScrollbar","composedPath","indexOf","contains","target","createHandleSynthetic","handlerName","childrenPropsHandler","childrenProps","mappedTouchEvent","handleTouchMove","addEventListener","removeEventListener","mappedMouseEvent","_jsx","getAvatarGroupUtilityClass","slot","generateUtilityClass","avatarGroupClasses","generateUtilityClasses","SPACINGS","small","medium","AvatarGroupRoot","experimentalStyled","name","overridesResolver","styles","_extends","avatar","root","theme","border","palette","background","default","boxSizing","marginLeft","AvatarGroupAvatar","Avatar","AvatarGroup","inProps","useThemeProps","childrenProp","className","max","spacing","variant","other","_objectWithoutPropertiesLoose","clampedMax","styleProps","classes","composeClasses","useUtilityClasses","toArray","filter","child","extraAvatars","length","undefined","_jsxs","clsx","style","slice","reverse","map","ChatContactSearch","forwardRef","isFocused","onChange","onFocus","onSelect","query","results","displayResults","Box","sx","px","alignItems","backgroundColor","borderRadius","display","height","Search","color","fontSize","flexGrow","ml","Input","fullWidth","disableUnderline","placeholder","value","mt","Typography","List","result","ListItem","button","onClick","handleSelect","ListItemAvatar","src","width","ListItemText","primary","primaryTypographyProps","noWrap","id","defaultProps","ChatMessage","body","contentType","createdAt","senderAvatar","senderName","senderType","useState","expandMedia","setExpandMedia","mb","flexDirection","maxWidth","mr","boxShadow","py","Link","component","RouterLink","to","cursor","alt","justifyContent","formatDistanceToNowStrict","large","onClose","ChatMessageAdd","disabled","onSend","fileInputRef","useRef","user","useAuth","setBody","handleAttach","click","handleSend","flexShrink","xs","sm","TextField","onKeyUp","code","size","Tooltip","title","IconButton","Divider","orientation","edge","hidden","type","ChatMessages","messages","participants","rootRef","scrollToBottom","_container","scrollTop","scrollHeight","useEffect","Scrollbar","options","suppressScrollX","p","message","participant","find","_participant","senderId","ChatThreadItem","active","thread","details","currentUserId","otherParticipants","displayNames","reduce","names","join","displayText","lastMessage","sender","getDetails","main","secondary","secondaryTypographyProps","unreadCount","Chip","label","minWidth","ChatThreadList","useSelector","state","chat","threads","activeThreadId","navigate","useNavigate","allIds","threadId","threadKey","byId","username","ChatSidebar","isSearchFocused","setIsSearchFocused","searchQuery","setSearchQuery","searchResults","setSearchResults","handleSearchChange","a","chatApi","searchContacts","data","console","error","borderRight","borderColor","Cog","PencilAlt","ChatThreadComposer","onAddRecipient","onRemoveRecipient","recipients","containerRef","setQuery","filteredSearchResults","recipientIds","acc","recipient","includes","getFilteredSearchResults","onDelete","recipientId","onBlur","Popper","anchorEl","open","placement","Paper","textAlign","gutterBottom","pt","contact","Phone","createSvgIcon","xmlns","viewBox","fill","d","ParticipantAvatar","ChatThreadToolbar","moreRef","openMenu","setOpenMenu","borderBottom","divider","minHeight","Camera","DotsHorizontal","Menu","keepMounted","elevation","MenuItem","ListItemIcon","Ban","Trash","Archive","Bell","ChatThread","dispatch","useDispatch","useParams","unreadMessages","threadSelector","getParticipants","getThread","resetActiveThread","markThreadAsSeen","mode","handleSendMessage","addRecipient","removeRecipient","overflow","Chat","gtm","push","getThreads","fillRule","clipRule"],"mappings":"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","file":"static/js/57.ea66d6d9.chunk.js","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, exactProp } from '@material-ui/utils';\nimport ownerDocument from '../utils/ownerDocument';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback'; // TODO: return `EventHandlerName extends `on${infer EventName}` ? Lowercase<EventName> : never` once generatePropTypes runs with TS 4.1\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\n\nfunction clickedRootScrollbar(event, doc) {\n  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;\n}\n\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n *\n * Demos:\n *\n * - [Click Away Listener](https://material-ui.com/components/click-away-listener/)\n * - [Menus](https://material-ui.com/components/menus/)\n *\n * API:\n *\n * - [ClickAwayListener API](https://material-ui.com/api/click-away-listener/)\n */\nfunction ClickAwayListener(props) {\n  const {\n    children,\n    disableReactTree = false,\n    mouseEvent = 'onClick',\n    onClickAway,\n    touchEvent = 'onTouchEnd'\n  } = props;\n  const movedRef = React.useRef(false);\n  const nodeRef = React.useRef(null);\n  const activatedRef = React.useRef(false);\n  const syntheticEventRef = React.useRef(false);\n  React.useEffect(() => {\n    // Ensure that this component is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n    setTimeout(() => {\n      activatedRef.current = true;\n    }, 0);\n    return () => {\n      activatedRef.current = false;\n    };\n  }, []);\n  const handleRef = useForkRef( // @ts-expect-error TODO upstream fix\n  children.ref, nodeRef); // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviors like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n\n  const handleClickAway = useEventCallback(event => {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    const insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false;\n    const doc = ownerDocument(nodeRef.current); // 1. IE11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n\n    if (!activatedRef.current || !nodeRef.current || 'clientX' in event && clickedRootScrollbar(event, doc)) {\n      return;\n    } // Do not act if user performed touchmove\n\n\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n\n    let insideDOM; // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      insideDOM = !doc.documentElement.contains( // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target) || nodeRef.current.contains( // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target);\n    }\n\n    if (!insideDOM && (disableReactTree || !insideReactTree)) {\n      onClickAway(event);\n    }\n  }); // Keep track of mouse/touch events that bubbled up through the portal.\n\n  const createHandleSynthetic = handlerName => event => {\n    syntheticEventRef.current = true;\n    const childrenPropsHandler = children.props[handlerName];\n\n    if (childrenPropsHandler) {\n      childrenPropsHandler(event);\n    }\n  };\n\n  const childrenProps = {\n    ref: handleRef\n  };\n\n  if (touchEvent !== false) {\n    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);\n  }\n\n  React.useEffect(() => {\n    if (touchEvent !== false) {\n      const mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      const doc = ownerDocument(nodeRef.current);\n\n      const handleTouchMove = () => {\n        movedRef.current = true;\n      };\n\n      doc.addEventListener(mappedTouchEvent, handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return () => {\n        doc.removeEventListener(mappedTouchEvent, handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, touchEvent]);\n\n  if (mouseEvent !== false) {\n    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);\n  }\n\n  React.useEffect(() => {\n    if (mouseEvent !== false) {\n      const mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      const doc = ownerDocument(nodeRef.current);\n      doc.addEventListener(mappedMouseEvent, handleClickAway);\n      return () => {\n        doc.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: /*#__PURE__*/React.cloneElement(children, childrenProps)\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * If `true`, the React tree is ignored and only the DOM tree is considered.\n   * This prop changes how portaled elements are handled.\n   * @default false\n   */\n  disableReactTree: PropTypes.bool,\n\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   * @default 'onClick'\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', false]),\n\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   * @default 'onTouchEnd'\n   */\n  touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\n\nexport default ClickAwayListener;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getAvatarGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatarGroup', slot);\n}\nconst avatarGroupClasses = generateUtilityClasses('MuiAvatarGroup', ['root', 'avatar']);\nexport default avatarGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Avatar from '../Avatar';\nimport avatarGroupClasses, { getAvatarGroupUtilityClass } from './avatarGroupClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst SPACINGS = {\n  small: -16,\n  medium: null\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar']\n  };\n  return composeClasses(slots, getAvatarGroupUtilityClass, classes);\n};\n\nconst AvatarGroupRoot = experimentalStyled('div', {}, {\n  name: 'MuiAvatarGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${avatarGroupClasses.avatar}`]: styles.avatar\n  }, styles.root)\n})(({\n  theme\n}) => ({\n  [`& .MuiAvatar-root`]: {\n    border: `2px solid ${theme.palette.background.default}`,\n    boxSizing: 'content-box',\n    marginLeft: -8,\n    '&:last-child': {\n      marginLeft: 0\n    }\n  },\n\n  /* Styles applied to the root element. */\n  display: 'flex',\n  flexDirection: 'row-reverse'\n}));\nconst AvatarGroupAvatar = experimentalStyled(Avatar, {}, {\n  name: 'MuiAvatarGroup',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})(({\n  theme\n}) => ({\n  border: `2px solid ${theme.palette.background.default}`,\n  boxSizing: 'content-box',\n  marginLeft: -8,\n  '&:last-child': {\n    marginLeft: 0\n  }\n}));\nconst AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatarGroup'\n  });\n\n  const {\n    children: childrenProp,\n    className,\n    max = 5,\n    spacing = 'medium',\n    variant = 'circular'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"max\", \"spacing\", \"variant\"]);\n\n  const clampedMax = max < 2 ? 2 : max;\n\n  const styleProps = _extends({}, props, {\n    max,\n    spacing,\n    variant\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  const children = React.Children.toArray(childrenProp).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  });\n  const extraAvatars = children.length > clampedMax ? children.length - clampedMax + 1 : 0;\n  const marginLeft = spacing && SPACINGS[spacing] !== undefined ? SPACINGS[spacing] : -spacing;\n  return /*#__PURE__*/_jsxs(AvatarGroupRoot, _extends({\n    styleProps: styleProps,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [extraAvatars ? /*#__PURE__*/_jsxs(AvatarGroupAvatar, {\n      styleProps: styleProps,\n      className: classes.avatar,\n      style: {\n        marginLeft\n      },\n      variant: variant,\n      children: [\"+\", extraAvatars]\n    }) : null, children.slice(0, children.length - extraAvatars).reverse().map(child => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(child.props.className, classes.avatar),\n        style: _extends({\n          marginLeft\n        }, child.props.style),\n        variant: child.props.variant || variant\n      });\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The avatars to stack.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Max avatars to show before +x.\n   * @default 5\n   */\n  max: chainPropTypes(PropTypes.number, props => {\n    if (props.max < 2) {\n      return new Error(['Material-UI: The prop `max` should be equal to 2 or above.', 'A value below is clamped to 2.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Spacing between avatars.\n   * @default 'medium'\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The variant to use.\n   * @default 'circular'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default AvatarGroup;","import { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  ClickAwayListener,\n  Input,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography\n} from '@material-ui/core';\nimport SearchIcon from '../../../icons/Search';\n\nconst ChatContactSearch = forwardRef((props, ref) => {\n  const { isFocused, onChange, onClickAway, onFocus, onSelect, query, results, ...other } = props;\n\n  const handleSelect = (result) => {\n    if (onSelect) {\n      onSelect(result);\n    }\n  };\n\n  const displayResults = query && isFocused;\n\n  return (\n    <ClickAwayListener onClickAway={onClickAway}>\n      <Box\n        ref={ref}\n        sx={{ px: 1 }}\n        {...other}\n      >\n        <Box\n          sx={{\n            alignItems: 'center',\n            backgroundColor: 'background.default',\n            borderRadius: 22,\n            display: 'flex',\n            height: 44,\n            px: 2\n          }}\n        >\n          <SearchIcon\n            color=\"action\"\n            fontSize=\"small\"\n          />\n          <Box\n            sx={{\n              flexGrow: 1,\n              ml: 2\n            }}\n          >\n            <Input\n              fullWidth\n              disableUnderline\n              onChange={onChange}\n              onFocus={onFocus}\n              placeholder=\"Search contacts\"\n              value={query}\n            />\n          </Box>\n        </Box>\n        {displayResults && (\n          <Box sx={{ mt: 2 }}>\n            <Typography\n              color=\"textSecondary\"\n              variant=\"subtitle2\"\n            >\n              Contacts\n            </Typography>\n            <List>\n              {results.map((result) => (\n                <ListItem\n                  button\n                  key={result.id}\n                  onClick={() => handleSelect(result)}\n                >\n                  <ListItemAvatar>\n                    <Avatar\n                      src={result.avatar}\n                      sx={{\n                        height: 32,\n                        width: 32\n                      }}\n                    />\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={result.name}\n                    primaryTypographyProps={{\n                      color: 'textPrimary',\n                      noWrap: true,\n                      variant: 'subtitle2'\n                    }}\n                  />\n                </ListItem>\n              ))}\n            </List>\n          </Box>\n        )}\n      </Box>\n    </ClickAwayListener>\n  );\n});\n\nChatContactSearch.propTypes = {\n  isFocused: PropTypes.bool,\n  onChange: PropTypes.func,\n  onClickAway: PropTypes.func,\n  onFocus: PropTypes.func,\n  onSelect: PropTypes.func,\n  query: PropTypes.string,\n  results: PropTypes.array\n};\n\nChatContactSearch.defaultProps = {\n  isFocused: false,\n  query: '',\n  results: []\n};\n\nexport default ChatContactSearch;\n","import { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { formatDistanceToNowStrict } from 'date-fns';\nimport { Lightbox } from 'react-modal-image';\nimport { Avatar, Box, Link, Typography } from '@material-ui/core';\n\nconst ChatMessage = (props) => {\n  const { body, contentType, createdAt, senderAvatar, senderName, senderType, ...other } = props;\n  const [expandMedia, setExpandMedia] = useState(false);\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        mb: 2\n      }}\n      {...other}\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: senderType === 'user'\n            ? 'row-reverse'\n            : 'row',\n          maxWidth: 500,\n          ml: senderType === 'user' ? 'auto' : 0\n        }}\n      >\n        <Avatar\n          src={senderAvatar}\n          sx={{\n            height: 32,\n            ml: senderType === 'user' ? 2 : 0,\n            mr: senderType === 'user' ? 0 : 2,\n            width: 32\n          }}\n        />\n        <div>\n          <Box\n            sx={{\n              backgroundColor: senderType === 'user'\n                ? 'primary.main'\n                : 'background.paper',\n              borderRadius: 1,\n              boxShadow: 1,\n              color: senderType === 'user'\n                ? 'primary.contrastText'\n                : 'text.primary',\n              px: 2,\n              py: 1\n            }}\n          >\n            <Link\n              color=\"inherit\"\n              component={RouterLink}\n              to=\"#\"\n              variant=\"subtitle2\"\n            >\n              {senderName}\n            </Link>\n            <Box sx={{ mt: 1 }}>\n              {contentType === 'image'\n                ? (\n                  <Box\n                    onClick={() => setExpandMedia(true)}\n                    sx={{\n                      mt: 2,\n                      '& img': {\n                        cursor: 'pointer',\n                        height: 'auto',\n                        maxWidth: '100%',\n                        width: 380\n                      }\n                    }}\n                  >\n                    <img\n                      alt=\"Attachment\"\n                      src={body}\n                    />\n                  </Box>\n                )\n                : (\n                  <Typography\n                    color=\"inherit\"\n                    variant=\"body1\"\n                  >\n                    {body}\n                  </Typography>\n                )}\n            </Box>\n          </Box>\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: senderType === 'user'\n                ? 'flex-end'\n                : 'flex-start',\n              mt: 1,\n              px: 2\n            }}\n          >\n            <Typography\n              color=\"textSecondary\"\n              noWrap\n              variant=\"caption\"\n            >\n              {formatDistanceToNowStrict(createdAt)}\n              {' '}\n              ago\n            </Typography>\n          </Box>\n        </div>\n      </Box>\n      {expandMedia && (\n        <Lightbox\n          large={body}\n          onClose={() => setExpandMedia(true)}\n        />\n      )}\n    </Box>\n  );\n};\n\nChatMessage.propTypes = {\n  body: PropTypes.string.isRequired,\n  contentType: PropTypes.string.isRequired,\n  createdAt: PropTypes.number.isRequired,\n  senderAvatar: PropTypes.string.isRequired,\n  senderName: PropTypes.string.isRequired,\n  senderType: PropTypes.oneOf(['contact', 'user'])\n};\n\nexport default ChatMessage;\n","import { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Avatar, Box, Divider, IconButton, TextField, Tooltip } from '@material-ui/core';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport SendIcon from '@material-ui/icons/Send';\nimport useAuth from '../../../hooks/useAuth';\n\nconst ChatMessageAdd = (props) => {\n  const { disabled, onSend, ...other } = props;\n  const fileInputRef = useRef(null);\n  const { user } = useAuth();\n  const [body, setBody] = useState('');\n\n  const handleAttach = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleChange = (event) => {\n    setBody(event.target.value);\n  };\n\n  const handleSend = () => {\n    if (!body) {\n      return;\n    }\n\n    onSend?.(body);\n    setBody('');\n  };\n\n  const handleKeyUp = (event) => {\n    if (event.code === 'ENTER') {\n      handleSend();\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        alignItems: 'center',\n        backgroundColor: 'background.paper',\n        display: 'flex',\n        flexShrink: 0,\n        px: 2,\n        py: 1\n      }}\n      {...other}\n    >\n      <Avatar\n        sx={{\n          display: {\n            xs: 'none',\n            sm: 'inline'\n          },\n          mr: 2\n        }}\n        src={user.avatar}\n      />\n      <TextField\n        disabled={disabled}\n        fullWidth\n        onChange={handleChange}\n        onKeyUp={handleKeyUp}\n        placeholder=\"Leave a message\"\n        value={body}\n        size=\"small\"\n        variant=\"outlined\"\n      />\n      <Tooltip title=\"Send\">\n        <span>\n          <IconButton\n            color=\"primary\"\n            disabled={!body || disabled}\n            onClick={handleSend}\n          >\n            <SendIcon fontSize=\"small\" />\n          </IconButton>\n        </span>\n      </Tooltip>\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: {\n            xs: 'none',\n            sm: 'flex'\n          }\n        }}\n      >\n        <Divider\n          orientation=\"vertical\"\n          sx={{ height: 24 }}\n        />\n        <Tooltip title=\"Attach photo\">\n          <span>\n            <IconButton\n              disabled={disabled}\n              edge=\"end\"\n              onClick={handleAttach}\n            >\n              <AddPhotoIcon fontSize=\"small\" />\n            </IconButton>\n          </span>\n        </Tooltip>\n        <Tooltip title=\"Attach file\">\n          <span>\n            <IconButton\n              disabled={disabled}\n              edge=\"end\"\n              onClick={handleAttach}\n            >\n              <AttachFileIcon fontSize=\"small\" />\n            </IconButton>\n          </span>\n        </Tooltip>\n      </Box>\n      <input\n        hidden\n        ref={fileInputRef}\n        type=\"file\"\n      />\n    </Box>\n  );\n};\n\nChatMessageAdd.propTypes = {\n  disabled: PropTypes.bool,\n  onSend: PropTypes.func\n};\n\nChatMessageAdd.defaultProps = {\n  disabled: false\n};\n\nexport default ChatMessageAdd;\n","import { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box } from '@material-ui/core';\nimport useAuth from '../../../hooks/useAuth';\nimport Scrollbar from '../../Scrollbar';\nimport ChatMessage from './ChatMessage';\n\nconst ChatMessages = (props) => {\n  const { messages, participants, ...other } = props;\n  const rootRef = useRef(null);\n  const { user } = useAuth();\n\n  const scrollToBottom = () => {\n    // eslint-disable-next-line no-underscore-dangle\n    if (rootRef?.current?._container) {\n      // eslint-disable-next-line no-underscore-dangle\n      rootRef.current._container.scrollTop = rootRef.current._container.scrollHeight;\n    }\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, scrollToBottom]);\n\n  return (\n    <Scrollbar\n      options={{ suppressScrollX: true }}\n      ref={rootRef}\n      {...other}\n    >\n      <Box sx={{ p: 2 }}>\n        {messages.map((message) => {\n          const participant = participants\n            .find((_participant) => _participant.id === message.senderId);\n          let senderAvatar;\n          let senderName;\n          let senderType;\n\n          // Since chat mock db is not synced with external auth providers\n          // we set the user details from user auth state instead of thread participants\n          if (message.senderId === '5e86809283e28b96d2d38537') {\n            senderAvatar = user.avatar;\n            senderName = 'Me';\n            senderType = 'user';\n          } else {\n            senderAvatar = participant.avatar;\n            senderName = participant.name;\n            senderType = 'contact';\n          }\n\n          return (\n            <ChatMessage\n              body={message.body}\n              contentType={message.contentType}\n              createdAt={message.createdAt}\n              key={message.id}\n              senderAvatar={senderAvatar}\n              senderName={senderName}\n              senderType={senderType}\n            />\n          );\n        })}\n      </Box>\n    </Scrollbar>\n  );\n};\n\nChatMessages.propTypes = {\n  messages: PropTypes.array,\n  participants: PropTypes.array\n};\n\nexport default ChatMessages;\n","import PropTypes from 'prop-types';\nimport {\n  Avatar,\n  AvatarGroup,\n  Box,\n  Chip,\n  ListItem,\n  ListItemAvatar,\n  ListItemText\n} from '@material-ui/core';\n\nconst getDetails = (thread, currentUserId) => {\n  const otherParticipants = thread.participants.filter((participant) => (participant.id\n    !== currentUserId));\n  const displayNames = otherParticipants\n    .reduce((names, participant) => [...names, participant.name], [])\n    .join(', ');\n  let displayText = '';\n  const lastMessage = thread.messages[thread.messages.length - 1];\n\n  if (lastMessage) {\n    const sender = lastMessage.senderId === currentUserId ? 'Me: ' : '';\n    const message = lastMessage.contentType === 'image'\n      ? 'Sent a photo'\n      : lastMessage.body;\n\n    displayText = `${sender}${message}`;\n  }\n\n  return {\n    otherParticipants,\n    displayNames,\n    displayText\n  };\n};\n\nconst ChatThreadItem = (props) => {\n  const { active, thread, onSelect, ...other } = props;\n\n  // We hardcode the current user ID because the mocked that is not in sync with the auth provider.\n  // When implementing this app with a real database, replace this ID with the ID from Auth Context.\n  const details = getDetails(thread, '5e86809283e28b96d2d38537');\n\n  return (\n    <ListItem\n      button\n      onClick={onSelect}\n      sx={{\n        backgroundColor: active && 'action.selected',\n        boxShadow: (theme) => active && `inset 4px 0px 0px ${theme.palette.primary.main}`\n      }}\n      {...other}\n    >\n      <ListItemAvatar\n        sx={{\n          display: 'flex',\n          justifyContent: {\n            sm: 'flex-start',\n            xs: 'center'\n          }\n        }}\n      >\n        <AvatarGroup\n          max={2}\n          sx={{\n            '& .MuiAvatar-root': details.otherParticipants.length > 1\n              ? {\n                height: 26,\n                width: 26,\n                '&:nth-of-type(2)': {\n                  mt: '10px'\n                }\n              }\n              : {\n                height: 36,\n                width: 36\n              }\n          }}\n        >\n          {details.otherParticipants.map((participant) => (\n            <Avatar\n              key={participant.id}\n              src={participant.avatar}\n            />\n          ))}\n        </AvatarGroup>\n      </ListItemAvatar>\n      <ListItemText\n        primary={details.displayNames}\n        primaryTypographyProps={{\n          color: 'textPrimary',\n          noWrap: true,\n          variant: 'subtitle2'\n        }}\n        secondary={details.displayText}\n        secondaryTypographyProps={{\n          color: 'textSecondary',\n          noWrap: true,\n          variant: 'body2'\n        }}\n        sx={{\n          display: {\n            sm: 'block',\n            xs: 'none'\n          }\n        }}\n      />\n      <Box\n        sx={{\n          alignItems: 'flex-end',\n          display: {\n            sm: 'flex',\n            xs: 'none'\n          },\n          flexDirection: 'column',\n          ml: 2\n        }}\n      >\n        {thread.unreadCount > 0 && (\n          <Chip\n            color=\"primary\"\n            label={thread.unreadCount}\n            size=\"small\"\n            sx={{\n              height: 18,\n              mt: '2px',\n              minWidth: 18,\n              p: '2px'\n            }}\n          />\n        )}\n      </Box>\n    </ListItem>\n  );\n};\n\nChatThreadItem.propTypes = {\n  active: PropTypes.bool,\n  onSelect: PropTypes.func,\n  thread: PropTypes.object.isRequired\n};\n\nChatThreadItem.defaultProps = {\n  active: false\n};\n\nexport default ChatThreadItem;\n","import { useNavigate } from 'react-router-dom';\nimport { List } from '@material-ui/core';\nimport { useSelector } from '../../../store';\nimport ChatThreadItem from './ChatThreadItem';\n\nconst ChatThreadList = (props) => {\n  const { threads, activeThreadId } = useSelector((state) => state.chat);\n  const navigate = useNavigate();\n\n  const handleSelect = (threadId) => {\n    const thread = threads.byId[threadId];\n    let threadKey;\n\n    if (thread.type === 'GROUP') {\n      threadKey = thread.id;\n    } else {\n      // We hardcode the current user ID because the mocked that is not in sync\n      // with the auth provider.\n      // When implementing this app with a real database, replace this\n      // ID with the ID from Auth Context.\n      const otherParticipant = thread.participants.find((participant) => (participant.id\n        !== '5e86809283e28b96d2d38537'));\n\n      threadKey = otherParticipant.username;\n    }\n\n    navigate(`/dashboard/chat/${threadKey}`);\n  };\n\n  return (\n    <List {...props}>\n      {threads.allIds.map((threadId) => (\n        <ChatThreadItem\n          active={activeThreadId === threadId}\n          key={threadId}\n          onSelect={() => handleSelect(threadId)}\n          thread={threads.byId[threadId]}\n        />\n      ))}\n    </List>\n  );\n};\n\nexport default ChatThreadList;\n","import { useState } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { Box, IconButton, Typography } from '@material-ui/core';\nimport { chatApi } from '../../../__fakeApi__/chatApi';\nimport CogIcon from '../../../icons/Cog';\nimport PencilAltIcon from '../../../icons/PencilAlt';\nimport Scrollbar from '../../Scrollbar';\nimport ChatContactSearch from './ChatContactSearch';\nimport ChatThreadList from './ChatThreadList';\n\nconst ChatSidebar = () => {\n  const navigate = useNavigate();\n  const [isSearchFocused, setIsSearchFocused] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleSearchClickAway = () => {\n    setIsSearchFocused(false);\n    setSearchQuery('');\n  };\n\n  const handleSearchChange = async (event) => {\n    try {\n      const { value } = event.target;\n\n      setSearchQuery(value);\n\n      if (value) {\n        const data = await chatApi.searchContacts(value);\n\n        setSearchResults(data);\n      } else {\n        setSearchResults([]);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleSearchFocus = () => {\n    setIsSearchFocused(true);\n  };\n\n  const handleSearchSelect = (result) => {\n    setIsSearchFocused(false);\n    setSearchQuery('');\n    navigate(`/dashboard/chat/${result.username}`);\n  };\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.paper',\n        borderRight: 1,\n        borderColor: 'divider',\n        display: 'flex',\n        flexDirection: 'column',\n        maxWidth: '100%',\n        width: 300\n      }}\n    >\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          flexShrink: 0,\n          height: 64,\n          px: 2\n        }}\n      >\n        <Typography\n          color=\"textPrimary\"\n          variant=\"h5\"\n        >\n          Chats\n        </Typography>\n        <Box sx={{ flexGrow: 1 }} />\n        <IconButton>\n          <CogIcon fontSize=\"small\" />\n        </IconButton>\n        <IconButton\n          component={RouterLink}\n          to=\"/dashboard/chat/new\"\n        >\n          <PencilAltIcon fontSize=\"small\" />\n        </IconButton>\n      </Box>\n      <Box\n        sx={{\n          display: {\n            sm: 'block',\n            xs: 'none'\n          }\n        }}\n      >\n        <ChatContactSearch\n          isFocused={isSearchFocused}\n          onChange={handleSearchChange}\n          onClickAway={handleSearchClickAway}\n          onFocus={handleSearchFocus}\n          onSelect={handleSearchSelect}\n          query={searchQuery}\n          results={searchResults}\n        />\n      </Box>\n      <Scrollbar options={{ suppressScrollX: true }}>\n        <Box sx={{ display: isSearchFocused ? 'none' : undefined }}>\n          <ChatThreadList />\n        </Box>\n      </Scrollbar>\n    </Box>\n  );\n};\n\nexport default ChatSidebar;\n","import { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Chip,\n  ClickAwayListener,\n  Input,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Paper,\n  Popper,\n  Typography\n} from '@material-ui/core';\nimport { chatApi } from '../../../__fakeApi__/chatApi';\n\nconst getFilteredSearchResults = (results, recipients) => {\n  const recipientIds = recipients.reduce((acc, recipient) => [\n    ...acc,\n    recipient.id\n  ], []);\n\n  return results.filter((result) => !recipientIds.includes(result.id));\n};\n\nconst ChatThreadComposer = (props) => {\n  const { onAddRecipient, onRemoveRecipient, recipients, ...other } = props;\n  const containerRef = useRef(null);\n  const [query, setQuery] = useState('');\n  const [isSearchFocused, setIsSearchFocused] = useState(true);\n  const [searchResults, setSearchResults] = useState([]);\n\n  const filteredSearchResults = getFilteredSearchResults(searchResults, recipients);\n  const displayResults = query && isSearchFocused;\n\n  const handleSearchChange = async (event) => {\n    try {\n      const { value } = event.target;\n\n      setQuery(value);\n\n      if (value) {\n        const data = await chatApi.searchContacts(value);\n\n        setSearchResults(data);\n      } else {\n        setSearchResults([]);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleSearchBlur = () => {\n    if (!displayResults) {\n      setIsSearchFocused(false);\n    }\n  };\n\n  const handleSearchFocus = () => {\n    setIsSearchFocused(true);\n  };\n\n  const handleSearchResultsClickAway = () => {\n    setIsSearchFocused(false);\n  };\n\n  const handleAddRecipient = (contact) => {\n    setQuery('');\n\n    if (onAddRecipient) {\n      onAddRecipient(contact);\n    }\n  };\n\n  const handleRemoveRecipient = (recipientId) => {\n    if (onRemoveRecipient) {\n      onRemoveRecipient(recipientId);\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        alignItems: 'center',\n        display: 'flex',\n        p: 2\n      }}\n      {...other}\n    >\n      <Typography\n        variant=\"body1\"\n        color=\"textSecondary\"\n      >\n        To:\n      </Typography>\n      <Box\n        ref={containerRef}\n        sx={{\n          ml: 1,\n          '& .MuiInputBase-root': {\n            backgroundColor: 'background.paper',\n            borderRadius: 16,\n            height: 32,\n            maxWidth: recipients.length > 0 ? 120 : 'auto',\n            px: 2\n          }\n        }}\n      >\n        {recipients.map((recipient) => (\n          <Box\n            component=\"span\"\n            key={recipient.id}\n            sx={{ mr: 2 }}\n          >\n            <Chip\n              color=\"primary\"\n              label={recipient.name}\n              onDelete={() => handleRemoveRecipient(recipient.id)}\n              size=\"small\"\n            />\n          </Box>\n        ))}\n        <Input\n          disableUnderline\n          onBlur={handleSearchBlur}\n          onChange={handleSearchChange}\n          onFocus={handleSearchFocus}\n          placeholder={recipients.length === 0\n            ? 'Search contacts'\n            : ''}\n          value={query}\n        />\n      </Box>\n      {displayResults && (\n        <ClickAwayListener onClickAway={handleSearchResultsClickAway}>\n          <Popper\n            anchorEl={containerRef.current}\n            open={isSearchFocused}\n            placement=\"bottom-start\"\n          >\n            <Paper\n              sx={{\n                mt: 1,\n                maxWidth: '100%',\n                width: 320\n              }}\n            >\n              {filteredSearchResults.length === 0\n                ? (\n                  <Box\n                    sx={{\n                      p: 2,\n                      textAlign: 'center'\n                    }}\n                  >\n                    <Typography\n                      color=\"textPrimary\"\n                      gutterBottom\n                      variant=\"h6\"\n                    >\n                      Nothing Found\n                    </Typography>\n                    <Typography\n                      color=\"textSecondary\"\n                      variant=\"body2\"\n                    >\n                      We couldn&apos;t find any matches\n                      for &quot;\n                      {query}\n                      &quot;. Try checking for typos or using\n                      complete words.\n                    </Typography>\n                  </Box>\n                )\n                : (\n                  <>\n                    <Box\n                      sx={{\n                        px: 2,\n                        pt: 2\n                      }}\n                    >\n                      <Typography\n                        color=\"textSecondary\"\n                        variant=\"subtitle2\"\n                      >\n                        Contacts\n                      </Typography>\n                    </Box>\n                    <List>\n                      {filteredSearchResults.map((result) => (\n                        <ListItem\n                          button\n                          key={result.id}\n                          onClick={() => handleAddRecipient(result)}\n                        >\n                          <ListItemAvatar>\n                            <Avatar src={result.avatar} />\n                          </ListItemAvatar>\n                          <ListItemText\n                            primary={result.name}\n                            primaryTypographyProps={{\n                              color: 'textPrimary',\n                              noWrap: true,\n                              variant: 'subtitle2'\n                            }}\n                          />\n                        </ListItem>\n                      ))}\n                    </List>\n                  </>\n                )}\n            </Paper>\n          </Popper>\n        </ClickAwayListener>\n      )}\n    </Box>\n  );\n};\n\nChatThreadComposer.propTypes = {\n  onAddRecipient: PropTypes.func,\n  onRemoveRecipient: PropTypes.func,\n  recipients: PropTypes.array\n};\n\nChatThreadComposer.defaultProps = {\n  recipients: []\n};\n\nexport default ChatThreadComposer;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Phone = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z\" />\n  </svg>, 'Phone'\n);\n\nexport default Phone;\n","import { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  AvatarGroup,\n  Box,\n  IconButton,\n  ListItemIcon,\n  ListItemText,\n  Menu,\n  MenuItem,\n  Tooltip,\n  Typography\n} from '@material-ui/core';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport ArchiveIcon from '../../../icons/Archive';\nimport BellIcon from '../../../icons/Bell';\nimport BanIcon from '../../../icons/Ban';\nimport CameraIcon from '../../../icons/Camera';\nimport PhoneIcon from '../../../icons/Phone';\nimport DotsHorizontalIcon from '../../../icons/DotsHorizontal';\nimport TrashIcon from '../../../icons/Trash';\n\nconst ParticipantAvatar = experimentalStyled(Avatar)(({ styleProps }) => {\n  if (styleProps.small) {\n    return {\n      height: 30,\n      width: 30,\n      '&:nth-of-type(2)': {\n        mt: '10px'\n      }\n    };\n  }\n\n  return {};\n});\n\nconst ChatThreadToolbar = (props) => {\n  const { participants, ...other } = props;\n  const moreRef = useRef(null);\n  const [openMenu, setOpenMenu] = useState(false);\n\n  // We hardcode the current user ID because the mocked that is not in sync with the auth provider.\n  // When implementing this app with a real database, replace this ID with the ID from Auth Context.\n  const otherParticipants = participants.filter((participant) => (participant.id\n    !== '5e86809283e28b96d2d38537'));\n  const displayNames = otherParticipants.reduce((names, participant) => [\n    ...names,\n    participant.name\n  ], []).join(', ');\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <Box\n      sx={{\n        alignItems: 'center',\n        backgroundColor: 'background.paper',\n        borderBottom: (theme) => `1px solid ${theme.palette.divider}`,\n        display: 'flex',\n        flexShrink: 0,\n        minHeight: 64,\n        px: 2,\n        py: 1\n      }}\n      {...other}\n    >\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          '& .MuiAvatar-root': otherParticipants.length > 1 && {\n            height: 30,\n            width: 30,\n            '&:nth-of-type(2)': {\n              mt: '10px'\n            }\n          }\n        }}\n      >\n        <AvatarGroup max={2}>\n          {otherParticipants.map((participant) => (\n            <ParticipantAvatar\n              key={participant.id}\n              src={participant.avatar}\n              styleProps={{ small: otherParticipants.length > 1 }}\n            />\n          ))}\n        </AvatarGroup>\n        <Typography\n          color=\"textPrimary\"\n          sx={{ ml: 2 }}\n          variant=\"subtitle2\"\n        >\n          {displayNames}\n        </Typography>\n      </Box>\n      <Box sx={{ flexGrow: 1 }} />\n      <IconButton>\n        <PhoneIcon fontSize=\"small\" />\n      </IconButton>\n      <IconButton>\n        <CameraIcon fontSize=\"small\" />\n      </IconButton>\n      <Tooltip title=\"More options\">\n        <IconButton\n          onClick={handleMenuOpen}\n          ref={moreRef}\n        >\n          <DotsHorizontalIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={moreRef.current}\n        keepMounted\n        elevation={1}\n        onClose={handleMenuClose}\n        open={openMenu}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <BanIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Block contact\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <TrashIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Delete thread\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <ArchiveIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Archive thread\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <BellIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Mute notifications\" />\n        </MenuItem>\n      </Menu>\n    </Box>\n  );\n};\n\nChatThreadToolbar.propTypes = {\n  participants: PropTypes.array\n};\n\nChatThreadToolbar.defaultProps = {\n  participants: []\n};\n\nexport default ChatThreadToolbar;\n","import { useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Box, Divider } from '@material-ui/core';\nimport {\n  addRecipient,\n  getParticipants,\n  getThread,\n  markThreadAsSeen,\n  removeRecipient,\n  resetActiveThread\n} from '../../../slices/chat';\nimport { useDispatch, useSelector } from '../../../store';\nimport ChatMessageAdd from './ChatMessageAdd';\nimport ChatMessages from './ChatMessages';\nimport ChatThreadComposer from './ChatThreadComposer';\nimport ChatThreadToolbar from './ChatThreadToolbar';\n\nconst threadSelector = (state) => {\n  const { threads, activeThreadId } = state.chat;\n  const thread = threads.byId[activeThreadId];\n\n  if (thread) {\n    return thread;\n  }\n\n  return {\n    id: null,\n    messages: [],\n    participants: [],\n    unreadMessages: 0\n  };\n};\n\nconst ChatThread = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { threadKey } = useParams();\n  const { activeThreadId, participants, recipients } = useSelector((state) => state.chat);\n  const thread = useSelector((state) => threadSelector(state));\n\n  const getDetails = async () => {\n    dispatch(getParticipants(threadKey));\n\n    try {\n      await dispatch(getThread(threadKey));\n    } catch (err) {\n      dispatch(resetActiveThread());\n      // If thread key is not a valid key (thread id or username)\n      // the server throws an error, this means that the user tried a shady route\n      // and we redirect him on the compose route\n      console.error(err);\n      navigate('/dashboard/chat/new');\n    }\n  };\n\n  useEffect(() => {\n    if (threadKey) {\n      getDetails();\n    }\n  }, [threadKey]);\n\n  useEffect(() => {\n    if (activeThreadId) {\n      dispatch(markThreadAsSeen(activeThreadId));\n    }\n  }, [activeThreadId]);\n\n  // In our case there two possible routes\n  // one that contains chat/new and one with a chat/:threadKey\n  // if threadKey does not exist, it means that the chat is in compose mode\n  const mode = threadKey ? 'DETAIL' : 'COMPOSE';\n\n  const handleAddRecipient = (recipient) => {\n    dispatch(addRecipient(recipient));\n  };\n\n  const handleRemoveRecipient = (recipientId) => {\n    dispatch(removeRecipient(recipientId));\n  };\n\n  const handleSendMessage = async () => {\n    try {\n      // Handle send message\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        display: 'flex',\n        flexDirection: 'column',\n        flexGrow: 1\n      }}\n    >\n      {mode === 'DETAIL' && (\n        <ChatThreadToolbar participants={participants} />\n      )}\n      {mode === 'COMPOSE' && (\n        <ChatThreadComposer\n          onAddRecipient={handleAddRecipient}\n          onRemoveRecipient={handleRemoveRecipient}\n          recipients={recipients}\n        />\n      )}\n      <Box\n        sx={{\n          flexGrow: 1,\n          overflow: 'auto'\n        }}\n      >\n        <ChatMessages\n          messages={thread.messages}\n          participants={thread.participants}\n        />\n      </Box>\n      <Divider />\n      <ChatMessageAdd\n        disabled={false}\n        onSend={handleSendMessage}\n      />\n    </Box>\n  );\n};\n\nexport default ChatThread;\n","import { useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box } from '@material-ui/core';\nimport { ChatSidebar, ChatThread } from '../../components/dashboard/chat';\nimport gtm from '../../lib/gtm';\nimport { getThreads } from '../../slices/chat';\nimport { useDispatch } from '../../store';\n\nconst Chat = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  useEffect(() => {\n    dispatch(getThreads());\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Dashboard: Chat | Material Kit Pro</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          display: 'flex',\n          height: '100%'\n        }}\n      >\n        <ChatSidebar />\n        <ChatThread />\n      </Box>\n    </>\n  );\n};\n\nexport default Chat;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst PencilAlt = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z\" />\n    <path\n      fillRule=\"evenodd\"\n      d=\"M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'PencilAlt'\n);\n\nexport default PencilAlt;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Trash = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Trash'\n);\n\nexport default Trash;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst DotsHorizontal = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z\" />\n  </svg>, 'DotsHorizontal'\n);\n\nexport default DotsHorizontal;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Archive = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M4 3a2 2 0 100 4h12a2 2 0 100-4H4z\" />\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 8h14v7a2 2 0 01-2 2H5a2 2 0 01-2-2V8zm5 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Archive'\n);\n\nexport default Archive;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Ban = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M13.477 14.89A6 6 0 015.11 6.524l8.367 8.368zm1.414-1.414L6.524 5.11a6 6 0 018.367 8.367zM18 10a8 8 0 11-16 0 8 8 0 0116 0z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Ban'\n);\n\nexport default Ban;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Camera = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M4 5a2 2 0 00-2 2v8a2 2 0 002 2h12a2 2 0 002-2V7a2 2 0 00-2-2h-1.586a1 1 0 01-.707-.293l-1.121-1.121A2 2 0 0011.172 3H8.828a2 2 0 00-1.414.586L6.293 4.707A1 1 0 015.586 5H4zm6 9a3 3 0 100-6 3 3 0 000 6z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Camera'\n);\n\nexport default Camera;\n"],"sourceRoot":""}