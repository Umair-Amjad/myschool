{"version":3,"sources":["icons/ExternalLink.js","icons/InformationCircle.js","icons/ChevronUp.js","components/dashboard/analytics/AnalyticsGeneralOverview.js","components/dashboard/analytics/AnalyticsVisitsByCountry.js","components/dashboard/analytics/AnalyticGeneralOverAnalysis.js","components/dashboard/analytics/SingleClass_Data.js","pages/dashboard/Analytics.js","icons/Download.js","mangement/apis/Api.js","icons/ArrowRight.js","mangement/HelperFunction.js"],"names":["ExternalLink","createSvgIcon","xmlns","viewBox","fill","d","InformationCircle","fillRule","clipRule","ChevronUp","LineChart","chartOptions","chart","background","toolbar","show","zoom","enabled","colors","dataLabels","grid","stroke","width","theme","mode","useTheme","palette","tooltip","xaxis","labels","axisBorder","axisTicks","yaxis","options","series","data","type","BarChart","states","normal","filter","value","AnalyticsGeneralOverview","Grid","container","spacing","item","md","sm","xs","Card","Box","sx","alignItems","display","justifyContent","p","Typography","color","variant","mt","Divider","px","py","Button","endIcon","ArrowRight","fontSize","Avatar","backgroundColor","alpha","success","main","height","ml","error","ChevronDown","AnalyticsVisitsByCountry","props","useState","order","setOrder","state","setState","latestFeePayer","a","customAxios","getCall","useEffect","console","log","sortedCountries","sort","b","date","sortCountries","CardHeader","disableTypography","title","Tooltip","Table","TableHead","TableRow","TableCell","sortDirection","TableSortLabel","active","direction","onClick","prevOrder","TableBody","map","country","border","borderRadius","src","student_image","getInitials","name","moment","format","paid","id","AnalyticGeneralOverAnalysis","getGraphData","years","IncomeRevenu","monthlyExpense","forEach","ele","includes","YEAR","push","montlyPaidGrapgh","montlhyExpense","stacked","curve","lineCap","align","offsetX","style","text","secondary","categories","seriesName","opposite","fixed","position","offsetY","legend","horizontalAlign","chartSeries","Year","year","SingleClass_Data","section","setsection","ClassObj","setClassObj","selectedOption","setSelectedOption","selectedOption2","setSelectedOption2","Date","getFullYear","setYear","isInitialRender","useRef","time","Section","then","res","timeEnd","handleChange2","event","target","current","getCalls","params","yearid","dataClass","sectionId","montlyTotal","month","m","monthName","plotOptions","bar","borderColor","divider","lines","hover","opacity","tickPlacement","subheader","FormControl","InputLabel","Select","labelId","onChange","label","option","MenuItem","className","e","Scrollbar","minWidth","Analytics","settings","useSettings","gtm","minHeight","Container","maxWidth","compact","Breadcrumbs","aria-label","separator","ChevronRight","Link","component","RouterLink","to","Download","xl","token","JSON","parse","localStorage","getItem","axios","create","baseURL","headers","authorization","interceptors","response","use","Promise","resolve","reject","status","endpoint","responce"],"mappings":"8IAAA,mBAEMA,EAAeC,YACnB,sBACEC,MAAM,6BACNC,QAAQ,YACRC,KAAK,eAHP,UAKE,sBAAMC,EAAE,uGACR,sBAAMA,EAAE,4FACF,gBAGKL,O,kCCbf,mBAEMM,EAAoBL,YACxB,qBACEC,MAAM,6BACNC,QAAQ,YACRC,KAAK,eAHP,SAKE,sBACEG,SAAS,UACTF,EAAE,mIACFG,SAAS,cAEL,qBAGKF,O,kCChBf,mBAEMG,EAAYR,YAChB,qBACEC,MAAM,6BACNC,QAAQ,YACRC,KAAK,eAHP,SAKE,sBACEG,SAAS,UACTF,EAAE,sHACFG,SAAS,cAEL,aAGKC,O,oOCTTC,EAAY,WAChB,IAEMC,EAAe,CACnBC,MAAO,CACLC,WAAY,cACZC,QAAS,CACPC,MAAM,GAERC,KAAM,CACJC,SAAS,IAGbC,OAAQ,CAAC,WACTC,WAAY,CACVF,SAAS,GAEXG,KAAM,CACJL,MAAM,GAERM,OAAQ,CACNC,MAAO,GAETC,MAAO,CACLC,KAvBUC,cAuBEC,QAAQF,MAEtBG,QAAS,CACPV,SAAS,GAEXW,MAAO,CACLC,OAAQ,CACNd,MAAM,GAERe,WAAY,CACVf,MAAM,GAERgB,UAAW,CACThB,MAAM,IAGViB,MAAO,CACLjB,MAAM,IAMV,OACE,cAAC,IAAD,CACEkB,QAAStB,EACTuB,OALgB,CAAC,CAAEC,KAAM,CAAC,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,KAMxDC,KAAK,OACLd,MAAO,OAKPe,EAAW,WACf,IAEM1B,EAAe,CACnBC,MAAO,CACLC,WAAY,cACZC,QAAS,CACPC,MAAM,GAERC,KAAM,CACJC,SAAS,IAGbC,OAAQ,CAAC,WACTC,WAAY,CACVF,SAAS,GAEXG,KAAM,CACJL,MAAM,GAERuB,OAAQ,CACNC,OAAQ,CACNC,OAAQ,CACNJ,KAAM,OACNK,MAAO,KAIbpB,OAAQ,CACNC,MAAO,GAETC,MAAO,CACLC,KA/BUC,cA+BEC,QAAQF,MAEtBG,QAAS,CACPV,SAAS,GAEXW,MAAO,CACLE,WAAY,CACVf,MAAM,GAERgB,UAAW,CACThB,MAAM,GAERc,OAAQ,CACNd,MAAM,IAGViB,MAAO,CACLjB,MAAM,IAMV,OACE,cAAC,IAAD,CACEkB,QAAStB,EACTuB,OALgB,CAAC,CAAEC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAMlDC,KAAK,MACLd,MAAO,OAqPEoB,EAhPkB,kBAC/B,eAACC,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EAFX,UAIE,cAACF,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GAJN,SAME,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CACEC,GAAI,CACFC,WAAY,SACZC,QAAS,OACTC,eAAgB,gBAChBC,EAAG,GALP,UAQE,gCACE,cAACC,EAAA,EAAD,CACEC,MAAM,cACNC,QAAQ,YAFV,yBAMA,cAACF,EAAA,EAAD,CACEC,MAAM,cACNN,GAAI,CAAEQ,GAAI,GACVD,QAAQ,KAHV,qBAQF,cAAC,EAAD,OAEF,cAACE,EAAA,EAAD,IACA,cAACV,EAAA,EAAD,CACEC,GAAI,CACFU,GAAI,EACJC,GAAI,GAHR,SAME,cAACC,EAAA,EAAD,CACEN,MAAM,UACNO,QAAS,cAACC,EAAA,EAAD,CAAgBC,SAAS,UAClCR,QAAQ,OAHV,mCAUN,cAAChB,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GAJN,SAME,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CACEC,GAAI,CACFC,WAAY,SACZC,QAAS,OACTC,eAAgB,gBAChBC,EAAG,GALP,UAQE,gCACE,cAACC,EAAA,EAAD,CACEC,MAAM,cACNC,QAAQ,YAFV,mBAMA,cAACF,EAAA,EAAD,CACEC,MAAM,cACNN,GAAI,CAAEQ,GAAI,GACVD,QAAQ,KAHV,uBAQF,cAAC,EAAD,OAEF,cAACE,EAAA,EAAD,IACA,eAACV,EAAA,EAAD,CACEC,GAAI,CACFC,WAAY,SACZC,QAAS,OACTQ,GAAI,EACJC,GAAI,GALR,UAQE,cAACK,EAAA,EAAD,CACEhB,GAAI,CACFiB,gBAAiB,SAAC9C,GAAD,OAAW+C,YAAM/C,EAAMG,QAAQ6C,QAAQC,KAAM,MAC9Dd,MAAO,eACPe,OAAQ,GACRnD,MAAO,IALX,SAQE,cAACb,EAAA,EAAD,CAAe0D,SAAS,YAE1B,cAACV,EAAA,EAAD,CACEC,MAAM,gBACNN,GAAI,CAAEsB,GAAI,GACVf,QAAQ,UAHV,8CAUN,cAAChB,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GAJN,SAME,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CACEC,GAAI,CACFC,WAAY,SACZC,QAAS,OACTC,eAAgB,gBAChBC,EAAG,GALP,UAQE,gCACE,cAACC,EAAA,EAAD,CACEC,MAAM,cACNC,QAAQ,YAFV,yBAMA,cAACF,EAAA,EAAD,CACEC,MAAM,cACNN,GAAI,CAAEQ,GAAI,GACVD,QAAQ,KAHV,sBAQF,cAAC,EAAD,OAEF,cAACE,EAAA,EAAD,IACA,eAACV,EAAA,EAAD,CACEC,GAAI,CACFC,WAAY,SACZC,QAAS,OACTQ,GAAI,EACJC,GAAI,GALR,UAQE,cAACK,EAAA,EAAD,CACEhB,GAAI,CACFiB,gBAAiB,SAAC9C,GAAD,OAAW+C,YAAM/C,EAAMG,QAAQiD,MAAMH,KAAM,MAC5Dd,MAAO,aACPe,OAAQ,GACRnD,MAAO,IALX,SAQE,cAACsD,EAAA,EAAD,CAAiBT,SAAS,YAE5B,cAACV,EAAA,EAAD,CACEC,MAAM,gBACNN,GAAI,CAAEsB,GAAI,GACVf,QAAQ,UAHV,8CAUN,cAAChB,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GAJN,SAME,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CACEC,GAAI,CACFC,WAAY,SACZC,QAAS,OACTC,eAAgB,gBAChBC,EAAG,GALP,UAQE,gCACE,cAACC,EAAA,EAAD,CACEC,MAAM,cACNC,QAAQ,YAFV,yBAMA,cAACF,EAAA,EAAD,CACEC,MAAM,cACNN,GAAI,CAAEQ,GAAI,GACVD,QAAQ,KAHV,uBAQF,cAAC,EAAD,OAEF,cAACE,EAAA,EAAD,IACA,eAACV,EAAA,EAAD,CACEC,GAAI,CACFC,WAAY,SACZC,QAAS,OACTQ,GAAI,EACJC,GAAI,GALR,UAQE,cAACK,EAAA,EAAD,CACEhB,GAAI,CACFiB,gBAAiB,SAAC9C,GAAD,OAAW+C,YAAM/C,EAAMG,QAAQ6C,QAAQC,KAAM,MAC9Dd,MAAO,eACPe,OAAQ,GACRnD,MAAO,IALX,SAQE,cAACb,EAAA,EAAD,CAAe0D,SAAS,YAE1B,cAACV,EAAA,EAAD,CACEC,MAAM,gBACNN,GAAI,CAAEsB,GAAI,GACVf,QAAQ,UAHV,kD,oNC/KKkB,EApHkB,SAACC,GAChC,MAA0BC,mBAAS,QAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAuBF,mBAAS,IAAhC,mBAAOG,EAAP,KAAaC,EAAb,KAWIC,EAAc,uCAAC,4BAAAC,EAAA,sEACDC,IAAYC,QAAQ,uBADnB,OACdpD,EADc,OAEpBgD,EAAShD,GAFW,2CAAD,qDAMpBqD,qBAAU,WACRJ,IACAK,QAAQC,IAAIR,KACZ,IAEA,IAAMS,EApEc,SAACT,EAAOF,GAE3B,OADDS,QAAQC,IAAIR,GAEVA,EAAMU,MAAK,SAACP,EAAGQ,GACf,MAAc,QAAVb,EACKK,EAAES,KAAOD,EAAEC,MAAQ,EAAI,EAGzBT,EAAES,KAAOD,EAAEC,MAAQ,EAAI,KA4DRC,CAAcb,EAAOF,GAE7C,OACE,eAAC9B,EAAA,EAAD,2BAAU4B,GAAV,cACE,cAACkB,EAAA,EAAD,CACEC,mBAAiB,EACjBC,MACE,eAAC/C,EAAA,EAAD,CACEC,GAAI,CACFC,WAAY,SACZC,QAAS,OACTC,eAAgB,iBAJpB,UAOE,cAACE,EAAA,EAAD,CAAYC,MAAM,cAAcC,QAAQ,KAAxC,sBAGA,cAACwC,EAAA,EAAD,CAASD,MAAM,sBAAf,SACE,cAAC5F,EAAA,EAAD,CAAuB6D,SAAS,iBAKxC,eAACiC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,mBACA,cAACA,EAAA,EAAD,CAAWC,cAAexB,EAA1B,SACE,cAACyB,EAAA,EAAD,CAAgBC,QAAM,EAACC,UAAW3B,EAAO4B,QAjDlC,WACjB3B,GAAS,SAAC4B,GACR,MAAkB,QAAdA,EACK,OAGF,UA2CC,oBAIF,cAACN,EAAA,EAAD,2BAGJ,cAACO,EAAA,EAAD,UACGnB,EAAgBoB,KAAI,SAACC,GAAD,OACnB,eAACV,EAAA,EAAD,CAEElD,GAAI,CACF,kBAAmB,CACjB6D,OAAQ,IAJd,UAQE,cAACV,EAAA,EAAD,UACE,eAACpD,EAAA,EAAD,CACEC,GAAI,CACFC,WAAY,SACZC,QAAS,QAHb,UAME,cAACH,EAAA,EAAD,CACEC,GAAI,CACFqB,OAAQ,GACRnD,MAAO,GACP,WAAY,CACVmD,OAAQ,GACRnD,MAAO,GACP4F,aAAc,QAPpB,SAWE,cAAC9C,EAAA,EAAD,CACE+C,IAAG,wCAAmCH,EAAQI,eAC9ChE,GAAI,CACFqB,OAAQ,GACRnD,MAAO,IAJX,SAOG+F,YAAYL,EAAQM,UAGzB,cAAC7D,EAAA,EAAD,CACEC,MAAM,cACNN,GAAI,CAAEsB,GAAI,GACVf,QAAQ,YAHV,SAKGqD,EAAQM,YAIf,cAACf,EAAA,EAAD,UAAYgB,IAAOP,EAAQlB,MAAM0B,OAAO,gBACxC,cAACjB,EAAA,EAAD,UAAYS,EAAQS,SA7CfT,EAAQU,iBCgGZC,EAjNqB,WAClC,IAAMpG,EAAQE,cAChB,EAAuBsD,mBAAS,IAAhC,mBAAOG,EAAP,KAAaC,EAAb,KAEMyC,EAAY,uCAAC,4BAAAvC,EAAA,sEACFC,IAAYC,QAAQ,iBADlB,OACbpD,EADa,OAEnBgD,EAAShD,GACTsD,QAAQC,IAAIvD,GAHO,2CAAD,qDAMlBqD,qBAAU,WACRoC,MACA,IAGF,IAAIC,EAAM,GACNC,EAAa,GACbC,EAAe,GAEnB7C,EAAM8C,SAAQ,SAACC,GACTJ,EAAMK,SAASD,EAAIE,OACrBN,EAAMO,KAAKH,EAAIE,OAEjB,OAAIF,QAAJ,IAAIA,OAAJ,EAAIA,EAAKI,mBACPP,EAAaM,KAAKH,EAAII,mBAGxB,OAAIJ,QAAJ,IAAIA,OAAJ,EAAIA,EAAKK,iBACPP,EAAeK,KAAKH,EAAIK,mBAK5B7C,QAAQC,IAAI,QAASmC,GACrBpC,QAAQC,IAAI,eAAgBoC,GAC1B,IAAM3F,EAAO,CACXD,OAAQ,CACN,CACEoF,KAAM,SACNlF,KAAM,SACNsB,MAAO,UAEPvB,KAAM2F,GAER,CACER,KAAM,WACNlF,KAAM,SACNsB,MAAO,UAEPvB,KAAM4F,KAWNpH,EAAe,CACnBC,MAAO,CACLC,WAAY,cAEZ4D,OAAQ,IACRrC,KAAM,OACNmG,SAAS,GAGXpH,WAAY,CACVF,SAAS,GAEXI,OAAQ,CACNmH,MAAO,SACPC,QAAS,OACTnH,MAAO,CAAC,EAAG,EAAG,IAEhB4E,MAAO,CACLwC,MAAO,OACPC,QAAS,IACTC,MAAO,CACLlF,MAAOnC,EAAMG,QAAQmH,KAAKC,YAI9B5H,OAAQ,CAAC,UAAW,UAAW,WAC/BU,MAAO,CAELmH,WAAYlB,GAEd7F,MAAO,CACL,CACED,UAAW,CACThB,MAAM,GAERe,WAAY,CACVf,MAAM,EACN2C,MAAO,WAET7B,OAAQ,CACN+G,MAAO,CACL1H,OAAQ,YAGZgF,MAAO,CACL2C,KAAM,2BACND,MAAO,CACLlF,MAAO,YAGX/B,QAAS,CACPV,SAAS,IAGb,CACE+H,WAAY,SACZC,UAAU,EACVlH,UAAW,CACThB,MAAM,GAERe,WAAY,CACVf,MAAM,EACN2C,MAAO,WAET7B,OAAQ,CACN+G,MAAO,CACL1H,OAAQ,YAGZgF,MAAO,CACL2C,KAAM,uCACND,MAAO,CACLlF,MAAO,aAIb,CACEsF,WAAY,UACZC,UAAU,EACVlH,UAAW,CACThB,MAAM,GAERe,WAAY,CACVf,MAAM,EACN2C,MAAO,WAET7B,OAAQ,CACN+G,MAAO,CACL1H,OAAQ,YAGZgF,MAAO,CACL2C,KAAM,4BACND,MAAO,CACLlF,MAAO,cAKfnC,MAAO,CACLC,KAAMD,EAAMG,QAAQF,MAEtBG,QAAS,CACPuH,MAAO,CACLjI,SAAS,EACTkI,SAAU,UACVC,QAAS,GACTT,QAAS,KAGbU,OAAQ,CACNC,gBAAiB,OACjBX,QAAS,KAIPY,EAAcpH,EAAKD,OACzB,OACE,mCACE,qBAAKwF,GAAG,QAAR,SACE,eAACxE,EAAA,EAAD,WACE,cAAC8C,EAAA,EAAD,CACEC,mBAAiB,EACjBC,MACE,cAAC/C,EAAA,EAAD,CACEC,GAAI,CACFC,WAAY,SACZC,QAAS,OACTC,eAAgB,iBAJpB,SAOE,cAACE,EAAA,EAAD,CAAYC,MAAM,cAAcC,QAAQ,KAAxC,gCAMN,cAAC,IAAD,CACE1B,QAAStB,EACTuB,OAAQqH,EACRnH,KAAK,OACLqC,OAAQ,c,8ECnMd+E,GAAO,CACX,CACE9B,GAAI,EACJ+B,KAAM,MAER,CAAE/B,GAAI,EAAG+B,KAAM,MACf,CAAE/B,GAAI,EAAG+B,KAAM,MACf,CAAE/B,GAAI,EAAG+B,KAAM,MACf,CAAE/B,GAAI,EAAG+B,KAAM,OAqRFC,GAnRU,SAAC5E,GACxB,IAAMvD,EAAQE,cACd,EAA0BsD,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA8BJ,mBAAS,IAAvC,mBAAO4E,EAAP,KAAgBC,EAAhB,KACA,EAAgC7E,mBAAS,IAAzC,mBAAO8E,EAAP,KAAiBC,EAAjB,KACA,EAA4C/E,mBAAS,IAArD,mBAAOgF,EAAP,KAAuBC,EAAvB,KACA,EAA8CjF,mBAAS,IAAvD,mBAAOkF,EAAP,KAAwBC,EAAxB,KACA,EAAwBnF,oBAAS,IAAIoF,MAAOC,eAA5C,mBAAOX,EAAP,KAAaY,EAAb,KACMC,EAAkBC,kBAAO,GAC/B/E,qBAAU,WACRC,QAAQ+E,KAAK,WAEDC,YAAQ,aAChBC,MAAK,SAACC,GACRlF,QAAQmF,QAAQ,WAChBd,EAAYa,GAEZX,EAAkBW,EAAI,GAAGjD,OAEd+C,YAAQ,qBAChBC,MAAK,SAACC,GACTf,EAAWe,GACXT,EAAmBS,EAAI,GAAGjD,SAG3B,IACHjC,QAAQC,IAAI,UAAWqE,GACvBtE,QAAQC,IAAI,UAAWuE,GACvB,IAGMY,EAAgB,SAACC,GACrB,MAAwBA,EAAMC,OAAtBzD,EAAR,EAAQA,KAAM7E,EAAd,EAAcA,MACD,aAAT6E,EACF0C,EAAkBvH,GACA,YAAT6E,GACT4C,EAAmBzH,IAIvB+C,oBAAS,sBAAC,4BAAAH,EAAA,0DACJiF,EAAgBU,QADZ,uBAENV,EAAgBU,SAAU,EAFpB,0CAKkB1F,IAAY2F,SACpC,8BACA,CACEC,OAAQ,CACNC,OAAQ1B,EACR2B,UAAWrB,GAAkB,EAC7BsB,UAAWpB,GAAmB,KAX5B,OAKFqB,EALE,OAkBRnG,EAASmG,GACT7F,QAAQC,IAAI4F,GAnBJ,2CAoBP,CAACvB,EAAgBE,EAAiBR,IAErC,IAAI8B,EAAQ,GACR9D,EAAO,GACP+D,EAAI,CACN,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEFtG,EAAM8C,SAAQ,SAACC,GACb,IAAIwD,EAAYD,EAAEvD,EAAIsD,MAAQ,GAC9BA,EAAMnD,KAAKqD,GACXhE,EAAKW,KAAKH,EAAII,qBAGhB,IAAMlG,EAAO,CACXD,OAAQ,CACN,CACEoF,KAAK,WAAD,QAAa,IAAI6C,MAAOC,cAAxB,KACJjI,KAAMsF,IAGVsB,WAAY,IAERpI,EAAe,CACnBC,MAAO,CACLC,WAAY,cACZ0H,SAAS,EACTzH,QAAS,CACPC,MAAM,IAGVG,OAAQ,CAAC,UAAW,UAAW,WAC/BwK,YAAa,CACXC,IAAK,CACHxK,WAAY,CACVgI,SAAU,YAIhB/H,KAAM,CACJwK,YAAarK,EAAMG,QAAQmK,QAC3BjK,MAAO,CACLkK,MAAO,CACL/K,MAAM,IAGViB,MAAO,CACL8J,MAAO,CACL/K,MAAM,KAIZuB,OAAQ,CACNoE,OAAQ,CACNlE,OAAQ,CACNJ,KAAM,SAGV2J,MAAO,CACLvJ,OAAQ,CACNJ,KAAM,UAIZhC,KAAM,CACJgC,KAAM,QACN4J,QAAS,IAEX3C,OAAQ,CACNtI,MAAM,GAERM,OAAQ,CACNH,OAAQ,CAAC,eACTH,MAAM,EACNO,MAAO,GAETC,MAAO,CACLC,KAAMD,EAAMG,QAAQF,MAEtBI,MAAO,CACLE,WAAY,CACVf,MAAM,GAERkL,cAAe,KACflK,UAAW,CACThB,MAAM,GAERgI,WAAYwC,EAEZ1J,OAAQ,CACN+G,MAAO,CACL1H,OAAQK,EAAMG,QAAQmH,KAAKC,aAIjC9G,MAAO,CACLH,OAAQ,CACN8G,SAAU,GACVC,MAAO,CACL1H,OAAQK,EAAMG,QAAQmH,KAAKC,cAM7BS,EAAcpH,EAAKD,OAEzB,OACE,eAACgB,EAAA,EAAD,2BAAU4B,GAAV,cACE,sBACE8D,MAAO,CACLtF,QAAS,OACTD,WAAY,SACZE,eAAgB,iBAJpB,UAOE,cAACyC,EAAA,EAAD,CACEkG,UACE,cAACzI,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,QAAQ,QAA1C,SACG6D,YAAO,IAAI2C,KAAQ,kBAGxBjE,MAAM,kBAER,eAACiG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAY1E,GAAG,WAAf,mBAEA,cAAC2E,EAAA,EAAD,CACEzD,MAAO,CAAEtH,MAAO,KAEhBgL,QAAQ,WACR7J,MAAOsH,EACPwC,SAAU1B,EACVnD,GAAG,WACH8E,MAAM,WACNlF,KAAK,WARP,SAUGuC,EAAS9C,KAAI,SAAC0F,GAAD,OACZ,cAACC,EAAA,EAAD,CAA0BjK,MAAOgK,EAAO/E,GAAxC,SACG+E,EAAOE,WADKF,EAAO/E,YAKb,IACf,eAACyE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAY1E,GAAG,UAAf,qBAEA,cAAC2E,EAAA,EAAD,CACEzD,MAAO,CAAEtH,MAAO,KAEhBgL,QAAQ,UACR7J,MAAOwH,EACPsC,SAAU1B,EACVnD,GAAG,UACH8E,MAAM,UACNlF,KAAK,UARP,SAUGqC,EAAQ5C,KAAI,SAAC0F,GAAD,OACX,cAACC,EAAA,EAAD,CAA0BjK,MAAOgK,EAAO/E,GAAxC,SACG+E,EAAOnF,MADKmF,EAAO/E,YAM5B,eAACyE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAY1E,GAAG,OAAf,kBAEA,cAAC2E,EAAA,EAAD,CACEzD,MAAO,CAAEtH,MAAO,KAEhBgL,QAAQ,OACR7J,MAAOgH,EACP8C,SAtNW,SAACK,GACpBvC,EAAQuC,EAAE7B,OAAOtI,QAsNTiF,GAAG,OACH8E,MAAM,OACNlF,KAAK,OARP,SAUGkC,GAAKzC,KAAI,SAAC0F,GAAD,OACR,cAACC,EAAA,EAAD,CAA0BjK,MAAOgK,EAAOhD,KAAxC,SACGgD,EAAOhD,MADKgD,EAAO/E,eAO9B,cAACmF,EAAA,EAAD,UACE,cAAC1J,EAAA,EAAD,CACEC,GAAI,CACFqB,OAAQ,IACRqI,SAAU,IACVhJ,GAAI,GAJR,SAOE,cAAC,IAAD,CACEW,OAAO,MACPxC,QAAStB,EACTuB,OAAQqH,EACRnH,KAAK,iB,wCChMF2K,UAvFG,WAChB,IAAQC,EAAaC,eAAbD,SAMR,OAJAxH,qBAAU,WACR0H,KAAI9E,KAAK,CAAE0C,MAAO,gBACjB,IAGD,qCACE,cAAC,IAAD,UACE,8EAEF,cAAC3H,EAAA,EAAD,CACEC,GAAI,CACFiB,gBAAiB,qBACjB8I,UAAW,OACXpJ,GAAI,GAJR,SAOE,eAACqJ,EAAA,EAAD,CAAWC,WAAUL,EAASM,SAAU,KAAxC,UACE,eAAC3K,EAAA,EAAD,CAAMC,WAAS,EAACW,eAAe,gBAAgBV,QAAS,EAAxD,UACE,eAACF,EAAA,EAAD,CAAMG,MAAI,EAAV,UACE,cAACW,EAAA,EAAD,CAAYC,MAAM,cAAcC,QAAQ,KAAxC,uBAGA,eAAC4J,EAAA,EAAD,CACEC,aAAW,aACXC,UAAW,cAACC,GAAA,EAAD,CAAkBvJ,SAAS,UACtCf,GAAI,CAAEQ,GAAI,GAHZ,UAKE,cAAC+J,EAAA,EAAD,CACEjK,MAAM,cACNkK,UAAWC,IACXC,GAAG,aACHnK,QAAQ,YAJV,uBAQA,cAACF,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,QAAQ,YAA1C,6BAKJ,eAAChB,EAAA,EAAD,CAAMG,MAAI,EAAV,UACE,cAACkB,EAAA,EAAD,CACEC,QAAS,cAAC8J,GAAA,EAAD,CAAc5J,SAAS,UAChCR,QAAQ,WAFV,oBAMA,cAACK,EAAA,EAAD,CACEN,MAAM,UACNO,QAAS,cAACW,EAAA,EAAD,CAAiBT,SAAS,UACnCf,GAAI,CAAEsB,GAAI,GACVf,QAAQ,YAJV,8BAUJ,cAACR,EAAA,EAAD,CAAKC,GAAI,CAAEW,GAAI,GAAf,SACE,cAAC,EAAD,MAEF,eAACpB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACkL,GAAI,EAAGjL,GAAI,GAAIE,GAAI,GAA9B,SAEE,cAAC,GAAD,CAAkBG,GAAI,CAAEqB,OAAQ,YAElC,cAAC9B,EAAA,EAAD,CAAMG,MAAI,EAACkL,GAAI,EAAGjL,GAAI,EAAGE,GAAI,GAA7B,SACE,cAAC,EAAD,MAQF,cAACN,EAAA,EAAD,CAAMG,MAAI,EAACkL,GAAI,EAAGjL,GAAI,GAAIE,GAAI,GAA9B,SACE,cAAC,EAAD,mB,iCChGd,mBAEM8K,EAAW9N,YACf,qBACEC,MAAM,6BACNC,QAAQ,YACRC,KAAK,eAHP,SAKE,sBACEG,SAAS,UACTF,EAAE,wLACFG,SAAS,cAEL,YAGKuN,O,gFChBf,qBAIIE,GAJJ,MAIYC,KAAKC,MAAMC,aAAaC,QAAQ,iBAM7B,eAAsB,IAC7B/I,EAAcgJ,IAAMC,OAAO,CAC/BC,QAAS,yBACTC,QAAS,CACPC,cAAc,UAAD,OAAYT,MAsC7B,OAxBA3I,EAAYqJ,aAAaC,SAASC,KAChC,SAACD,GAAD,OACE,IAAIE,SAAQ,SAACC,EAASC,GACpBD,EAAQH,SAEZ,SAACjK,GACA,OAAKA,EAAMiK,UAKmB,KAAzBjK,EAAMiK,SAASK,QACjBxJ,QAAQC,IAAI,wBASPoJ,QAAQE,OAAOrK,IAdd,IAAImK,SAAQ,SAACC,EAASC,GAC3BA,EAAOrK,SAgBPW,I,iCCpDT,mBAEMpB,EAAajE,YACjB,qBACEC,MAAM,6BACNC,QAAQ,YACRC,KAAK,eAHP,SAKE,sBACEG,SAAS,UACTF,EAAE,2IACFG,SAAS,cAEL,cAGK0D,O,gHCZFuG,G,OAAO,uCAAG,WAAOyE,GAAP,iBAAA7J,EAAA,sEACEC,IAAYC,QAAZ,UAAuB2J,IADzB,cACfC,EADe,gBAECA,EAFD,cAEfxF,EAFe,yBAGdA,GAHc,2CAAH","file":"static/js/59.edcc5fa0.chunk.js","sourcesContent":["import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst ExternalLink = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M11 3a1 1 0 100 2h2.586l-6.293 6.293a1 1 0 101.414 1.414L15 6.414V9a1 1 0 102 0V4a1 1 0 00-1-1h-5z\" />\n    <path d=\"M5 5a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2v-3a1 1 0 10-2 0v3H5V7h3a1 1 0 000-2H5z\" />\n  </svg>, 'ExternalLink'\n);\n\nexport default ExternalLink;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst InformationCircle = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'InformationCircle'\n);\n\nexport default InformationCircle;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst ChevronUp = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'ChevronUp'\n);\n\nexport default ChevronUp;\n","import Chart from 'react-apexcharts';\nimport { Avatar, Box, Button, Card, Divider, Grid, Typography } from '@material-ui/core';\nimport { alpha, useTheme } from '@material-ui/core/styles';\nimport ArrowRightIcon from '../../../icons/ArrowRight';\nimport ChevronDownIcon from '../../../icons/ChevronDown';\nimport ChevronUpIcon from '../../../icons/ChevronUp';\n\nconst LineChart = () => {\n  const theme = useTheme();\n\n  const chartOptions = {\n    chart: {\n      background: 'transparent',\n      toolbar: {\n        show: false\n      },\n      zoom: {\n        enabled: false\n      }\n    },\n    colors: ['#7783DB'],\n    dataLabels: {\n      enabled: false\n    },\n    grid: {\n      show: false\n    },\n    stroke: {\n      width: 3\n    },\n    theme: {\n      mode: theme.palette.mode\n    },\n    tooltip: {\n      enabled: false\n    },\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    yaxis: {\n      show: false\n    }\n  };\n\n  const chartSeries = [{ data: [0, 60, 30, 60, 0, 30, 10, 30, 0] }];\n\n  return (\n    <Chart\n      options={chartOptions}\n      series={chartSeries}\n      type=\"line\"\n      width={120}\n    />\n  );\n};\n\nconst BarChart = () => {\n  const theme = useTheme();\n\n  const chartOptions = {\n    chart: {\n      background: 'transparent',\n      toolbar: {\n        show: false\n      },\n      zoom: {\n        enabled: false\n      }\n    },\n    colors: ['#7783DB'],\n    dataLabels: {\n      enabled: false\n    },\n    grid: {\n      show: false\n    },\n    states: {\n      normal: {\n        filter: {\n          type: 'none',\n          value: 0\n        }\n      }\n    },\n    stroke: {\n      width: 0\n    },\n    theme: {\n      mode: theme.palette.mode\n    },\n    tooltip: {\n      enabled: false\n    },\n    xaxis: {\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      labels: {\n        show: false\n      }\n    },\n    yaxis: {\n      show: false\n    }\n  };\n\n  const chartSeries = [{ data: [10, 20, 30, 40, 50, 60, 5] }];\n\n  return (\n    <Chart\n      options={chartOptions}\n      series={chartSeries}\n      type=\"bar\"\n      width={120}\n    />\n  );\n};\n\nconst AnalyticsGeneralOverview = () => (\n  <Grid\n    container\n    spacing={2}\n  >\n    <Grid\n      item\n      md={3}\n      sm={6}\n      xs={12}\n    >\n      <Card>\n        <Box\n          sx={{\n            alignItems: 'center',\n            display: 'flex',\n            justifyContent: 'space-between',\n            p: 3\n          }}\n        >\n          <div>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"subtitle2\"\n            >\n              Impressions\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              sx={{ mt: 1 }}\n              variant=\"h4\"\n            >\n              1.9M\n            </Typography>\n          </div>\n          <LineChart />\n        </Box>\n        <Divider />\n        <Box\n          sx={{\n            px: 3,\n            py: 2\n          }}\n        >\n          <Button\n            color=\"primary\"\n            endIcon={<ArrowRightIcon fontSize=\"small\" />}\n            variant=\"text\"\n          >\n            See all visits\n          </Button>\n        </Box>\n      </Card>\n    </Grid>\n    <Grid\n      item\n      md={3}\n      sm={6}\n      xs={12}\n    >\n      <Card>\n        <Box\n          sx={{\n            alignItems: 'center',\n            display: 'flex',\n            justifyContent: 'space-between',\n            p: 3\n          }}\n        >\n          <div>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"subtitle2\"\n            >\n              Spent\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              sx={{ mt: 1 }}\n              variant=\"h5\"\n            >\n              $41.2K\n            </Typography>\n          </div>\n          <LineChart />\n        </Box>\n        <Divider />\n        <Box\n          sx={{\n            alignItems: 'center',\n            display: 'flex',\n            px: 3,\n            py: 2\n          }}\n        >\n          <Avatar\n            sx={{\n              backgroundColor: (theme) => alpha(theme.palette.success.main, 0.08),\n              color: 'success.main',\n              height: 36,\n              width: 36\n            }}\n          >\n            <ChevronUpIcon fontSize=\"small\" />\n          </Avatar>\n          <Typography\n            color=\"textSecondary\"\n            sx={{ ml: 1 }}\n            variant=\"caption\"\n          >\n            12% more then last month\n          </Typography>\n        </Box>\n      </Card>\n    </Grid>\n    <Grid\n      item\n      md={3}\n      sm={6}\n      xs={12}\n    >\n      <Card>\n        <Box\n          sx={{\n            alignItems: 'center',\n            display: 'flex',\n            justifyContent: 'space-between',\n            p: 3\n          }}\n        >\n          <div>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"subtitle2\"\n            >\n              Engagements\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              sx={{ mt: 1 }}\n              variant=\"h5\"\n            >\n              36,6K\n            </Typography>\n          </div>\n          <LineChart />\n        </Box>\n        <Divider />\n        <Box\n          sx={{\n            alignItems: 'center',\n            display: 'flex',\n            px: 3,\n            py: 2\n          }}\n        >\n          <Avatar\n            sx={{\n              backgroundColor: (theme) => alpha(theme.palette.error.main, 0.08),\n              color: 'error.main',\n              height: 36,\n              width: 36\n            }}\n          >\n            <ChevronDownIcon fontSize=\"small\" />\n          </Avatar>\n          <Typography\n            color=\"textSecondary\"\n            sx={{ ml: 1 }}\n            variant=\"caption\"\n          >\n            30% less then last month\n          </Typography>\n        </Box>\n      </Card>\n    </Grid>\n    <Grid\n      item\n      md={3}\n      sm={6}\n      xs={12}\n    >\n      <Card>\n        <Box\n          sx={{\n            alignItems: 'center',\n            display: 'flex',\n            justifyContent: 'space-between',\n            p: 3\n          }}\n        >\n          <div>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"subtitle2\"\n            >\n              Conversions\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              sx={{ mt: 1 }}\n              variant=\"h5\"\n            >\n              131,3K\n            </Typography>\n          </div>\n          <BarChart />\n        </Box>\n        <Divider />\n        <Box\n          sx={{\n            alignItems: 'center',\n            display: 'flex',\n            px: 3,\n            py: 2\n          }}\n        >\n          <Avatar\n            sx={{\n              backgroundColor: (theme) => alpha(theme.palette.success.main, 0.08),\n              color: 'success.main',\n              height: 36,\n              width: 36\n            }}\n          >\n            <ChevronUpIcon fontSize=\"small\" />\n          </Avatar>\n          <Typography\n            color=\"textSecondary\"\n            sx={{ ml: 1 }}\n            variant=\"caption\"\n          >\n            12% more then last month\n          </Typography>\n        </Box>\n      </Card>\n    </Grid>\n  </Grid>\n);\n\nexport default AnalyticsGeneralOverview;\n","import React,{ useState,useEffect } from 'react';\nimport numeral from 'numeral';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip,\n  Typography\n} from '@material-ui/core';\nimport InformationCircleIcon from '../../../icons/InformationCircle';\nimport { customAxios } from '../../../mangement/apis/Axios';\nimport moment from 'moment';\nimport getInitials from '../../../utils/getInitials';\n\nconst sortCountries = (state, order) => {\n  console.log(state)\n   return (\n    state.sort((a, b) => {\n    if (order === 'asc') {\n      return a.date < b.date ? -1 : 1;\n    }\n\n    return a.date > b.date ? -1 : 1;\n  })\n)}\nconst countries = [\n  {\n    flag: '/static/icons/us_flag.svg',\n    name: 'United States',\n    seo: 40,\n    visits: 31200\n  },\n  {\n    flag: '/static/icons/uk_flag.svg',\n    name: 'United Kingdom',\n    seo: 47,\n    visits: 12700\n  },\n  {\n    flag: '/static/icons/ru_flag.svg',\n    name: 'Russia',\n    seo: 65,\n    visits: 10360\n  },\n  {\n    flag: '/static/icons/ca_flag.svg',\n    name: 'Canada',\n    seo: 23,\n    visits: 5749\n  },\n  {\n    flag: '/static/icons/de_flag.svg',\n    name: 'Germany',\n    seo: 45,\n    visits: 2932\n  }\n];\n\nconst AnalyticsVisitsByCountry = (props) => {\n  const [order, setOrder] = useState('desc');\n  const [state,setState]=useState([]);\n  const handleSort = () => {\n    setOrder((prevOrder) => {\n      if (prevOrder === 'asc') {\n        return 'desc';\n      }\n\n      return 'asc';\n    });\n  };\n\nconst latestFeePayer=async()=>{\n const data = await customAxios.getCall(\"finance/latespayers\");\n setState(data)\n}\n\n\nuseEffect(()=>{\n  latestFeePayer()\n  console.log(state);\n},[])\n\n  const sortedCountries = sortCountries(state, order);\n\n  return (\n    <Card {...props}>\n      <CardHeader\n        disableTypography\n        title={\n          <Box\n            sx={{\n              alignItems: \"center\",\n              display: \"flex\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Typography color=\"textPrimary\" variant=\"h6\">\n              Payments\n            </Typography>\n            <Tooltip title=\"Refresh rate is 24h\">\n              <InformationCircleIcon fontSize=\"small\" />\n            </Tooltip>\n          </Box>\n        }\n      />\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell sortDirection={order}>\n              <TableSortLabel active direction={order} onClick={handleSort}>\n                Date\n              </TableSortLabel>\n            </TableCell>\n            <TableCell>Payment</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {sortedCountries.map((country) => (\n            <TableRow\n              key={country.id}\n              sx={{\n                \"&:last-child td\": {\n                  border: 0,\n                },\n              }}\n            >\n              <TableCell>\n                <Box\n                  sx={{\n                    alignItems: \"center\",\n                    display: \"flex\",\n                  }}\n                >\n                  <Box\n                    sx={{\n                      height: 36,\n                      width: 36,\n                      \"& Avatar\": {\n                        height: 36,\n                        width: 36,\n                        borderRadius: \"50%\",\n                      },\n                    }}\n                  >\n                    <Avatar\n                      src={`http://localhost:8000/uploads/${country.student_image}`}\n                      sx={{\n                        height: 42,\n                        width: 42,\n                      }}\n                    >\n                      {getInitials(country.name)}\n                    </Avatar>\n                  </Box>\n                  <Typography\n                    color=\"textPrimary\"\n                    sx={{ ml: 2 }}\n                    variant=\"subtitle2\"\n                  >\n                    {country.name}\n                  </Typography>\n                </Box>\n              </TableCell>\n              <TableCell>{moment(country.date).format(\"YYYY-MM-DD\")}</TableCell>\n              <TableCell>{country.paid}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Card>\n  );\n};\n\nexport default AnalyticsVisitsByCountry;\n","import {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  Tooltip,\r\n  Typography,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { customAxios } from \"../../../mangement/apis/Axios\";\r\n\r\n\r\n\r\nconst AnalyticGeneralOverAnalysis = () => {\r\n  const theme = useTheme();\r\nconst [state,setState]=useState([])\r\n\r\nconst getGraphData=async()=>{\r\nconst data=await customAxios.getCall(\"finance/graph\")\r\nsetState(data)\r\nconsole.log(data);\r\n}\r\n\r\nuseEffect(()=>{\r\n  getGraphData();\r\n},[])\r\n\r\n\r\nlet years=[]\r\nlet IncomeRevenu=[]\r\nlet monthlyExpense=[]\r\n\r\nstate.forEach((ele)=>{\r\n  if(!years.includes(ele.YEAR)){\r\n    years.push(ele.YEAR);\r\n  }\r\n  if (ele?.montlyPaidGrapgh){\r\n    IncomeRevenu.push(ele.montlyPaidGrapgh);\r\n\r\n  } \r\n  if (ele?.montlhyExpense) {\r\n    monthlyExpense.push(ele.montlhyExpense);\r\n  } \r\n})\r\n\r\n\r\nconsole.log(\"years\", years);\r\nconsole.log(\"IncomeRevenu\", IncomeRevenu);\r\n  const data = {\r\n    series: [\r\n      {\r\n        name: \"Income\",\r\n        type: \"column\",\r\n        color: \"#008FFB\",\r\n\r\n        data: IncomeRevenu,\r\n      },\r\n      {\r\n        name: \"Cashflow\",\r\n        type: \"column\",\r\n        color: \"#4CAF50\",\r\n\r\n        data: monthlyExpense,\r\n      },\r\n      // {\r\n      //   name: \"Revenue\",\r\n      //   type: \"line\",\r\n      //   color: \"#FF9800\",\r\n\r\n      //   data: IncomeRevenu,\r\n      // },\r\n    ],\r\n  };\r\n  const chartOptions = {\r\n    chart: {\r\n      background: \"transparent\",\r\n\r\n      height: 350,\r\n      type: \"line\",\r\n      stacked: false,\r\n    },\r\n\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    stroke: {\r\n      curve: \"smooth\",\r\n      lineCap: \"butt\",\r\n      width: [1, 1, 4],\r\n    },\r\n    title: {\r\n      align: \"left\",\r\n      offsetX: 110,\r\n      style: {\r\n        color: theme.palette.text.secondary,\r\n      },\r\n    },\r\n    // colors: data.series.map((item) => item.color),\r\n    colors: [\"#3C4693\", \"#7783DB\", \"#7783DB\"],\r\n    xaxis: {\r\n      // categories: [2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016],\r\n      categories: years,\r\n    },\r\n    yaxis: [\r\n      {\r\n        axisTicks: {\r\n          show: true,\r\n        },\r\n        axisBorder: {\r\n          show: true,\r\n          color: \"#008FFB\",\r\n        },\r\n        labels: {\r\n          style: {\r\n            colors: \"#008FFB\",\r\n          },\r\n        },\r\n        title: {\r\n          text: \"Income (thousand crores)\",\r\n          style: {\r\n            color: \"#008FFB\",\r\n          },\r\n        },\r\n        tooltip: {\r\n          enabled: true,\r\n        },\r\n      },\r\n      {\r\n        seriesName: \"Income\",\r\n        opposite: true,\r\n        axisTicks: {\r\n          show: true,\r\n        },\r\n        axisBorder: {\r\n          show: true,\r\n          color: \"#4CAF50\",\r\n        },\r\n        labels: {\r\n          style: {\r\n            colors: \"#4CAF50\",\r\n          },\r\n        },\r\n        title: {\r\n          text: \"Operating Cashflow (thousand crores)\",\r\n          style: {\r\n            color: \"#4CAF50\",\r\n          },\r\n        },\r\n      },\r\n      {\r\n        seriesName: \"Revenue\",\r\n        opposite: true,\r\n        axisTicks: {\r\n          show: true,\r\n        },\r\n        axisBorder: {\r\n          show: true,\r\n          color: \"#FF9800\",\r\n        },\r\n        labels: {\r\n          style: {\r\n            colors: \"#FF9800\",\r\n          },\r\n        },\r\n        title: {\r\n          text: \"Revenue (thousand crores)\",\r\n          style: {\r\n            color: \"#FF9800\",\r\n          },\r\n        },\r\n      },\r\n    ],\r\n    theme: {\r\n      mode: theme.palette.mode,\r\n    },\r\n    tooltip: {\r\n      fixed: {\r\n        enabled: false,\r\n        position: \"topLeft\", // topRight, topLeft, bottomRight, bottomLeft\r\n        offsetY: 30,\r\n        offsetX: 60,\r\n      },\r\n    },\r\n    legend: {\r\n      horizontalAlign: \"left\",\r\n      offsetX: 40,\r\n    },\r\n  };\r\n\r\n  const chartSeries = data.series;\r\n  return (\r\n    <>\r\n      <div id=\"chart\">\r\n        <Card>\r\n          <CardHeader\r\n            disableTypography\r\n            title={\r\n              <Box\r\n                sx={{\r\n                  alignItems: \"center\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <Typography color=\"textPrimary\" variant=\"h6\">\r\n                  Stock Analysis\r\n                </Typography>\r\n              </Box>\r\n            }\r\n          />\r\n          <ReactApexChart\r\n            options={chartOptions}\r\n            series={chartSeries}\r\n            type=\"line\"\r\n            height={350}\r\n          />\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnalyticGeneralOverAnalysis;\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { format, formatDistance, formatRelative, subDays } from \"date-fns\";\r\nimport Scrollbar from \"../../Scrollbar\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport userService from \"../../../mangement/apis/userService\";\r\nimport { customAxios } from \"../../../mangement/apis/Axios\";\r\nimport { Section } from \"../../../mangement/HelperFunction\";\r\nconst Year = [\r\n  {\r\n    id: 1,\r\n    year: 2020,\r\n  },\r\n  { id: 2, year: 2021 },\r\n  { id: 3, year: 2022 },\r\n  { id: 4, year: 2023 },\r\n  { id: 5, year: 2024 },\r\n];\r\nconst SingleClass_Data = (props) => {\r\n  const theme = useTheme();\r\n  const [state, setState] = useState([]);\r\n  const [section, setsection] = useState([]);\r\n  const [ClassObj, setClassObj] = useState([]);\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n  const [selectedOption2, setSelectedOption2] = useState(\"\");\r\n  const [year, setYear] = useState(new Date().getFullYear());\r\n  const isInitialRender = useRef(true);\r\n  useEffect(() => {\r\n    console.time(\"apiCall\");\r\n\r\n    const fun = Section(\"class/api\");\r\n    fun.then((res) => {\r\n      console.timeEnd(\"apiCall\");\r\n      setClassObj(res);\r\n      // console.log(\"class\", res[0].id);\r\n      setSelectedOption(res[0].id);\r\n    });\r\n    const fun1 = Section(\"class/api/section\");\r\n    fun1.then((res) => {\r\n      setsection(res);\r\n      setSelectedOption2(res[0].id);\r\n      // console.log(\"section\", res[0].id);\r\n    });\r\n  }, []);\r\n  console.log(\"section\", selectedOption);\r\n  console.log(\"section\", selectedOption2);\r\n  const handleChange = (e) => {\r\n    setYear(e.target.value);\r\n  };\r\n  const handleChange2 = (event) => {\r\n    const { name, value } = event.target;\r\n    if (name === \"ClassObj\") {\r\n      setSelectedOption(value);\r\n    } else if (name === \"section\") {\r\n      setSelectedOption2(value);\r\n    }\r\n  };\r\n\r\n  useEffect(async () => {\r\n    if (isInitialRender.current) {\r\n      isInitialRender.current = false;\r\n      return;\r\n    }\r\n    const montlyTotal = await customAxios.getCalls(\r\n      \"finance//single-graph-class\",\r\n      {\r\n        params: {\r\n          yearid: year,\r\n          dataClass: selectedOption || 0,\r\n          sectionId: selectedOption2 || 0,\r\n        },\r\n      }\r\n    );\r\n    // const montlyTotal = await axios.get(`${url}/graph`, {\r\n    //   params: { yearid: year },\r\n    // });\r\n    setState(montlyTotal);\r\n    console.log(montlyTotal);\r\n  }, [selectedOption, selectedOption2, year]);\r\n\r\n  let month = [];\r\n  let paid = [];\r\n  var m = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n  state.forEach((ele) => {\r\n    var monthName = m[ele.month - 1];\r\n    month.push(monthName);\r\n    paid.push(ele.montlyPaidGrapgh);\r\n  });\r\n\r\n  const data = {\r\n    series: [\r\n      {\r\n        name: `paid in ${new Date().getFullYear()} `,\r\n        data: paid,\r\n      },\r\n    ],\r\n    categories: [],\r\n  };\r\n  const chartOptions = {\r\n    chart: {\r\n      background: \"transparent\",\r\n      stacked: true,\r\n      toolbar: {\r\n        show: true,\r\n      },\r\n    },\r\n    colors: [\"#3C4693\", \"#7783DB\", \"#7783DB\"],\r\n    plotOptions: {\r\n      bar: {\r\n        dataLabels: {\r\n          position: \"center\", // top, center, bottom\r\n        },\r\n      },\r\n    },\r\n    grid: {\r\n      borderColor: theme.palette.divider,\r\n      xaxis: {\r\n        lines: {\r\n          show: true,\r\n        },\r\n      },\r\n      yaxis: {\r\n        lines: {\r\n          show: true,\r\n        },\r\n      },\r\n    },\r\n    states: {\r\n      active: {\r\n        filter: {\r\n          type: \"none\",\r\n        },\r\n      },\r\n      hover: {\r\n        filter: {\r\n          type: \"none\",\r\n        },\r\n      },\r\n    },\r\n    fill: {\r\n      type: \"solid\",\r\n      opacity: 10,\r\n    },\r\n    legend: {\r\n      show: false,\r\n    },\r\n    stroke: {\r\n      colors: [\"transparent\"],\r\n      show: true,\r\n      width: 2,\r\n    },\r\n    theme: {\r\n      mode: theme.palette.mode,\r\n    },\r\n    xaxis: {\r\n      axisBorder: {\r\n        show: false,\r\n      },\r\n      tickPlacement: \"on\",\r\n      axisTicks: {\r\n        show: false,\r\n      },\r\n      categories: month,\r\n\r\n      labels: {\r\n        style: {\r\n          colors: theme.palette.text.secondary,\r\n        },\r\n      },\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        offsetX: -12,\r\n        style: {\r\n          colors: theme.palette.text.secondary,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const chartSeries = data.series;\r\n\r\n  return (\r\n    <Card {...props}>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <CardHeader\r\n          subheader={\r\n            <Typography color=\"textSecondary\" variant=\"body2\">\r\n              {format(new Date(), \"dd MMM yyyy \")}\r\n            </Typography>\r\n          }\r\n          title=\"Total Earning\"\r\n        />\r\n        <FormControl>\r\n          <InputLabel id=\"ClassObj\">Class</InputLabel>\r\n\r\n          <Select\r\n            style={{ width: 227 }}\r\n            // fullWidth\r\n            labelId=\"ClassObj\"\r\n            value={selectedOption}\r\n            onChange={handleChange2}\r\n            id=\"ClassObj\"\r\n            label=\"ClassObj\"\r\n            name=\"ClassObj\"\r\n          >\r\n            {ClassObj.map((option) => (\r\n              <MenuItem key={option.id} value={option.id}>\r\n                {option.className}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>{\" \"}\r\n        <FormControl>\r\n          <InputLabel id=\"section\">Section</InputLabel>\r\n\r\n          <Select\r\n            style={{ width: 227 }}\r\n            // fullWidth\r\n            labelId=\"section\"\r\n            value={selectedOption2}\r\n            onChange={handleChange2}\r\n            id=\"section\"\r\n            label=\"section\"\r\n            name=\"section\"\r\n          >\r\n            {section.map((option) => (\r\n              <MenuItem key={option.id} value={option.id}>\r\n                {option.name}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl>\r\n          <InputLabel id=\"year\">Year</InputLabel>\r\n\r\n          <Select\r\n            style={{ width: 227 }}\r\n            // fullWidth\r\n            labelId=\"year\"\r\n            value={year}\r\n            onChange={handleChange}\r\n            id=\"year\"\r\n            label=\"Year\"\r\n            name=\"year\"\r\n          >\r\n            {Year.map((option) => (\r\n              <MenuItem key={option.id} value={option.year}>\r\n                {option.year}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n      <Scrollbar>\r\n        <Box\r\n          sx={{\r\n            height: 336,\r\n            minWidth: 600,\r\n            px: 2,\r\n          }}\r\n        >\r\n          <Chart\r\n            height=\"300\"\r\n            options={chartOptions}\r\n            series={chartSeries}\r\n            type=\"bar\"\r\n          />\r\n        </Box>\r\n      </Scrollbar>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SingleClass_Data;\r\n","import { useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Breadcrumbs, Button, Container, Grid, Link, Typography } from '@material-ui/core';\nimport {\n  AnalyticsGeneralOverview,\n  AnalyticsMostVisitedPages,\n  AnalyticsSocialMediaSources,\n  AnalyticsVisitsByCountry,\n  AnalyticsTrafficSources,\n  AnalyticGeneralOverAnalysis,\n  SingleClass_Data,\n} from '../../components/dashboard/analytics';\nimport useSettings from '../../hooks/useSettings';\nimport ChevronDownIcon from '../../icons/ChevronDown';\nimport ChevronRightIcon from '../../icons/ChevronRight';\nimport DownloadIcon from '../../icons/Download';\nimport gtm from '../../lib/gtm';\nconst Analytics = () => {\n  const { settings } = useSettings();\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Dashboard: Analytics | Material Kit Pro</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: \"background.default\",\n          minHeight: \"100%\",\n          py: 8,\n        }}\n      >\n        <Container maxWidth={settings.compact ? \"xl\" : false}>\n          <Grid container justifyContent=\"space-between\" spacing={3}>\n            <Grid item>\n              <Typography color=\"textPrimary\" variant=\"h5\">\n                Analytics\n              </Typography>\n              <Breadcrumbs\n                aria-label=\"breadcrumb\"\n                separator={<ChevronRightIcon fontSize=\"small\" />}\n                sx={{ mt: 1 }}\n              >\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"/dashboard\"\n                  variant=\"subtitle2\"\n                >\n                  Dashboard\n                </Link>\n                <Typography color=\"textSecondary\" variant=\"subtitle2\">\n                  Analytics\n                </Typography>\n              </Breadcrumbs>\n            </Grid>\n            <Grid item>\n              <Button\n                endIcon={<DownloadIcon fontSize=\"small\" />}\n                variant=\"outlined\"\n              >\n                Export\n              </Button>\n              <Button\n                color=\"primary\"\n                endIcon={<ChevronDownIcon fontSize=\"small\" />}\n                sx={{ ml: 2 }}\n                variant=\"contained\"\n              >\n                Last month\n              </Button>\n            </Grid>\n          </Grid>\n          <Box sx={{ py: 3 }}>\n            <AnalyticsGeneralOverview />\n          </Box>\n          <Grid container spacing={3}>\n            <Grid item xl={9} md={12} xs={12}>\n              {/* <AnalyticsTrafficSources sx={{ height: \"100%\" }} /> */}\n              <SingleClass_Data sx={{ height: \"100%\" }} />\n            </Grid>\n            <Grid item xl={3} md={4} xs={12}>\n              <AnalyticsVisitsByCountry />\n            </Grid>\n            {/* <Grid item xl={9} md={8} xs={12}>\n              <AnalyticsMostVisitedPages />\n            </Grid> */}\n            {/* <Grid item xl={3} md={4} xs={12}>\n              <AnalyticsSocialMediaSources />\n            </Grid> */}\n            <Grid item xl={9} md={10} xs={12}>\n              <AnalyticGeneralOverAnalysis />\n            </Grid>\n          </Grid>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default Analytics;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Download = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Download'\n);\n\nexport default Download;\n","import axios from \"axios\";\r\nimport wait from \"../../utils/wait\";\r\n//attach authorization token and other common stuffs\r\n\r\nlet token = JSON.parse(localStorage.getItem(\"accessToken\")) ;\r\n// let token = localStorage.getItem(\"accessToken\")\r\n//   ? JSON.parse(localStorage.getItem(\"accessToken\"))\r\n//   : null;\r\n\r\n  // console.log(token)\r\nexport default (navigate = null) => {\r\n  const customAxios = axios.create({\r\n    baseURL: \"http://localhost:8000/\",\r\n    headers: {\r\n      authorization: `bearer ${token}`,\r\n    },\r\n  });\r\n\r\nfunction getTokenFromLocalStorage() {\r\n  const token = localStorage.getItem(\"accessToken\");\r\n  console.log(\"the token from local storage is -> \" + token);\r\n  if (token === null) {\r\n    return undefined;\r\n  }\r\n  return token;\r\n}\r\n\r\n\r\n  customAxios.interceptors.response.use(\r\n    (response) =>\r\n      new Promise((resolve, reject) => {\r\n        resolve(response);\r\n      }),\r\n    (error) => {\r\n     if (!error.response) { \r\n       return new Promise((resolve, reject) => {\r\n         reject(error);\r\n       });\r\n     }\r\n      if (error.response.status == 401) {\r\n        console.log(\"your are not logedin\");\r\n        // localStorage.removeItem(\"accessToken\");\r\n        // localStorage.removeItem(\"user\");\r\n        // if(navigate){\r\n        //   navigate(\"/authentication/login-unguarded\");\r\n        // }else{\r\n        //   window.location.href = \"/authentication/login-unguarded\";\r\n        // }\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n  return customAxios\r\n};\r\n\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst ArrowRight = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'ArrowRight'\n);\n\nexport default ArrowRight;\n","import axios from \"axios\";\r\nimport {customAxios} from \"./apis/Axios\";\r\nimport userService from \"./apis/userService\";\r\n\r\nexport const Section = async (endpoint) => {\r\n  const responce = await customAxios.getCall(`${endpoint}`);\r\n  const section = await responce;\r\n  return section;\r\n};\r\n\r\n// export const getAPI = async (endpoint, params={}) => {\r\n//   const responce = await axios.get(`${URL}${endpoint}`, {params:{...params}});\r\n//   // console.log(b.data)\r\n//   const section = await responce.data;\r\n//   return section;\r\n// };\r\n\r\n// export const postAPI = async (endpoint, data= {}) => {\r\n//   const responce = await axios.post(`${URL}${endpoint}`, {...data});\r\n//   // console.log(b.data)\r\n//   const section = await responce.data;\r\n//   return section;\r\n// };\r\n"],"sourceRoot":""}