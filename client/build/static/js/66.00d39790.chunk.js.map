{"version":3,"sources":["mangement/InputFeild/Input.js","mangement/teachers/teacherattendence/StaffRegisterForm.jsx","mangement/teachers/teacherattendence/StaffRegister.jsx","mangement/teachers/teacherattendence/AttendenceHead.js","mangement/teachers/teacherattendence/StaffAttendenceList2.js","mangement/teachers/teacherattendence/StaffAttendenceList.js","icons/Download.js","icons/Upload.js","mangement/apis/Api.js","icons/Plus.js","mangement/Buttons/Save.js","mangement/Buttons/ResetButton.js"],"names":["Input","props","autoFocus","error","helperText","id","label","variant","onBlur","value","onChange","autocomplete","autoComplete","useStyles","makeStyles","theme","root","margin","spacing","width","typography","padding","head","height","paddingLeft","paddingRight","paddingTop","background","highlight","palette","type","color","secondary","main","text","primary","Gender","section","religions","Degree","rolls","StaffRegisterForm","close","classes","enableReinitialize","initialValues","staffid","role","firstName","fname","motherName","gender","email","dob","joningDate","phone","maritalStatus","CNIC","qualification","workExperince","religion","epfNo","baiscSalery","workShift","contractType","location","payScal","address1","address2","zipcode","permanentAddress","validationSchema","Yup","shape","max","required","onSubmit","values","a","alert","JSON","stringify","Promise","r","setTimeout","data","console","log","customAxios","post","then","res","json","catch","err","toast","success","navigate","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","dirty","handleReset","className","Boolean","FormControl","InputLabel","Select","labelId","name","map","option","MenuItem","fatherName","idno","TextField","dojoining","degree","BasicSalery","fullWidth","address","size","Save","disabled","ResetButton","disableElevation","onClick","Button","style","StaffRegister","open","Dialog","onClose","maxWidth","aria-labelledby","aria-describedby","DialogTitle","DialogContent","padd","PaddingTop","paddingBottom","paper","marginBottom","table","minWidth","visuallyHidden","border","clip","overflow","position","top","AttendenceHead","title","title2","React","useState","setOpen","Grid","container","justifyContent","item","Typography","Breadcrumbs","aria-label","separator","ChevronRight","fontSize","sx","mt","Link","component","RouterLink","to","Box","mb","mx","startIcon","Upload","m","Download","Plus","StaffAttendenceList2","rows","onComplete","attendanceRecord","picked","submit","setErrors","setStatus","setSubmitting","wait","setFieldValue","setFieldTouched","Card","p","TableContainer","Paper","Table","TableHead","TableRow","TableCell","colSpan","TableBody","length","row","first_name","Roles","RadioGroup","defaultValue","FormControlLabel","control","Radio","display","alignItems","flexGrow","CircularProgress","Role","Name","StaffAttendenceList","ref","useRef","setRows","SelectedTeacher","setSelectedTeacher","state","setState","StaffData","getCall","useEffect","stateCopy","Object","keys","SelecterTEacherCopy","combine","attendence_list","postCall","status","date","teacherRole","Date","innerRef","message","marginRight","MobileDatePicker","fullwidth","onAccept","toLocaleDateString","inputFormat","renderInput","inputProps","FormHelperText","mr","ml","staff","absentpresent","seletedTeacherCopy","obj","TeacherId","staff_id","absentPresent","findIndex","push","createSvgIcon","xmlns","viewBox","fill","fillRule","d","clipRule","token","parse","localStorage","getItem","axios","create","baseURL","headers","authorization","interceptors","response","use","resolve","reject","handleClose"],"mappings":"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","file":"static/js/66.00d39790.chunk.js","sourcesContent":["import { TextField } from '@material-ui/core';\r\nimport React from 'react'\r\n\r\nconst Input = (props) => {\r\n    const { autoFocus=false, error, helperText,id,label,variant,onBlur,value,onChange,autocomplete } = props;\r\n    // console.log(\"vv\", props);\r\n  return (\r\n    <TextField\r\n    autoComplete='of'\r\n      autocomplete={autocomplete}\r\n      autoFocus={autoFocus}\r\n      error={error}\r\n      helperText={helperText}\r\n      id={id}\r\n      label={label}\r\n      variant={variant}\r\n      value={value}\r\n      onBlur={onBlur}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Input","import React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Card,\r\n    FormControl,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\nimport Save from \"../../Buttons/Save\";\r\nimport ResetButton from \"../../Buttons/ResetButton\";\r\nimport Input from \"../../InputFeild/Input\";\r\nimport axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\nimport customAxios from \"../../apis/Api\"\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n            width: \"25ch\",\r\n            margin: \"17px\",\r\n        },\r\n    },\r\n    typography: {\r\n        padding: \"17px\",\r\n    },\r\n    head: {\r\n        height: \"100vh\",\r\n        paddingLeft: 30,\r\n        paddingRight: 30,\r\n        paddingTop: 10,\r\n        background: \"none\",\r\n    },\r\n    highlight:\r\n        theme.palette.type === \"light\"\r\n            ? {\r\n                color: theme.palette.secondary.main,\r\n                padding: \"17px\",\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                padding: \"17px\",\r\n            },\r\n}));\r\nconst Gender = [\r\n    {\r\n        value: \"male\",\r\n        label: \"0\",\r\n    },\r\n    {\r\n        value: \"Female\",\r\n        label: \"1\",\r\n    },\r\n    {\r\n        value: \"Other\",\r\n        label: \"2\",\r\n    },\r\n];\r\nconst section = [\r\n    {\r\n        value: \"Permanent\",\r\n        label: \"0\",\r\n    },\r\n    {\r\n        label: \"1\",\r\n        value: \"Temporary\",\r\n    },\r\n    {\r\n        label: \"2\",\r\n        value: \"On Contract\",\r\n    },\r\n];\r\nconst valuess = {\r\n    someDate: \"2017-05-24\",\r\n};\r\nconst religions = [\r\n    {\r\n        value: \"Islam\",\r\n        label: \"0\",\r\n    },\r\n    {\r\n        value: \"Hindu\",\r\n        label: \"1\",\r\n    },\r\n    {\r\n        value: \"Cristion\",\r\n        label: \"2\",\r\n    },\r\n];\r\nconst Degree = [\r\n    {\r\n        value: \"BS\",\r\n        label: \"0\",\r\n    },\r\n    {\r\n        value: \"Master\",\r\n        label: \"1\",\r\n    },\r\n    {\r\n        value: \"Phd\",\r\n        label: \"2\",\r\n    },\r\n];\r\nconst rolls = [\r\n    {\r\n        value: \"Teacher\",\r\n        label: \"0\",\r\n    },\r\n    {\r\n        value: \"Principle\",\r\n        label: \"1\",\r\n    },\r\n    {\r\n        value: \"Admin\",\r\n        label: \"2\",\r\n    },]\r\nconst StaffRegisterForm = ({ close }) => {\r\n    const classes = useStyles();\r\n\r\n    const MainHeading = \"Add New Teacher\";\r\n\r\n\r\n    return (\r\n        <>\r\n            <Formik\r\n                enableReinitialize\r\n                initialValues={{\r\n                    id: \"\",\r\n                    staffid: \"\",\r\n                    role: \"\",\r\n                    firstName: \"\",\r\n                    fname: \"\",\r\n                    motherName: \"\",\r\n                    gender: \"\",\r\n                    email: \"\",\r\n                    dob: \"\",\r\n                    joningDate: \"\",\r\n                    phone: \"\",\r\n                    maritalStatus: \"\",\r\n                    CNIC: \"\",\r\n                    qualification: \"\",\r\n                    workExperince: \"\",\r\n                    religion: \"\",\r\n                    epfNo: \"\",\r\n                    baiscSalery: \"\",\r\n                    workShift: \"\",\r\n                    contractType: \"\",\r\n                    location: \"\",\r\n                    payScal: \"\",\r\n                    address1: \"\",\r\n                    address2: \"\",\r\n                    zipcode: \"\",\r\n                    permanentAddress: \"\",\r\n                    // clas: \"\",\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string()\r\n                        .email(\"Must be a valid email\")\r\n                        .max(255)\r\n                        .required(\"Email is required\"),\r\n                })}\r\n                onSubmit={async (values) => {\r\n                    // console.log(\"val\", values);\r\n                    alert(JSON.stringify(values, null, 2))\r\n                    // return\r\n                    await new Promise((r) => setTimeout(r, 500));\r\n                    const data = { ...values};\r\n                    console.log(data);\r\n\r\n                    await customAxios()\r\n                        .post(\"http://localhost:8000/teacher/addupdate\", { ...data })\r\n                        .then((res) => {\r\n                            res.json;\r\n                        })\r\n                        .catch((err) => {\r\n                            console.log(err);\r\n                        });\r\n                    toast.success(\"Add SuccessFully\");\r\n\r\n                    navigate(\"../teachers\");\r\n                }}\r\n            >\r\n                {({\r\n                    errors,\r\n                    handleBlur,\r\n                    handleChange,\r\n                    handleSubmit,\r\n                    isSubmitting,\r\n                    touched,\r\n                    values,\r\n                    dirty,\r\n                    handleReset,\r\n                }) => (\r\n                    <div>\r\n\r\n\r\n                        <form onSubmit={handleSubmit}>\r\n\r\n                            <div className={classes.root}>\r\n                                <Input\r\n                                    autoFocus\r\n                                    error={Boolean(touched.id && errors.id)}\r\n                                    helperText={touched.id && errors.id}\r\n                                    id=\"id\"\r\n                                    label=\"Staff ID\"\r\n                                    variant=\"outlined\"\r\n                                    value={values.id}\r\n                                    onBlur={handleBlur}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                <FormControl>\r\n                                    <InputLabel id=\"role\">Select Roll</InputLabel>\r\n\r\n                                    <Select\r\n                                        // fullWidth\r\n                                        labelId=\"role\"\r\n                                        value={values.role}\r\n                                        onChange={handleChange}\r\n                                        id=\"role\"\r\n                                        label=\"Select Roll\"\r\n                                        name=\"role\"\r\n                                    >\r\n                                        {rolls.map((option) => (\r\n                                            <MenuItem key={option.label} value={option.value}>\r\n                                                {option.value}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl><FormControl>\r\n                                    <InputLabel id=\"role\">Designationl</InputLabel>\r\n\r\n                                    <Select\r\n                                        // fullWidth\r\n                                        labelId=\"role\"\r\n                                        value={values.role}\r\n                                        onChange={handleChange}\r\n                                        id=\"role\"\r\n                                        label=\"Designation\"\r\n                                        name=\"role\"\r\n                                    >\r\n                                        {rolls.map((option) => (\r\n                                            <MenuItem key={option.label} value={option.value}>\r\n                                                {option.value}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <FormControl>\r\n                                    <InputLabel id=\"role\">Department</InputLabel>\r\n\r\n                                    <Select\r\n                                        // fullWidth\r\n                                        labelId=\"role\"\r\n                                        value={values.role}\r\n                                        onChange={handleChange}\r\n                                        id=\"role\"\r\n                                        label=\"Department\"\r\n                                        name=\"role\"\r\n                                    >\r\n                                        {rolls.map((option) => (\r\n                                            <MenuItem key={option.label} value={option.value}>\r\n                                                {option.value}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <Input\r\n                                    autoFocus\r\n                                    error={Boolean(touched.name && errors.name)}\r\n                                    helperText={touched.name && errors.name}\r\n                                    id=\"name\"\r\n                                    label=\"First Name\"\r\n                                    variant=\"outlined\"\r\n                                    value={values.name}\r\n                                    onBlur={handleBlur}\r\n                                    onChange={handleChange}\r\n                                />{\" \"}\r\n                               \r\n                                 <Input\r\n                                    error={Boolean(touched.fatherName && errors.fatherName)}\r\n                                    helperText={touched.fatherName && errors.fatherName}\r\n                                    id=\"fatherName\"\r\n                                    label=\"Father Name\"\r\n                                    variant=\"outlined\"\r\n                                    value={values.fatherName}\r\n                                    onBlur={handleBlur}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                <FormControl>\r\n                                    <InputLabel id=\"gender\">Gender</InputLabel>\r\n\r\n                                    <Select\r\n                                        // fullWidth\r\n                                        labelId=\"gender\"\r\n                                        value={values.gender}\r\n                                        onChange={handleChange}\r\n                                        id=\"gender\"\r\n                                        label=\"Gender\"\r\n                                        name=\"gender\"\r\n                                    >\r\n                                        {Gender.map((option) => (\r\n                                            <MenuItem key={option.label} value={option.value}>\r\n                                                {option.value}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <Input\r\n                                    error={Boolean(touched.idno && errors.idno)}\r\n                                    helperText={touched.idno && errors.idno}\r\n                                    id=\"idno\"\r\n                                    label=\"CNIC No\"\r\n                                    variant=\"outlined\"\r\n                                    value={values.idno}\r\n                                    onBlur={handleBlur}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                <TextField\r\n                                    error={Boolean(touched.dob && errors.dob)}\r\n                                    helperText={touched.dob && errors.dob}\r\n                                    id=\"dob\"\r\n                                    value={values.dob}\r\n                                    label=\"Date of Birth\"\r\n                                    type=\"date\"\r\n                                    variant=\"outlined\"\r\n                                    onBlur={handleBlur}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                <TextField\r\n                                    error={Boolean(touched.dojoining && errors.dojoining)}\r\n                                    helperText={touched.dojoining && errors.dojoining}\r\n                                    id=\"dojoining\"\r\n                                    value={values.dojoining}\r\n                                    label=\"Date of Joining\"\r\n                                    type=\"date\"\r\n                                    variant=\"outlined\"\r\n                                    onBlur={handleBlur}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                <FormControl>\r\n                                    <InputLabel id=\"degree\">Degree</InputLabel>\r\n\r\n                                    <Select\r\n                                        labelId=\"degree\"\r\n                                        id=\"degree\"\r\n                                        label=\"Degree\"\r\n                                        value={values.degree}\r\n                                        onChange={handleChange}\r\n                                        name=\"degree\"\r\n                                    >\r\n                                        {Degree.map((option) => (\r\n                                            <MenuItem key={option.label} value={option.value}>\r\n                                                {option.value}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <Input\r\n                                    error={Boolean(touched.BasicSalery && errors.BasicSalery)}\r\n                                    helperText={touched.BasicSalery && errors.BasicSalery}\r\n                                    id=\"BasicSalery\"\r\n                                    label=\"Basic Salery\"\r\n                                    variant=\"outlined\"\r\n                                    type=\"number\"\r\n                                    onBlur={handleBlur}\r\n                                    onChange={handleChange}\r\n                                    value={values.BasicSalery}\r\n                                />\r\n                                <FormControl>\r\n                                    <InputLabel id=\"Contract type\">Contract type</InputLabel>\r\n\r\n                                    <Select\r\n                                        // fullWidth\r\n                                        labelId=\"contractType\"\r\n                                        value={values.contractType}\r\n                                        onChange={handleChange}\r\n                                        id=\"contractType\"\r\n                                        label=\"Contract type\"\r\n                                        name=\"contractType\"\r\n                                    >\r\n                                        {section.map((option) => (\r\n                                            <MenuItem key={option.label} value={option.value}>\r\n                                                {option.value}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>{\" \"}\r\n                                <FormControl>\r\n                                    <InputLabel id=\"religion\">Religion</InputLabel>\r\n\r\n                                    <Select\r\n                                        // fullWidth\r\n                                        labelId=\"religion\"\r\n                                        value={values.religion}\r\n                                        onChange={handleChange}\r\n                                        id=\"religion\"\r\n                                        label=\"Religion\"\r\n                                        name=\"religion\"\r\n                                    >\r\n                                        {religions.map((option) => (\r\n                                            <MenuItem key={option.label} value={option.value}>\r\n                                                {option.value}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <Input\r\n                                    error={Boolean(touched.phone && errors.phone)}\r\n                                    helperText={touched.phone && errors.phone}\r\n                                    id=\"phone\"\r\n                                    label=\"Phone\"\r\n                                    variant=\"outlined\"\r\n                                    type=\"number\"\r\n                                    onBlur={handleBlur}\r\n                                    onChange={handleChange}\r\n                                    value={values.phone}\r\n                                />\r\n                                <Input\r\n                                    error={Boolean(touched.email && errors.email)}\r\n                                    fullWidth\r\n                                    helperText={touched.email && errors.email}\r\n                                    id=\"email\"\r\n                                    label=\"E-mail \"\r\n                                    margin=\"normal\"\r\n                                    name=\"email\"\r\n                                    onBlur={handleBlur}\r\n                                    onChange={handleChange}\r\n                                    type=\"email\"\r\n                                    value={values.email}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                                <Input\r\n                                    error={Boolean(touched.address && errors.address)}\r\n                                    helperText={touched.address && errors.address}\r\n                                    id=\"address\"\r\n                                    label=\"Address\"\r\n                                    size=\"medium\"\r\n                                    value={values.address}\r\n                                    variant=\"outlined\"\r\n                                    onBlur={handleBlur}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </div>\r\n                            <Save\r\n                                text=\"Save\"\r\n                                variant=\"contained\"\r\n                                size=\"medium\"\r\n                                color=\"success\"\r\n                                type=\"submit\"\r\n                                disabled={isSubmitting}\r\n                            />\r\n                            <ResetButton\r\n                                text=\"Reset\"\r\n                                variant=\"contained\"\r\n                                size=\"medium\"\r\n                                color=\"primary\"\r\n                                disableElevation\r\n                                onClick={handleReset}\r\n                                disabled={!dirty || isSubmitting}\r\n                            />\r\n                            <Button\r\n                                style={{ margin: \"17px\" }}\r\n                                variant=\"contained\"\r\n                                size=\"medium\"\r\n                                color=\"error\"\r\n                                onClick={close}\r\n                            >\r\n                                Close\r\n                            </Button>\r\n                        </form>\r\n                    </div>\r\n                )}\r\n            </Formik>\r\n\r\n        </>\r\n    );\r\n}\r\nexport default StaffRegisterForm;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport StaffRegisterForm from \"./StaffRegisterForm\"\r\nconst StaffRegister=({open,close})=> {\r\n \r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={open}\r\n                onClose={close}\r\n                maxWidth=\"lg\"\r\n                fullWidth={true}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Register Staff\"}</DialogTitle>\r\n                <DialogContent>\r\n                   <StaffRegisterForm close={close}/>\r\n                </DialogContent>\r\n               \r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\nexport default StaffRegister","import React from \"react\";\r\nimport { Box, Breadcrumbs, Button,Link, Grid, makeStyles, Typography } from \"@material-ui/core\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport ChevronRightIcon from \"../../../icons/ChevronRight\";\r\nimport PlusIcon from \"../../../icons/Plus\";\r\nimport UploadIcon from \"../../../icons/Upload\";\r\nimport DownloadIcon from \"../../../icons/Download\";\r\nimport StaffRegister from \"./StaffRegister\";\r\nimport toast from \"react-hot-toast\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  padd: {\r\n    PaddingTop: \"30px\",\r\n    paddingBottom: \"10px\",\r\n    paddingLeft: 30,\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\nconst AttendenceHead = ({title, title2}) => {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n toast.error(\"It will be soon added\");\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Grid\r\n        className={classes.padd}\r\n        container\r\n        justifyContent=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            style={{ paddingTop: \"20px\" }}\r\n            color=\"textPrimary\"\r\n            variant=\"h5\"\r\n          >\r\n            {/* {title} */}\r\n          </Typography>\r\n          <Breadcrumbs\r\n            aria-label=\"breadcrumb\"\r\n            separator={<ChevronRightIcon fontSize=\"small\" />}\r\n            sx={{ mt: 1 }}\r\n          >\r\n            <Link\r\n              color=\"textPrimary\"\r\n              component={RouterLink}\r\n              to=\"/dashboard/maindash\"\r\n              variant=\"subtitle2\"\r\n            >\r\n              Dashboard\r\n            </Link>\r\n\r\n            <Link\r\n              color=\"textPrimary\"\r\n              component={RouterLink}\r\n              to=\"/dashboard/teachers\"\r\n              variant=\"subtitle2\"\r\n            >\r\n              {title}\r\n            </Link>\r\n            <Typography color=\"textSecondary\" variant=\"subtitle2\">\r\n              {title2}\r\n            </Typography>\r\n          </Breadcrumbs>\r\n          <Box\r\n            sx={{\r\n              mb: -1,\r\n              mx: -1,\r\n              mt: 1,\r\n            }}\r\n          >\r\n            <Button\r\n              color=\"primary\"\r\n              startIcon={<UploadIcon fontSize=\"small\" />}\r\n              sx={{ m: 1 }}\r\n            >\r\n              Import\r\n            </Button>\r\n            <Button\r\n              color=\"primary\"\r\n              startIcon={<DownloadIcon fontSize=\"small\" />}\r\n              sx={{ m: 1 }}\r\n            >\r\n              Export\r\n            </Button>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item>\r\n          <Box sx={{ m: -1 }}>\r\n            <Button\r\n              color=\"primary\"\r\n              startIcon={<PlusIcon fontSize=\"small\" />}\r\n              sx={{ m: 1, mt: 5 }}\r\n              variant=\"contained\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Register Staff\r\n            </Button>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <StaffRegister open={open} close={handleClose} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AttendenceHead;\r\n","import React from 'react'\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  Paper,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n  makeStyles,\r\n  FormControl,\r\n  Box,\r\n  Button,\r\n  Card,\r\n} from \"@material-ui/core\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from \"yup\";\r\nimport {CircularProgress} from '@material-ui/core';\r\nimport wait from '../../../utils/wait';\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nconst StaffAttendenceList2 = (props) => {\r\n    const { rows, onComplete, attendanceRecord } = props;\r\n     const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          picked: [],\r\n          submit: null,\r\n        }}\r\n        validationSchema={Yup.object().shape({})}\r\n        onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n\r\n          await wait(2000)\r\n          setSubmitting(false)\r\n          try {\r\n            if (onComplete) {\r\n              onComplete();\r\n            }\r\n          } catch (err) {\r\n            console.error(err);\r\n          setSubmitting(false);\r\n\r\n            // setError(err.message);\r\n          }\r\n        }}\r\n      >\r\n        {({\r\n          errors,\r\n          handleBlur,\r\n          handleChange,\r\n          handleSubmit,\r\n          isSubmitting,\r\n          setFieldValue,\r\n          setFieldTouched,\r\n          touched,\r\n          values,\r\n        }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <Card sx={{ p: 3 }}>\r\n              <TableContainer sx={{ mt: 2 }} component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Name</TableCell>\r\n                      <TableCell colSpan={1}>Roll</TableCell>\r\n                      <TableCell colSpan={1}>Attendence</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {rows.length > 0 ? (\r\n                      rows.map((row) => (\r\n                        <TableRow key={row.name}>\r\n                          <TableCell component=\"th\">{row.first_name}</TableCell>\r\n                          <TableCell>{row.Roles}</TableCell>\r\n                          <TableCell>\r\n                            <FormControl>\r\n                              <RadioGroup\r\n                                row\r\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                                defaultValue=\"1\"\r\n                                name=\"radio-buttons-group\"\r\n                              >\r\n                                <FormControlLabel\r\n                                  value=\"present\"\r\n                                  // onChange={(e)=>{handleChanges(e,row.id)}}\r\n                                  onChange={() => {\r\n                                    attendanceRecord(row, \"1\");\r\n                                  }}\r\n                                  name=\"present\"\r\n                                  // value=\"Two\"\r\n                                  control={<Radio />}\r\n                                  label=\"Present\"\r\n                                />\r\n                                <FormControlLabel\r\n                                  name=\"absent\"\r\n                                  value=\"absent\"\r\n                                  // onChange={(e)=>{handleChanges(e,row.id)}}\r\n                                  onChange={() => {\r\n                                    attendanceRecord(row, \"2\");\r\n                                    // setSelectedStudents({\r\n                                    //   ...row,\r\n                                    //   absentPresent: \"absent\",\r\n                                    // });\r\n                                  }}\r\n                                  // value=\"Two\"\r\n                                  control={<Radio />}\r\n                                  label=\"Absent\"\r\n                                />\r\n                                <FormControlLabel\r\n                                  value=\"3\"\r\n                                  name=\"late\"\r\n                                  onChange={() => {\r\n                                    attendanceRecord(row, \"3\");\r\n                                  }}\r\n                                  control={<Radio />}\r\n                                  label=\"Late\"\r\n                                />{\" \"}\r\n                                <FormControlLabel\r\n                                  value=\"leave\"\r\n                                  onChange={() => {\r\n                                    attendanceRecord(row, \"4\");\r\n                                  }}\r\n                                  name=\"leave\"\r\n                                  control={<Radio />}\r\n                                  label=\"Leave\"\r\n                                />\r\n                              </RadioGroup>\r\n                            </FormControl>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))\r\n                    ) : (\r\n                      <TableRow\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"center\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        Data Not Found{\" \"}\r\n                      </TableRow>\r\n                    )}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  mt: 6,\r\n                }}\r\n              >\r\n                <Box sx={{ flexGrow: 1 }} />\r\n                <Button\r\n                  startIcon={\r\n                    isSubmitting ? <CircularProgress size=\"1rem\" /> : null\r\n                  }\r\n                  color=\"primary\"\r\n                  disabled={isSubmitting}\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                >\r\n                  {isSubmitting ? \" Saving Attendence\" : \"Save Attendence\"}\r\n                </Button>\r\n              </Box>\r\n            </Card>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default StaffAttendenceList2","import {\r\n  Box,\r\n  Card,\r\n  FormControl,\r\n  FormHelperText,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { MobileDatePicker } from \"@material-ui/lab\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport React from \"react\";\r\nimport AttendenceHead from \"./AttendenceHead\";\r\nimport StaffAttendenceList2 from \"./StaffAttendenceList2\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport {customAxios} from \"../../apis/Axios\";\r\nimport { CommentBankOutlined } from \"@material-ui/icons\";\r\nimport toast from \"react-hot-toast\";\r\nconst Role = [\r\n  {\r\n    id: 1,\r\n    Name: \"Teacher\",\r\n  },\r\n  {\r\n    id: 1,\r\n    Name: \"Admin\",\r\n  },\r\n  {\r\n    id: 1,\r\n    Name: \"Principle\",\r\n  },\r\n];\r\n\r\n\r\nconst StaffAttendenceList = () => {\r\n  const ref = useRef();\r\n  const [rows, setRows] = useState([]);\r\n  const [SelectedTeacher, setSelectedTeacher] = useState([]);\r\n  const [state, setState] = useState({});\r\n  const StaffData = async () => {\r\n    const data = await customAxios.getCall(\"teacher/teachers/api\"); \r\n    setRows(data);\r\n  };\r\n  useEffect(() => {\r\n\r\n    StaffData();\r\n  }, []);\r\n  const onComplete =async () => {\r\n    const stateCopy = { ...state };\r\n console.log(stateCopy)\r\n if(Object.keys(stateCopy).length ===0){\r\n  return toast.error(\"Plz Select the correct Date and then click on Next \")\r\n }\r\n    const SelecterTEacherCopy = [...SelectedTeacher];\r\n    const combine = {\r\n      ...stateCopy,\r\n      attendence_list: [...SelecterTEacherCopy],\r\n    };\r\n\r\n \r\nawait customAxios\r\n  .postCall(\"attendence/staff/attendence/post\", {\r\n    ...combine,\r\n  })\r\n  .then((res) => {\r\n    if (res.status === 403) {\r\n      toast.success(`Attendence Update On ${state.date}`);\r\n      //  setCompleted(true);\r\n    } else {\r\n      toast.success(`Attendence Taken On Date ${state.date} `);\r\n      //  setCompleted(true);\r\n    }\r\n  })\r\n  .catch((error) => {\r\n    console.log(error);\r\n  });\r\n};\r\n\r\n  const attendanceRecord = (staff, absentpresent) => {\r\n    const seletedTeacherCopy = [...SelectedTeacher];\r\n    let obj = {\r\n      TeacherId: staff.staff_id,\r\n      absentPresent: absentpresent,\r\n    };\r\n    const findIndex = seletedTeacherCopy.findIndex((res) => {\r\n      // console.log(\"res\",res)\r\n      return res.TeacherId == staff.id;\r\n    });\r\n\r\n    if (findIndex >= 0) {\r\n      seletedTeacherCopy[findIndex] = obj;\r\n    } else {\r\n      seletedTeacherCopy.push({ ...obj });\r\n    }\r\n\r\n    setSelectedTeacher(seletedTeacherCopy);\r\n  };\r\n  console.log(SelectedTeacher);\r\n  return (\r\n    <>\r\n      <AttendenceHead\r\n        title=\"All Teacher Data\"\r\n        title2=\"Staff Attendence\"\r\n      />\r\n      <Formik\r\n        initialValues={{\r\n          teacherRole: \"\",\r\n          date: new Date(),\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          // classid: Yup.array().of(\r\n          // Yup.object().shape({\r\n          // classid: Yup.string().min(8, \"Min 8 chars\").max(28, \"Max 28 chars\"),\r\n          // Rest of your amenities object properties\r\n          // })\r\n          // ),\r\n          date: Yup.date().required(\" Enter Date value\"),\r\n        })}\r\n        innerRef={ref}\r\n        onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n          try {\r\n            // alert(JSON.stringify(values), null);\r\n            // Call API to store step data in server session\r\n            setState({\r\n              ...values,\r\n            });\r\n            // const data = { ...values };\r\n            // (data);\r\n          } catch (err) {\r\n            console.error(err);\r\n            setStatus({ success: false });\r\n            setErrors({ submit: err.message });\r\n            setSubmitting(false);\r\n          }\r\n        }}\r\n      >\r\n        {({\r\n          errors,\r\n          handleBlur,\r\n          handleChange,\r\n          handleSubmit,\r\n          isSubmitting,\r\n          setFieldValue,\r\n          setFieldTouched,\r\n          touched,\r\n          values,\r\n        }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <Card sx={{ p: 3 }}>\r\n              <Box sx={{ mt: 2 }}>\r\n                <FormControl style={{ marginRight: 8, width: \"20%\" }}>\r\n                  <InputLabel id=\"teacherRole\">Role</InputLabel>\r\n\r\n                  <Select\r\n                    fullWidth\r\n                    labelId=\"teacherRole\"\r\n                    value={values.teacherRole}\r\n                    onChange={handleChange}\r\n                    id=\"teacherRole\"\r\n                    label=\"Role\"\r\n                    name=\"teacherRole\"\r\n                  >\r\n                    {Role.map((option) => (\r\n                      <MenuItem key={option.id} value={option.id}>\r\n                        {option.Name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n\r\n                <MobileDatePicker\r\n                  fullwidth\r\n                  label=\"Date\"\r\n                  onAccept={() => setFieldTouched(\"date\")}\r\n                  onChange={(date) =>\r\n                    setFieldValue(\"date\", date.toLocaleDateString())\r\n                  }\r\n                  inputFormat=\"yyyy/MM/dd\"\r\n                  onClose={() => setFieldTouched(\"date\")}\r\n                  renderInput={(inputProps) => (\r\n                    <TextField variant=\"outlined\" {...inputProps} />\r\n                  )}\r\n                  value={values.date}\r\n                />\r\n                {Boolean(touched.date && errors.date) && (\r\n                  <Box sx={{ mt: 2 }}>\r\n                    <FormHelperText error>{errors.date}</FormHelperText>\r\n                  </Box>\r\n                )}\r\n                <Button\r\n                  sx={{ mt: 1, mr: 2, ml: 2 }}\r\n                  color=\"primary\"\r\n                  disabled={isSubmitting}\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                >\r\n                  Next\r\n                </Button>\r\n              </Box>\r\n            </Card>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n\r\n      <StaffAttendenceList2\r\n        rows={rows}\r\n        attendanceRecord={attendanceRecord}\r\n        onComplete={onComplete}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StaffAttendenceList;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Download = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Download'\n);\n\nexport default Download;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Upload = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM6.293 6.707a1 1 0 010-1.414l3-3a1 1 0 011.414 0l3 3a1 1 0 01-1.414 1.414L11 5.414V13a1 1 0 11-2 0V5.414L7.707 6.707a1 1 0 01-1.414 0z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Upload'\n);\n\nexport default Upload;\n","import axios from \"axios\";\r\nimport wait from \"../../utils/wait\";\r\n//attach authorization token and other common stuffs\r\n\r\nlet token = JSON.parse(localStorage.getItem(\"accessToken\")) ;\r\n// let token = localStorage.getItem(\"accessToken\")\r\n//   ? JSON.parse(localStorage.getItem(\"accessToken\"))\r\n//   : null;\r\n\r\n  // console.log(token)\r\nexport default (navigate = null) => {\r\n  const customAxios = axios.create({\r\n    baseURL: \"http://localhost:8000/\",\r\n    headers: {\r\n      authorization: `bearer ${token}`,\r\n    },\r\n  });\r\n\r\nfunction getTokenFromLocalStorage() {\r\n  const token = localStorage.getItem(\"accessToken\");\r\n  console.log(\"the token from local storage is -> \" + token);\r\n  if (token === null) {\r\n    return undefined;\r\n  }\r\n  return token;\r\n}\r\n\r\n\r\n  customAxios.interceptors.response.use(\r\n    (response) =>\r\n      new Promise((resolve, reject) => {\r\n        resolve(response);\r\n      }),\r\n    (error) => {\r\n     if (!error.response) { \r\n       return new Promise((resolve, reject) => {\r\n         reject(error);\r\n       });\r\n     }\r\n      if (error.response.status == 401) {\r\n        console.log(\"your are not logedin\");\r\n        // localStorage.removeItem(\"accessToken\");\r\n        // localStorage.removeItem(\"user\");\r\n        // if(navigate){\r\n        //   navigate(\"/authentication/login-unguarded\");\r\n        // }else{\r\n        //   window.location.href = \"/authentication/login-unguarded\";\r\n        // }\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n  return customAxios\r\n};\r\n\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Plus = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Plus'\n);\n\nexport default Plus;\n","import React from 'react'\r\nimport { Button } from '@material-ui/core'\r\nconst Save = (props) => {\r\n  const { variant, size, color, disabled,handleClose={}, text, type } = props;\r\n  return (\r\n    <>\r\n      <Button\r\n        style={{ margin: \"17px\" }}\r\n        variant={variant}\r\n        size={size}\r\n        color={color}\r\n        type={type}\r\n        disabled={disabled}\r\n        // onClick={handleClose}\r\n      >\r\n        {text}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Save","import React from 'react'\r\nimport { Button } from '@material-ui/core';\r\nconst ResetButton = (props) => {\r\n  const { variant, size, color, disableElevation, text, disabled, onClick } =\r\n    props;\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        style={{ margin: \"17px\" }}\r\n        variant={variant}\r\n        size={size}\r\n        color={color}\r\n        disableElevation={disableElevation}\r\n        disabled={disabled}\r\n        onClick={onClick}\r\n      >\r\n        {text}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResetButton"],"sourceRoot":""}