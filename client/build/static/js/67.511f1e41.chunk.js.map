{"version":3,"sources":["mangement/Exams/ExamsSubjectForm1.js","mangement/Exams/ExamsGroup.js","icons/Download.js","icons/Upload.js","mangement/apis/Api.js","icons/Plus.js","mangement/HelperFunction.js"],"names":["useStyles","makeStyles","table","minWidth","hedds","width","margin","display","border","borderRadius","feild","marginLeft","feilds","marginBottom","ExamsSubjectForm1","subject","getSubjectData","setabc","classes","useState","examgroup","setExamgroup","examsName","setExamsName","classRoom","setClassRoom","section","setSection","useEffect","a","customAxios","get","examsGroupData","data","examsNameData","Section","then","res","initialValues","examsGroup","classid","sectionid","validationSchema","Yup","shape","onSubmit","values","setErrors","setStatus","setSubmitting","errors","handleBlur","handleChange","handleSubmit","isSubmitting","setFieldValue","setFieldTouched","touched","sx","mt","className","id","fullWidth","labelId","value","onChange","label","name","map","option","mr","ml","color","disabled","type","variant","theme","TableContainer","maxWidth","TableCell","fontWeight","backgroundColor","palette","primary","dark","getContrastText","error","ExamsGroup","settings","useSettings","exams","setExams","getCall","Data","minHeight","py","compact","container","justifyContent","spacing","item","aria-label","separator","fontSize","component","RouterLink","to","mb","mx","startIcon","m","Paper","align","row","scope","noexams","examtype","style","marginRight","size","Download","createSvgIcon","xmlns","viewBox","fill","fillRule","d","clipRule","Upload","token","JSON","parse","localStorage","getItem","axios","create","baseURL","headers","authorization","interceptors","response","use","Promise","resolve","reject","status","console","log","Plus","endpoint","responce"],"mappings":"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","file":"static/js/67.511f1e41.chunk.js","sourcesContent":["import React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  TextField,\r\n  Typography,\r\n  MenuItem,\r\n  Button,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Formik } from \"formik\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Section } from \"../HelperFunction\";\r\nimport customAxios from \"../apis/Api\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n    // marginTop:10\r\n  },\r\n  hedds: {\r\n    width: \"20%\",\r\n    // padding: \"12px 20px\",\r\n    margin: \"8px 10px\",\r\n    display: \"inline-block\",\r\n    border: \"1px solid #ccc\",\r\n    borderRadius: \"4px\",\r\n    // box-sizing:,\r\n  },\r\n  feild: {\r\n    width: \"20%\",\r\n    marginLeft: 8,\r\n  },\r\n  feilds: {\r\n    width: \"20%\",\r\n    marginLeft: 8,\r\n    // marginTop: 8,\r\n    marginBottom: 10,\r\n  },\r\n});\r\nconst attend = [\r\n  {\r\n    value: \"5\",\r\n    label: \"All\",\r\n  },\r\n  {\r\n    label: \"Absent\",\r\n    value: \"2\",\r\n  },\r\n  {\r\n    label: \"Present\",\r\n    value: \"1\",\r\n  },\r\n  {\r\n    label: \"Late\",\r\n    value: \"3\",\r\n  },\r\n  {\r\n    value: \"4\",\r\n    label: \"Leave\",\r\n  },\r\n];\r\n\r\nconst ExamsSubjectForm1 = ({ subject, getSubjectData, setabc }) => {\r\n  const classes = useStyles();\r\n  const [examgroup, setExamgroup] = useState([]);\r\n  const [examsName, setExamsName] = useState([]);\r\n\r\n  const [classRoom, setClassRoom] = useState([]);\r\n  const [section, setSection] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    const examsGroupData = await customAxios().get(\r\n      \"http://localhost:8000/exams/examsgroup\"\r\n    );\r\n\r\n    setExamgroup(examsGroupData.data);\r\n\r\n    const examsNameData = await customAxios().get(\r\n      \"http://localhost:8000/exams/examsName\"\r\n    );\r\n    setExamsName(examsNameData.data);\r\n    const fun = Section(\"class/api\");\r\n    fun.then((res) => {\r\n      setClassRoom(res);\r\n    });\r\n    const fun1 = Section(\"class/api/section\");\r\n    fun1.then((res) => {\r\n      setSection(res);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          examsGroup: \"\",\r\n          examsName: \"\",\r\n          classid: \"\",\r\n          sectionid: \"\",\r\n        }}\r\n        validationSchema={Yup.object().shape({})}\r\n        onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n          // try {\r\n          // alert(JSON.stringify(values), null);\r\n         \r\n            getSubjectData(values);\r\n            setabc(values);\r\n       \r\n          //   Call API to store step data in server session\r\n      \r\n\r\n          // It is important to have it on server to be able to reuse it if user\r\n          // decides to continue later.\r\n          //   if (onNext) {\r\n          //     allStudentAttendence(data);\r\n          //     onNext();\r\n          //   }\r\n          //   setStatus({ success: true });\r\n          //   setSubmitting(false);\r\n          // } catch (err) {\r\n          //   console.error(err);\r\n          //   setStatus({ success: false });\r\n          //   setErrors({ submit: err.message });\r\n          //   setSubmitting(false);\r\n          // }\r\n        }}\r\n      >\r\n        {({\r\n          errors,\r\n          handleBlur,\r\n          handleChange,\r\n          handleSubmit,\r\n          isSubmitting,\r\n          setFieldValue,\r\n          setFieldTouched,\r\n          touched,\r\n          values,\r\n        }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            {/* <Card sx={{ p: 3 }}> */}\r\n            <Box sx={{ mt: 2 }}>\r\n              <FormControl className={classes.feilds}>\r\n                <InputLabel id=\"examsGroup\">Exams Group</InputLabel>\r\n\r\n                <Select\r\n                  fullWidth\r\n                  labelId=\"examsGroup\"\r\n                  value={values.examsGroup}\r\n                  onChange={handleChange}\r\n                  id=\"examsGroup\"\r\n                  label=\"exams Group\"\r\n                  name=\"examsGroup\"\r\n                >\r\n                  {examgroup.map((option) => (\r\n                    <MenuItem key={option.id} value={option.id}>\r\n                      {option.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <FormControl className={classes.feilds}>\r\n                <InputLabel id=\"examsName\">Exams Name</InputLabel>\r\n\r\n                <Select\r\n                  fullWidth\r\n                  labelId=\"examsName\"\r\n                  value={values.examsName}\r\n                  onChange={handleChange}\r\n                  id=\"examsName\"\r\n                  label=\"exams Name\"\r\n                  name=\"examsName\"\r\n                >\r\n                  {examsName.map((option) => (\r\n                    <MenuItem key={option.id} value={option.id}>\r\n                      {option.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl className={classes.feild}>\r\n                <InputLabel id=\"classid\">Department/Class</InputLabel>\r\n\r\n                <Select\r\n                  fullWidth\r\n                  labelId=\"classid\"\r\n                  value={values.classid}\r\n                  onChange={handleChange}\r\n                  id=\"classid\"\r\n                  label=\"Department/Class\"\r\n                  name=\"classid\"\r\n                >\r\n                  {classRoom.map((option) => (\r\n                    <MenuItem key={option.id} value={option.id}>\r\n                      {option.className}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl className={classes.feild}>\r\n                <InputLabel id=\"sectionid\">Section</InputLabel>\r\n\r\n                <Select\r\n                  fullWidth\r\n                  labelId=\"sectionid\"\r\n                  value={values.sectionid}\r\n                  onChange={handleChange}\r\n                  id=\"sectionid\"\r\n                  label=\"Section\"\r\n                  name=\"sectionid\"\r\n                >\r\n                  {section.map((option) => (\r\n                    <MenuItem key={option.id} value={option.id}>\r\n                      {option.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <Button\r\n                sx={{ mt: 1, mr: 2, ml: 2 }}\r\n                color=\"primary\"\r\n                disabled={isSubmitting}\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n              >\r\n                Search\r\n              </Button>\r\n            </Box>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\nexport default ExamsSubjectForm1;\r\n","import React, { useState,useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Box, Breadcrumbs, Button, Container, Grid, TablePagination, Typography,Link } from \"@material-ui/core\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport {  Link as RouterLink } from \"react-router-dom\";\r\nimport useSettings from \"../../hooks/useSettings\";\r\nimport ChevronRightIcon from \"../../icons/ChevronRight\";\r\nimport UploadIcon from \"../../icons/Upload\";\r\nimport DownloadIcon from \"../../icons/Download\";\r\nimport PlusIcon from \"../../icons/Plus\";\r\nimport axios from 'axios'\r\nimport ExamsSubjectForm1 from \"./ExamsSubjectForm1\";\r\nimport {customAxios} from \"../apis/Axios\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  TableContainer: {\r\n    borderRadius: 15,\r\n    margin: \"10px ,10px\",\r\n    maxWidth: 1050,\r\n  },\r\n  TableCell: {\r\n    fontWeight: \"bold\",\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color:theme.palette.getContrastText(theme.palette.error.dark)\r\n  },\r\n}));\r\n\r\nconst  ExamsGroup=()=> {\r\n  const classes = useStyles();\r\n  const { settings } = useSettings();\r\nconst [exams,setExams]=useState([]);\r\n\r\nuseEffect(async()=>{\r\n\r\nconst Data = await customAxios.getCall(\"exams/total-Exams\");\r\nsetExams(Data)\r\n},[])\r\n\r\n  return (\r\n    <>\r\n      \r\n      <Helmet>\r\n        <title>Dashboard: Examination </title>\r\n      </Helmet>\r\n      \r\n      <Box\r\n        sx={{\r\n          backgroundColor: \"background.default\",\r\n          minHeight: \"100%\",\r\n          py: 1,\r\n        }}\r\n      >\r\n        <Container maxWidth={settings.compact ? \"xl\" : false}>\r\n          <Grid container justifyContent=\"space-between\" spacing={3}>\r\n            <Grid item>\r\n              <Typography color=\"textPrimary\" variant=\"h5\">\r\n                Exam Group List\r\n              </Typography>\r\n              <Breadcrumbs\r\n                aria-label=\"breadcrumb\"\r\n                separator={<ChevronRightIcon fontSize=\"small\" />}\r\n                sx={{ mt: 1 }}\r\n              >\r\n                <Link\r\n                  color=\"textPrimary\"\r\n                  component={RouterLink}\r\n                  to=\"/dashboard\"\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  Dashboard\r\n                </Link>\r\n                <Typography color=\"textSecondary\">Exam Group List</Typography>\r\n                <Link\r\n                  color=\"textPrimary\"\r\n                  component={RouterLink}\r\n                  to=\"/dashboard/examsList\"\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  Exam List\r\n                </Link>\r\n                <Link\r\n                  color=\"textPrimary\"\r\n                  component={RouterLink}\r\n                  to=\"/dashboard/assign-student\"\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  Assign Student\r\n                </Link>\r\n                <Link\r\n                  color=\"textPrimary\"\r\n                  component={RouterLink}\r\n                  to=\"/dashboard/examsSubject\"\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  Exams Subjects\r\n                </Link>\r\n              </Breadcrumbs>\r\n              <Box\r\n                sx={{\r\n                  mb: -1,\r\n                  mx: -1,\r\n                  mt: 1,\r\n                }}\r\n              >\r\n                <Button\r\n                  color=\"primary\"\r\n                  startIcon={<UploadIcon fontSize=\"small\" />}\r\n                  sx={{ m: 1 }}\r\n                  variant=\"text\"\r\n                >\r\n                  Import\r\n                </Button>\r\n                <Button\r\n                  color=\"primary\"\r\n                  startIcon={<DownloadIcon fontSize=\"small\" />}\r\n                  sx={{ m: 1 }}\r\n                  variant=\"text\"\r\n                >\r\n                  Export\r\n                </Button>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n          <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"caption table\">\r\n              <TableHead className={classes.TableCell}>\r\n                <TableRow>\r\n                  <TableCell>Name</TableCell>\r\n                  <TableCell align=\"right\">No Of Exams</TableCell>\r\n                  <TableCell align=\"right\">Exams Type</TableCell>\r\n                  <TableCell align=\"right\">Action</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {exams.map((row) => (\r\n                  <TableRow key={row.id}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.name}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{row.noexams}</TableCell>\r\n                    <TableCell align=\"right\">{row.examtype}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <Button\r\n                        style={{ marginRight: 5 }}\r\n                        size=\"small\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                      >\r\n                        New Exams\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ExamsGroup","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Download = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Download'\n);\n\nexport default Download;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Upload = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM6.293 6.707a1 1 0 010-1.414l3-3a1 1 0 011.414 0l3 3a1 1 0 01-1.414 1.414L11 5.414V13a1 1 0 11-2 0V5.414L7.707 6.707a1 1 0 01-1.414 0z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Upload'\n);\n\nexport default Upload;\n","import axios from \"axios\";\r\nimport wait from \"../../utils/wait\";\r\n//attach authorization token and other common stuffs\r\n\r\nlet token = JSON.parse(localStorage.getItem(\"accessToken\")) ;\r\n// let token = localStorage.getItem(\"accessToken\")\r\n//   ? JSON.parse(localStorage.getItem(\"accessToken\"))\r\n//   : null;\r\n\r\n  // console.log(token)\r\nexport default (navigate = null) => {\r\n  const customAxios = axios.create({\r\n    baseURL: \"http://localhost:8000/\",\r\n    headers: {\r\n      authorization: `bearer ${token}`,\r\n    },\r\n  });\r\n\r\nfunction getTokenFromLocalStorage() {\r\n  const token = localStorage.getItem(\"accessToken\");\r\n  console.log(\"the token from local storage is -> \" + token);\r\n  if (token === null) {\r\n    return undefined;\r\n  }\r\n  return token;\r\n}\r\n\r\n\r\n  customAxios.interceptors.response.use(\r\n    (response) =>\r\n      new Promise((resolve, reject) => {\r\n        resolve(response);\r\n      }),\r\n    (error) => {\r\n     if (!error.response) { \r\n       return new Promise((resolve, reject) => {\r\n         reject(error);\r\n       });\r\n     }\r\n      if (error.response.status == 401) {\r\n        console.log(\"your are not logedin\");\r\n        // localStorage.removeItem(\"accessToken\");\r\n        // localStorage.removeItem(\"user\");\r\n        // if(navigate){\r\n        //   navigate(\"/authentication/login-unguarded\");\r\n        // }else{\r\n        //   window.location.href = \"/authentication/login-unguarded\";\r\n        // }\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n  return customAxios\r\n};\r\n\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Plus = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Plus'\n);\n\nexport default Plus;\n","import axios from \"axios\";\r\nimport {customAxios} from \"./apis/Axios\";\r\nimport userService from \"./apis/userService\";\r\n\r\nexport const Section = async (endpoint) => {\r\n  const responce = await customAxios.getCall(`${endpoint}`);\r\n  const section = await responce;\r\n  return section;\r\n};\r\n\r\n// export const getAPI = async (endpoint, params={}) => {\r\n//   const responce = await axios.get(`${URL}${endpoint}`, {params:{...params}});\r\n//   // console.log(b.data)\r\n//   const section = await responce.data;\r\n//   return section;\r\n// };\r\n\r\n// export const postAPI = async (endpoint, data= {}) => {\r\n//   const responce = await axios.post(`${URL}${endpoint}`, {...data});\r\n//   // console.log(b.data)\r\n//   const section = await responce.data;\r\n//   return section;\r\n// };\r\n"],"sourceRoot":""}