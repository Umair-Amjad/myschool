{"version":3,"sources":["mangement/Finance/IncomeCreateForm.js","mangement/Finance/IncomeCreate.js","icons/Download.js","icons/Upload.js","mangement/apis/Api.js","mangement/Design.js","mangement/Buttons/Save.js","mangement/Buttons/ResetButton.js","mangement/Finance/Head.jsx"],"names":["useStyles","makeStyles","theme","root","margin","spacing","width","typography","padding","feild","marginLeft","head","height","paddingLeft","paddingRight","paddingTop","background","pay","id","value","ExpenseCreateForm","classes","state","useLocation","console","log","row","name","date","payMethod","expenseHead","description","amount","Card","className","enableReinitialize","initialValues","Date","toLocaleDateString","paymethod","validationSchema","Yup","shape","onSubmit","values","a","Promise","r","setTimeout","data","customAxios","post","then","res","json","toast","success","errors","handleBlur","handleChange","handleSubmit","isSubmitting","dirty","setFieldValue","setFieldTouched","touched","handleReset","noValidate","TextField","sx","mt","autoComplete","label","variant","type","error","Boolean","helperText","onBlur","onChange","Stack","style","display","alignItem","justifyContent","flexWrap","Box","ml","MobileDatePicker","fullwidth","onAccept","inputFormat","onClose","renderInput","inputProps","FormHelperText","FormControl","fullWidth","labelId","select","SelectProps","native","onFocus","map","option","my","direction","Save","text","size","color","disabled","ResetButton","onClick","minWidth","ExpenseCreate","backgroundColor","minHeight","py","px","Grid","container","Head","finance","expense","incomeList","Download","createSvgIcon","xmlns","viewBox","fill","fillRule","d","clipRule","Upload","token","JSON","parse","localStorage","getItem","axios","create","baseURL","headers","authorization","interceptors","response","use","resolve","reject","status","Design","props","dashText","paddingBottom","marginTop","item","aria-label","separator","fontSize","component","RouterLink","to","mb","mx","startIcon","m","handleClose","disableElevation","ImportData","balanceSta"],"mappings":"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","file":"static/js/69.7228863f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  FormLabel,\r\n  InputLabel,\r\n  MenuItem,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n  Stack,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport toast from \"react-hot-toast\";\r\nimport axios from \"axios\";\r\nimport { Formik } from \"formik\";\r\nimport Save from \"../Buttons/Save\";\r\nimport ResetButton from \"../Buttons/ResetButton\";\r\nimport Design from \"../Design\";\r\nimport { Navigate, useLocation, useNavigate } from \"react-router\";\r\nimport { MobileDatePicker } from \"@material-ui/lab\";\r\nimport { useEffect } from \"react\";\r\nimport customAxios from \"../apis/Api\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n      margin: \"17px\",\r\n    },\r\n  },\r\n  typography: {\r\n    padding: \"17px\",\r\n  },\r\n  feild: {\r\n    width: \"30%\",\r\n    marginLeft: 5,\r\n  },\r\n  head: {\r\n    height: \"70vh\",\r\n    paddingLeft: 30,\r\n    paddingRight: 30,\r\n    paddingTop: 10,\r\n    background: \"none\",\r\n  },\r\n}));\r\n\r\nconst pay = [\r\n  {\r\n    id: 1,\r\n    value: \"Cash\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: \"Bank\",\r\n  },\r\n];\r\nexport default function ExpenseCreateForm() {\r\n  const classes = useStyles();\r\n  const { state } = useLocation();\r\n  console.log(\"state\", state);\r\n  if (state === null) {\r\n    var row = {\r\n      id: \"\",\r\n      name: \"\",\r\n      date: \"\",\r\n      payMethod: \"\",\r\n      expenseHead: \"\",\r\n      description: \"\",\r\n      amount: \"\",\r\n    };\r\n  } else {\r\n    state.row;\r\n    var { row } = state;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.head}>\r\n        <Formik\r\n          enableReinitialize\r\n          initialValues={{\r\n            name: row.name || \"\",\r\n            date: row.date || new Date().toLocaleDateString(),\r\n            paymethod: row.payMethod || \"\",\r\n            expenseHead: row.expenseHead || \"\",\r\n            description: row.name || \"\",\r\n            amount: row.amount || \"\",\r\n            // status:data.length > 0 ? 1 : 0,\r\n          }}\r\n          validationSchema={Yup.object().shape({\r\n            payMethod:Yup.number()\r\n          })}\r\n          onSubmit={async (values) => {\r\n            await new Promise((r) => setTimeout(r, 500));\r\n            // alert(JSON.stringify(values, null, 2));\r\n            try{\r\n\r\n              let data = { ...values, id: row.id ? row.id : \"\" };\r\n              await customAxios()\r\n              .post(\"finance/incomePost\", {\r\n                ...data,\r\n              })\r\n              .then((res) => {\r\n                res.json\r\n              })\r\n              // if (res.status == 200) {\r\n                toast.success(\"Successfully Inserted\");\r\n              // }\r\n            }catch(err){\r\n              console.log(err)\r\n            }\r\n          }}\r\n        >\r\n          {({\r\n            errors,\r\n            handleBlur,\r\n            handleChange,\r\n            handleSubmit,\r\n            isSubmitting,\r\n            dirty,\r\n            setFieldValue,\r\n            setFieldTouched,\r\n            touched,\r\n            values,\r\n            handleReset,\r\n          }) => (\r\n            <div>\r\n              <form noValidate onSubmit={handleSubmit}>\r\n                <div>\r\n                  <TextField\r\n                    sx={{ width: \"32%\", mt: 5 }}\r\n                    autoComplete=\"off\"\r\n                    id=\"name\"\r\n                    label=\"Enter Name\"\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    error={Boolean(touched.name && errors.name)}\r\n                    helperText={touched.name && errors.name}\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    value={values.name}\r\n                  />\r\n                </div>\r\n\r\n                <Stack spacing={3}>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      alignItem: \"end\",\r\n                      justifyContent: \"end\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                  >\r\n                    <Box\r\n                      sx={{\r\n                        width: \"30%\",\r\n                        mt: 4,\r\n                      }}\r\n                    >\r\n                      <Box sx={{ ml: 1.2 }}>\r\n                        <MobileDatePicker\r\n                          fullwidth\r\n                          label=\"Date\"\r\n                          onAccept={() => setFieldTouched(\"date\")}\r\n                          onChange={(date) =>\r\n                            setFieldValue(\"date\", date.toLocaleDateString())\r\n                          }\r\n                          inputFormat=\"yyyy/MM/dd\"\r\n                          onClose={() => setFieldTouched(\"date\")}\r\n                          renderInput={(inputProps) => (\r\n                            <TextField variant=\"outlined\" {...inputProps} />\r\n                          )}\r\n                          value={values.date}\r\n                        />\r\n                      </Box>\r\n                    </Box>\r\n                    {Boolean(touched.date && errors.date) && (\r\n                      <Box sx={{ mt: 2 }}>\r\n                        <FormHelperText error>{errors.date}</FormHelperText>\r\n                      </Box>\r\n                    )}\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      alignItem: \"end\",\r\n                      justifyContent: \"end\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                  >\r\n                    <FormControl className={classes.feild}>\r\n                      <TextField\r\n                        fullWidth\r\n                        labelId=\"paymethod\"\r\n                        select\r\n                        variant=\"outlined\"\r\n                        SelectProps={{ native: true }}\r\n                        value={values.paymethod}\r\n                        onFocus={handleChange}\r\n                        onChange={handleChange}\r\n                        id=\"paymethod\"\r\n                        label=\"Cash\"\r\n                        name=\"paymethod\"\r\n                      >\r\n                        {pay.map((option) => (\r\n                          <option key={option.id} value={option.id}>\r\n                            {option.value}\r\n                          </option>\r\n                        ))}\r\n                      </TextField>\r\n                    </FormControl>\r\n                  </div>\r\n                </Stack>\r\n                <Box>\r\n                  <Stack sx={{ my: 3 }} direction=\"row\" spacing={2}>\r\n                    <TextField\r\n                      sx={{ width: \"34%\" }}\r\n                      autoComplete=\"off\"\r\n                      id=\"expenseHead\"\r\n                      label=\"ExpenseHead\"\r\n                      variant=\"outlined\"\r\n                      type=\"text\"\r\n                      error={Boolean(touched.expenseHead && errors.expenseHead)}\r\n                      helperText={touched.expenseHead && errors.expenseHead}\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.expenseHead}\r\n                    />\r\n                    <TextField\r\n                      sx={{ width: \"34%\" }}\r\n                      autoComplete=\"off\"\r\n                      id=\"description\"\r\n                      label=\"Description\"\r\n                      variant=\"outlined\"\r\n                      type=\"text\"\r\n                      error={Boolean(touched.description && errors.description)}\r\n                      helperText={touched.description && errors.description}\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.description}\r\n                    />\r\n                    <TextField\r\n                      sx={{ width: \"32%\" }}\r\n                      autoComplete=\"off\"\r\n                      id=\"amount\"\r\n                      label=\"amount\"\r\n                      variant=\"outlined\"\r\n                      type=\"number\"\r\n                      error={Boolean(touched.amount && errors.amount)}\r\n                      helperText={touched.amount && errors.amount}\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.amount}\r\n                    />\r\n                  </Stack>\r\n                </Box>\r\n                <Save\r\n                  text={\"Save \"}\r\n                  variant=\"contained\"\r\n                  size=\"medium\"\r\n                  color=\"success\"\r\n                  type=\"submit\"\r\n                  disabled={isSubmitting}\r\n                />\r\n\r\n                <ResetButton\r\n                  text=\"Reset\"\r\n                  variant=\"contained\"\r\n                  size=\"medium\"\r\n                  color=\"primary\"\r\n                  type=\"button\"\r\n                  onClick={handleReset}\r\n                  disabled={!dirty || isSubmitting}\r\n                />\r\n              </form>\r\n            </div>\r\n          )}\r\n        </Formik>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport IncomeCreateForm from \"./IncomeCreateForm\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport Head from \"./Head\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 675,\r\n  },\r\n});\r\nconst ExpenseCreate = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: \"background.default\",\r\n          minHeight: \"100%\",\r\n          py: 5,\r\n          px: 4,\r\n        }}\r\n      >\r\n        <Grid container justifyContent=\"space-between\" spacing={3}>\r\n          <Head\r\n            finance=\"Finance\"\r\n            expense=\"Expense List\"\r\n            incomeList=\"IncomeList\"\r\n          />\r\n        </Grid>\r\n        <Card className={classes.root}>\r\n          <IncomeCreateForm />\r\n        </Card>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExpenseCreate;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Download = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Download'\n);\n\nexport default Download;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Upload = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM6.293 6.707a1 1 0 010-1.414l3-3a1 1 0 011.414 0l3 3a1 1 0 01-1.414 1.414L11 5.414V13a1 1 0 11-2 0V5.414L7.707 6.707a1 1 0 01-1.414 0z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Upload'\n);\n\nexport default Upload;\n","import axios from \"axios\";\r\nimport wait from \"../../utils/wait\";\r\n//attach authorization token and other common stuffs\r\n\r\nlet token = JSON.parse(localStorage.getItem(\"accessToken\")) ;\r\n// let token = localStorage.getItem(\"accessToken\")\r\n//   ? JSON.parse(localStorage.getItem(\"accessToken\"))\r\n//   : null;\r\n\r\n  // console.log(token)\r\nexport default (navigate = null) => {\r\n  const customAxios = axios.create({\r\n    baseURL: \"http://localhost:8000/\",\r\n    headers: {\r\n      authorization: `bearer ${token}`,\r\n    },\r\n  });\r\n\r\nfunction getTokenFromLocalStorage() {\r\n  const token = localStorage.getItem(\"accessToken\");\r\n  console.log(\"the token from local storage is -> \" + token);\r\n  if (token === null) {\r\n    return undefined;\r\n  }\r\n  return token;\r\n}\r\n\r\n\r\n  customAxios.interceptors.response.use(\r\n    (response) =>\r\n      new Promise((resolve, reject) => {\r\n        resolve(response);\r\n      }),\r\n    (error) => {\r\n     if (!error.response) { \r\n       return new Promise((resolve, reject) => {\r\n         reject(error);\r\n       });\r\n     }\r\n      if (error.response.status == 401) {\r\n        console.log(\"your are not logedin\");\r\n        // localStorage.removeItem(\"accessToken\");\r\n        // localStorage.removeItem(\"user\");\r\n        // if(navigate){\r\n        //   navigate(\"/authentication/login-unguarded\");\r\n        // }else{\r\n        //   window.location.href = \"/authentication/login-unguarded\";\r\n        // }\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n  return customAxios\r\n};\r\n\r\n","import React from 'react'\r\nimport {\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  Card,\r\n  MenuItem,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Breadcrumbs, Link } from \"@material-ui/core\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport UploadIcon from \"../icons/Upload\";\r\nimport DownloadIcon from \"../icons/Download\";\r\nimport ChevronRightIcon from \"../icons/ChevronRight\";\r\nconst Design = (props) => {\r\n  const { text, dashText } = props;\r\n  return (\r\n  \r\n    <Grid\r\n      style={{ paddingBottom: \"10px\",marginTop:10 }}\r\n      container\r\n      justifyContent=\"space-between\"\r\n      spacing={3}\r\n    >\r\n      <Grid item>\r\n        <Typography color=\"textPrimary\" variant=\"h5\">\r\n          {text}\r\n        </Typography>\r\n        <Breadcrumbs\r\n          aria-label=\"breadcrumb\"\r\n          separator={<ChevronRightIcon fontSize=\"small\" />}\r\n          sx={{ mt: 1}}\r\n        >\r\n          <Link\r\n            color=\"textPrimary\"\r\n            component={RouterLink}\r\n            to=\"/dashboard/maindash\"\r\n            variant=\"subtitle2\"\r\n          >\r\n            Dashboard\r\n          </Link>\r\n\r\n          <Typography color=\"textSecondary\" variant=\"subtitle2\">\r\n            {dashText}\r\n          </Typography>\r\n        </Breadcrumbs>\r\n        <Box\r\n          sx={{\r\n            mb: -1,\r\n            mx: -1,\r\n            mt: 1,\r\n          }}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            startIcon={<UploadIcon fontSize=\"small\" />}\r\n            sx={{ m: 1 }}\r\n          >\r\n            Import\r\n          </Button>\r\n          <Button\r\n            color=\"primary\"\r\n            startIcon={<DownloadIcon fontSize=\"small\" />}\r\n            sx={{ m: 1 }}\r\n          >\r\n            Export\r\n          </Button>\r\n        </Box>\r\n      </Grid>\r\n      \r\n    </Grid>\r\n \r\n  );\r\n}\r\n\r\nexport default Design","import React from 'react'\r\nimport { Button } from '@material-ui/core'\r\nconst Save = (props) => {\r\n  const { variant, size, color, disabled,handleClose={}, text, type } = props;\r\n  return (\r\n    <>\r\n      <Button\r\n        style={{ margin: \"17px\" }}\r\n        variant={variant}\r\n        size={size}\r\n        color={color}\r\n        type={type}\r\n        disabled={disabled}\r\n        // onClick={handleClose}\r\n      >\r\n        {text}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Save","import React from 'react'\r\nimport { Button } from '@material-ui/core';\r\nconst ResetButton = (props) => {\r\n  const { variant, size, color, disableElevation, text, disabled, onClick } =\r\n    props;\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        style={{ margin: \"17px\" }}\r\n        variant={variant}\r\n        size={size}\r\n        color={color}\r\n        disableElevation={disableElevation}\r\n        disabled={disabled}\r\n        onClick={onClick}\r\n      >\r\n        {text}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResetButton","import react from \"react\";\r\n\r\nimport {\r\n    Box,\r\n    Breadcrumbs,\r\n    Button,\r\n    Grid,\r\n    Typography,\r\n    Link,\r\n} from \"@material-ui/core\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport ChevronRightIcon from \"../../icons/ChevronRight\";\r\nimport UploadIcon from \"../../icons/Upload\";\r\nimport DownloadIcon from \"../../icons/Download\";\r\n\r\n\r\nconst Head = (props) => {\r\n    const { finance, expense, incomeList, ImportData, balanceSta } = props\r\n    return (\r\n        <Grid item>\r\n            <Typography color=\"textPrimary\" variant=\"h5\">\r\n                {finance}\r\n            </Typography>\r\n            <Breadcrumbs\r\n                aria-label=\"breadcrumb\"\r\n                separator={<ChevronRightIcon fontSize=\"small\" />}\r\n                sx={{ mt: 1 }}\r\n            >\r\n                <Link\r\n                    color=\"textPrimary\"\r\n                    component={RouterLink}\r\n                    to=\"/dashboard\"\r\n                    variant=\"subtitle2\"\r\n                >\r\n                    Dashboard\r\n                </Link>\r\n                <Link\r\n                    color=\"textPrimary\"\r\n                    component={RouterLink}\r\n                    to=\"/dashboard/IncomeList\"\r\n                    variant=\"subtitle2\"\r\n                >\r\n                    {incomeList}\r\n                </Link>\r\n                <Link\r\n                    color=\"textPrimary\"\r\n                    component={RouterLink}\r\n                    to=\"/dashboard/expenseList\"\r\n                    variant=\"subtitle2\"\r\n                >\r\n                    {expense}\r\n                </Link>\r\n                <Link\r\n                    color=\"textPrimary\"\r\n                    component={RouterLink}\r\n                    to=\"/dashboard/Income-statment\"\r\n                    variant=\"subtitle2\"\r\n                >\r\n                    {balanceSta}\r\n                </Link>\r\n            </Breadcrumbs>\r\n            <Box\r\n                sx={{\r\n                    mb: -1,\r\n                    mx: -1,\r\n                    mt: 1,\r\n                }}\r\n            >\r\n                <Button\r\n                    onClick={ImportData}\r\n                    color=\"primary\"\r\n                    startIcon={<UploadIcon fontSize=\"small\" />}\r\n                    sx={{ m: 1 }}\r\n                >\r\n                    Import\r\n                </Button>\r\n\r\n                <Button\r\n                    color=\"primary\"\r\n                    startIcon={<DownloadIcon fontSize=\"small\" />}\r\n                    sx={{ m: 1 }}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </Box>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Head"],"sourceRoot":""}