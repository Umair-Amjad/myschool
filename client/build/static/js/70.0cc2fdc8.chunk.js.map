{"version":3,"sources":["mangement/subjects/Subject.js","icons/Download.js","icons/Upload.js","mangement/apis/Api.js","mangement/Design.js","mangement/Buttons/Save.js","mangement/Buttons/ResetButton.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","width","typography","padding","head","height","paddingLeft","paddingRight","paddingTop","background","AddClass","classes","state","useLocation","Navigate","useNavigate","invoice","subjectName","subjectType","subjectCode","className","initialValues","validationSchema","Yup","shape","max","required","onSubmit","values","a","Promise","r","setTimeout","data","id","customAxios","postCall","then","res","status","toast","success","json","err","console","log","errors","handleBlur","handleChange","handleSubmit","isSubmitting","dirty","touched","handleReset","text","dashText","style","boxShadow","color","variant","noValidate","autoComplete","label","type","error","Boolean","helperText","onBlur","onChange","value","component","row","aria-label","name","control","fullWidth","size","disabled","onClick","marginTop","Download","createSvgIcon","xmlns","viewBox","fill","fillRule","d","clipRule","Upload","token","JSON","parse","localStorage","getItem","axios","create","baseURL","headers","authorization","interceptors","response","use","resolve","reject","Design","props","paddingBottom","container","justifyContent","item","separator","fontSize","sx","mt","RouterLink","to","mb","mx","startIcon","m","Save","handleClose","ResetButton","disableElevation"],"mappings":"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","file":"static/js/70.0cc2fdc8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  InputLabel,\r\n  MenuItem,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport toast from \"react-hot-toast\";\r\nimport axios from \"axios\";\r\nimport { Formik } from \"formik\";\r\nimport Save from \"../Buttons/Save\";\r\nimport ResetButton from \"../Buttons/ResetButton\";\r\nimport Design from \"../Design\";\r\nimport { Navigate, useLocation, useNavigate } from \"react-router\";\r\nimport userService from \"../apis/userService\";\r\nimport {customAxios} from \"../apis/Axios\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n      margin: \"17px\",\r\n    },\r\n  },\r\n  typography: {\r\n    padding: \"17px\",\r\n  },\r\n  head: {\r\n    height: \"200vh\",\r\n    paddingLeft: 30,\r\n    paddingRight: 30,\r\n    paddingTop: 10,\r\n    background: \"none\",\r\n  },\r\n}));\r\n\r\nexport default function AddClass() {\r\n  const classes = useStyles();\r\n  const { state } = useLocation();\r\n  const Navigate = useNavigate();\r\n  // console.log(\",,,\", state.state);\r\n  if (state == null) {\r\n    var invoice = { subjectName: \" \", subjectType: \" \", subjectCode: \" \" };\r\n  } else {\r\n    state.invoice;\r\n    var { invoice } = state;\r\n  }\r\n  // var {row}=state;\r\n  return (\r\n    <>\r\n      <Card className={classes.head}>\r\n        <Formik\r\n          // enableReinitialize\r\n          initialValues={{\r\n            subjectName: invoice.subjectName || \"\",\r\n            subjectType: invoice.subjectType || \"\",\r\n            subjectCode: invoice.subjectCode || \"\",\r\n          }}\r\n          validationSchema={Yup.object().shape({\r\n            subjectName: Yup.string().max(255).required(\"Rollno is required\"),\r\n          \r\n          })}\r\n          onSubmit={async (values) => {\r\n            await new Promise((r) => setTimeout(r, 500));\r\n            const data = {\r\n              ...values,\r\n              id: invoice.id ? invoice.id : \"\",\r\n            };\r\n            try {\r\n\r\n              customAxios.postCall(\"books/api/subjects\",{...data}).then((res) => {\r\n                if(res.status===400){\r\n                      toast.success(\"Subject Already Exist\");\r\n\r\n                  }else{\r\n\r\n                    res.json;\r\n\r\n                      toast.success(invoice.id ? \" Update Data \" : \"Add SuccessFully\");\r\n                      Navigate(\"../subject_list\");\r\n                  }\r\n              });\r\n            } catch (err) {\r\n              console.log(err);\r\n            }\r\n          }}\r\n        >\r\n          {({\r\n            errors,\r\n            handleBlur,\r\n            handleChange,\r\n            handleSubmit,\r\n            isSubmitting,\r\n            dirty,\r\n            touched,\r\n            values,\r\n            handleReset,\r\n          }) => (\r\n            <div>\r\n              <Design text=\"Add Subject\" dashText=\"Add Subject\" />\r\n              <Box style={{ paddingLeft: 20 }} boxShadow={20} color=\"black\">\r\n                <div className={classes.typography}>\r\n                  <Typography variant=\"h5\">\r\n                    <strong>Add Subject</strong>\r\n                  </Typography>\r\n                </div>\r\n                <form noValidate onSubmit={handleSubmit}>\r\n                  <div>\r\n                    <TextField\r\n                      autoComplete=\"off\"\r\n                      id=\"subjectName\"\r\n                      label=\"Subject Name\"\r\n                      style={{ margin: 8, width: \"95%\" }}\r\n                      variant=\"outlined\"\r\n                      type=\"text\"\r\n                      error={Boolean(touched.subjectName && errors.subjectName)}\r\n                      helperText={touched.subjectName && errors.subjectName}\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.subjectName}\r\n                    />\r\n                    <FormControl\r\n                      style={{ paddingLeft: 10 }}\r\n                      component=\"fieldset\"\r\n                    >\r\n                      {/* <FormLabel component=\"legend\">Payment Duration</FormLabel> */}\r\n                      <RadioGroup\r\n                        row\r\n                        aria-label=\"subjectType\"\r\n                        name=\"subjectType\"\r\n                        id=\"subjectType\"\r\n                        value={values.subjectType}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel\r\n                          value=\"theory\"\r\n                          control={<Radio />}\r\n                          label=\"theory\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value=\"practicle\"\r\n                          control={<Radio />}\r\n                          label=\"practicle\"\r\n                        />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                    <TextField\r\n                      id=\"subjectCode\"\r\n                      label=\"Subject Code\"\r\n                      style={{ margin: 8, width: \"95%\" }}\r\n                      fullWidth\r\n                      error={Boolean(touched.subjectCode && errors.subjectCode)}\r\n                      helperText={touched.subjectCode && errors.subjectCode}\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      margin=\"normal\"\r\n                      value={values.subjectCode}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </div>\r\n                  <Save\r\n                    text={invoice.id ? \" Update Class \" : \"Save \"}\r\n                    variant=\"contained\"\r\n                    size=\"medium\"\r\n                    color=\"success\"\r\n                    type=\"submit\"\r\n                    disabled={isSubmitting}\r\n                  />\r\n\r\n                  <ResetButton\r\n                    text=\"Reset\"\r\n                    variant=\"contained\"\r\n                    size=\"medium\"\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    onClick={handleReset}\r\n                    disabled={!dirty || isSubmitting}\r\n                  />\r\n                </form>\r\n              </Box>\r\n            </div>\r\n          )}\r\n        </Formik>\r\n        <Typography style={{ marginTop: 20 }}>\r\n          © Copyrights <b>akkhor</b> 2019. All rights reserved. Designed by\r\n          PsdBosS\r\n        </Typography>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Download = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Download'\n);\n\nexport default Download;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Upload = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM6.293 6.707a1 1 0 010-1.414l3-3a1 1 0 011.414 0l3 3a1 1 0 01-1.414 1.414L11 5.414V13a1 1 0 11-2 0V5.414L7.707 6.707a1 1 0 01-1.414 0z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Upload'\n);\n\nexport default Upload;\n","import axios from \"axios\";\r\nimport wait from \"../../utils/wait\";\r\n//attach authorization token and other common stuffs\r\n\r\nlet token = JSON.parse(localStorage.getItem(\"accessToken\")) ;\r\n// let token = localStorage.getItem(\"accessToken\")\r\n//   ? JSON.parse(localStorage.getItem(\"accessToken\"))\r\n//   : null;\r\n\r\n  // console.log(token)\r\nexport default (navigate = null) => {\r\n  const customAxios = axios.create({\r\n    baseURL: \"http://localhost:8000/\",\r\n    headers: {\r\n      authorization: `bearer ${token}`,\r\n    },\r\n  });\r\n\r\nfunction getTokenFromLocalStorage() {\r\n  const token = localStorage.getItem(\"accessToken\");\r\n  console.log(\"the token from local storage is -> \" + token);\r\n  if (token === null) {\r\n    return undefined;\r\n  }\r\n  return token;\r\n}\r\n\r\n\r\n  customAxios.interceptors.response.use(\r\n    (response) =>\r\n      new Promise((resolve, reject) => {\r\n        resolve(response);\r\n      }),\r\n    (error) => {\r\n     if (!error.response) { \r\n       return new Promise((resolve, reject) => {\r\n         reject(error);\r\n       });\r\n     }\r\n      if (error.response.status == 401) {\r\n        console.log(\"your are not logedin\");\r\n        // localStorage.removeItem(\"accessToken\");\r\n        // localStorage.removeItem(\"user\");\r\n        // if(navigate){\r\n        //   navigate(\"/authentication/login-unguarded\");\r\n        // }else{\r\n        //   window.location.href = \"/authentication/login-unguarded\";\r\n        // }\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n  return customAxios\r\n};\r\n\r\n","import React from 'react'\r\nimport {\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  Card,\r\n  MenuItem,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Breadcrumbs, Link } from \"@material-ui/core\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport UploadIcon from \"../icons/Upload\";\r\nimport DownloadIcon from \"../icons/Download\";\r\nimport ChevronRightIcon from \"../icons/ChevronRight\";\r\nconst Design = (props) => {\r\n  const { text, dashText } = props;\r\n  return (\r\n  \r\n    <Grid\r\n      style={{ paddingBottom: \"10px\",marginTop:10 }}\r\n      container\r\n      justifyContent=\"space-between\"\r\n      spacing={3}\r\n    >\r\n      <Grid item>\r\n        <Typography color=\"textPrimary\" variant=\"h5\">\r\n          {text}\r\n        </Typography>\r\n        <Breadcrumbs\r\n          aria-label=\"breadcrumb\"\r\n          separator={<ChevronRightIcon fontSize=\"small\" />}\r\n          sx={{ mt: 1}}\r\n        >\r\n          <Link\r\n            color=\"textPrimary\"\r\n            component={RouterLink}\r\n            to=\"/dashboard/maindash\"\r\n            variant=\"subtitle2\"\r\n          >\r\n            Dashboard\r\n          </Link>\r\n\r\n          <Typography color=\"textSecondary\" variant=\"subtitle2\">\r\n            {dashText}\r\n          </Typography>\r\n        </Breadcrumbs>\r\n        <Box\r\n          sx={{\r\n            mb: -1,\r\n            mx: -1,\r\n            mt: 1,\r\n          }}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            startIcon={<UploadIcon fontSize=\"small\" />}\r\n            sx={{ m: 1 }}\r\n          >\r\n            Import\r\n          </Button>\r\n          <Button\r\n            color=\"primary\"\r\n            startIcon={<DownloadIcon fontSize=\"small\" />}\r\n            sx={{ m: 1 }}\r\n          >\r\n            Export\r\n          </Button>\r\n        </Box>\r\n      </Grid>\r\n      \r\n    </Grid>\r\n \r\n  );\r\n}\r\n\r\nexport default Design","import React from 'react'\r\nimport { Button } from '@material-ui/core'\r\nconst Save = (props) => {\r\n  const { variant, size, color, disabled,handleClose={}, text, type } = props;\r\n  return (\r\n    <>\r\n      <Button\r\n        style={{ margin: \"17px\" }}\r\n        variant={variant}\r\n        size={size}\r\n        color={color}\r\n        type={type}\r\n        disabled={disabled}\r\n        // onClick={handleClose}\r\n      >\r\n        {text}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Save","import React from 'react'\r\nimport { Button } from '@material-ui/core';\r\nconst ResetButton = (props) => {\r\n  const { variant, size, color, disableElevation, text, disabled, onClick } =\r\n    props;\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        style={{ margin: \"17px\" }}\r\n        variant={variant}\r\n        size={size}\r\n        color={color}\r\n        disableElevation={disableElevation}\r\n        disabled={disabled}\r\n        onClick={onClick}\r\n      >\r\n        {text}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResetButton"],"sourceRoot":""}