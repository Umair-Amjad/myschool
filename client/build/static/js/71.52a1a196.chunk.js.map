{"version":3,"sources":["mangement/Exams/ExamsSubjectForm1.js","mangement/Exams/ExamsSubjectForm2.js","icons/Download.js","icons/Upload.js","mangement/apis/Api.js","mangement/HelperFunction.js","mangement/Design.js"],"names":["useStyles","makeStyles","table","minWidth","hedds","width","margin","display","border","borderRadius","feild","marginLeft","feilds","marginBottom","ExamsSubjectForm1","subject","getSubjectData","setabc","classes","useState","examgroup","setExamgroup","examsName","setExamsName","classRoom","setClassRoom","section","setSection","useEffect","a","customAxios","get","examsGroupData","data","examsNameData","Section","then","res","initialValues","examsGroup","classid","sectionid","validationSchema","Yup","shape","onSubmit","values","setErrors","setStatus","setSubmitting","errors","handleBlur","handleChange","handleSubmit","isSubmitting","setFieldValue","setFieldTouched","touched","sx","mt","className","id","fullWidth","labelId","value","onChange","label","name","map","option","mr","ml","color","disabled","type","variant","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","white","body","TableCell","paddingTop","spacing","tables","marginTop","inputGroup","paddingBottom","ExamsSubject","settings","useSettings","books","setBooks","setSubject","abc","d","Date","y","getFullYear","m","getMonth","dd","getDate","mm","submit","postCall","subjecs","toast","success","message","console","log","error","getCalls","params","status","getCall","onChangeform","event","index","target","minHeight","py","maxWidth","compact","container","justifyContent","item","aria-label","separator","fontSize","component","RouterLink","to","mb","mx","startIcon","style","onClick","obj","paperDate","time","duration","class","maxMarks","minMarks","Box","p","length","user","md","subjectName","fullwidth","moment","format","red","filter","splice","deleteUser","Download","createSvgIcon","xmlns","viewBox","fill","fillRule","clipRule","Upload","token","JSON","parse","localStorage","getItem","axios","create","baseURL","headers","authorization","interceptors","response","use","Promise","resolve","reject","endpoint","responce","Design","props","text","dashText"],"mappings":"0SAoBMA,EAAYC,YAAW,CAC3BC,MAAO,CACLC,SAAU,KAGZC,MAAO,CACLC,MAAO,MAEPC,OAAQ,WACRC,QAAS,eACTC,OAAQ,iBACRC,aAAc,OAGhBC,MAAO,CACLL,MAAO,MACPM,WAAY,GAEdC,OAAQ,CACNP,MAAO,MACPM,WAAY,EAEZE,aAAc,MAuMHC,IA7KW,SAAC,GAAwC,EAAtCC,QAAuC,IAA9BC,EAA6B,EAA7BA,eAAgBC,EAAa,EAAbA,OAC9CC,EAAUlB,IAChB,EAAkCmB,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA8BN,mBAAS,IAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAuBA,OArBAC,oBAAS,sBAAC,8BAAAC,EAAA,sEACqBC,cAAcC,IACzC,0CAFM,cACFC,EADE,OAKRX,EAAaW,EAAeC,MALpB,SAOoBH,cAAcC,IACxC,yCARM,OAOFG,EAPE,OAURX,EAAaW,EAAcD,MACfE,YAAQ,aAChBC,MAAK,SAACC,GACRZ,EAAaY,MAEFF,YAAQ,qBAChBC,MAAK,SAACC,GACTV,EAAWU,MAjBL,4CAmBP,IAGD,mCACE,cAAC,IAAD,CACEC,cAAe,CACbC,WAAY,GACZjB,UAAW,GACXkB,QAAS,GACTC,UAAW,IAEbC,iBAAkBC,MAAaC,MAAM,IACrCC,SAAQ,uCAAE,WAAOC,EAAP,YAAAjB,EAAA,wDAAiBkB,UAAjB,EAA4BC,UAA5B,EAAuCC,cAI7CjC,EAAe8B,GACf7B,EAAO6B,GALD,2CAAF,wDARV,SAkCG,cACCI,OADD,EAECC,WAFD,IAGCC,EAHD,EAGCA,aACAC,EAJD,EAICA,aACAC,EALD,EAKCA,aAIAR,GATD,EAMCS,cAND,EAOCC,gBAPD,EAQCC,QARD,EASCX,QATD,OAWC,sBAAMD,SAAUQ,EAAhB,SAEE,eAAC,IAAD,CAAKK,GAAI,CAAEC,GAAI,GAAf,UACE,eAAC,IAAD,CAAaC,UAAW1C,EAAQN,OAAhC,UACE,cAAC,IAAD,CAAYiD,GAAG,aAAf,yBAEA,cAAC,IAAD,CACEC,WAAS,EACTC,QAAQ,aACRC,MAAOlB,EAAOP,WACd0B,SAAUb,EACVS,GAAG,aACHK,MAAM,cACNC,KAAK,aAPP,SASG/C,EAAUgD,KAAI,SAACC,GAAD,OACb,cAAC,IAAD,CAA0BL,MAAOK,EAAOR,GAAxC,SACGQ,EAAOF,MADKE,EAAOR,YAO5B,eAAC,IAAD,CAAaD,UAAW1C,EAAQN,OAAhC,UACE,cAAC,IAAD,CAAYiD,GAAG,YAAf,wBAEA,cAAC,IAAD,CACEC,WAAS,EACTC,QAAQ,YACRC,MAAOlB,EAAOxB,UACd2C,SAAUb,EACVS,GAAG,YACHK,MAAM,aACNC,KAAK,YAPP,SASG7C,EAAU8C,KAAI,SAACC,GAAD,OACb,cAAC,IAAD,CAA0BL,MAAOK,EAAOR,GAAxC,SACGQ,EAAOF,MADKE,EAAOR,YAM5B,eAAC,IAAD,CAAaD,UAAW1C,EAAQR,MAAhC,UACE,cAAC,IAAD,CAAYmD,GAAG,UAAf,8BAEA,cAAC,IAAD,CACEC,WAAS,EACTC,QAAQ,UACRC,MAAOlB,EAAON,QACdyB,SAAUb,EACVS,GAAG,UACHK,MAAM,mBACNC,KAAK,UAPP,SASG3C,EAAU4C,KAAI,SAACC,GAAD,OACb,cAAC,IAAD,CAA0BL,MAAOK,EAAOR,GAAxC,SACGQ,EAAOT,WADKS,EAAOR,YAM5B,eAAC,IAAD,CAAaD,UAAW1C,EAAQR,MAAhC,UACE,cAAC,IAAD,CAAYmD,GAAG,YAAf,qBAEA,cAAC,IAAD,CACEC,WAAS,EACTC,QAAQ,YACRC,MAAOlB,EAAOL,UACdwB,SAAUb,EACVS,GAAG,YACHK,MAAM,UACNC,KAAK,YAPP,SASGzC,EAAQ0C,KAAI,SAACC,GAAD,OACX,cAAC,IAAD,CAA0BL,MAAOK,EAAOR,GAAxC,SACGQ,EAAOF,MADKE,EAAOR,YAO5B,cAAC,IAAD,CACEH,GAAI,CAAEC,GAAI,EAAGW,GAAI,EAAGC,GAAI,GACxBC,MAAM,UACNC,SAAUnB,EACVoB,KAAK,SACLC,QAAQ,YALV,gC,gbC1LRC,EAAkBC,aAAW,SAACC,GAAD,MAAY,CAC7CC,KAAM,CACJC,gBAAiBF,EAAMG,QAAQC,OAAOC,MACtCX,MAAOM,EAAMG,QAAQC,OAAOE,OAE9BC,KAAM,MALgBR,CAQpBS,KAEEtF,EAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvC5E,MAAO,CACLG,MAAO,QAGPkF,WAAYT,EAAMU,QAAQ,GAC1B7E,YAAa,IAEf8E,OAAQ,CACNtF,SAAU,IACVuF,UAAW,IAEbC,WAAY,CACVC,cAAed,EAAMU,QAAQ,QAwVlBK,UArVM,WACnB,IAAM3E,EAAUlB,IACR8F,EAAaC,cAAbD,SACR,EAA0B3E,mBAAS,IAAnC,mBAAO6E,EAAP,KAAcC,EAAd,KACA,EAA8B9E,mBAAS,IAAvC,mBAAOJ,EAAP,KAAgBmF,EAAhB,KACA,EAAsB/E,mBAAS,IAA/B,mBAAOgF,EAAP,KAAYlF,EAAZ,KACMmF,EAAI,IAAIC,KACRC,EAAIF,EAAEG,cACNC,EAAIJ,EAAEK,WACNC,GAAKN,EAAEO,UACPC,GAAE,UAAMN,EAAN,YAAWE,EAAX,YAAgBE,IAclBG,GAAM,uCAAG,sBAAAhF,EAAA,0DAGTd,GAAkB,IAAPoF,EAHF,0CAKHrE,IACHgF,SAAS,wBADN,2BAECX,GAFD,IAGFY,QAAQ,YAAKhG,MAEdqB,MAAK,SAACC,GACL2E,IAAMC,QAAQ5E,EAAI6E,SAClBC,QAAQC,IAAI/E,MAZP,sDAeT8E,QAAQC,IAAR,MAfS,+BAkBXJ,IAAMK,MAAM,+BAlBD,yDAAH,qDAsBNrG,GAAc,uCAAG,WAAO8B,GAAP,SAAAjB,EAAA,sEACfC,IACJwF,SAAS,qBAAsB,CAC7BC,OAAO,eACFzE,KAGNV,MAAK,SAACC,GACL8E,QAAQC,IAAI/E,GACM,KAAdA,EAAImF,OACNR,IAAMK,MAAMhF,EAAI6E,SAEhBhB,EAAW7D,MAZI,2CAAH,sDAkBpBT,oBAAS,sBAAC,4BAAAC,EAAA,sEACWC,IAAY2F,QAAQ,kBAD/B,OACFxF,EADE,OAERgE,EAAShE,GAFD,2CAGP,IAEH,IAYMyF,GAAe,SAACC,EAAOC,GAO3B,IAAI3F,EAAI,YAAOlB,GACfkB,EAAK2F,GAAOD,EAAME,OAAO1D,MAAQwD,EAAME,OAAO7D,MAC9CkC,EAAWjE,IAQb,OACE,qCACE,cAAC,IAAD,UACE,8DAGF,cAAC,IAAD,CACEyB,GAAI,CACFsB,gBAAiB,qBACjB8C,UAAW,OACXC,GAAI,GAJR,SAOE,eAAC,IAAD,CAAWC,WAAUlC,EAASmC,SAAU,KAAxC,UACE,cAAC,IAAD,CAAMC,WAAS,EAACC,eAAe,gBAAgB3C,QAAS,EAAxD,SACE,eAAC,IAAD,CAAM4C,MAAI,EAAV,UACE,cAAC,IAAD,CAAY5D,MAAM,cAAcG,QAAQ,KAAxC,6BAGA,eAAC,IAAD,CACE0D,aAAW,aACXC,UAAW,cAAC,IAAD,CAAkBC,SAAS,UACtC7E,GAAI,CAAEC,GAAI,GAHZ,UAKE,cAAC,IAAD,CACEa,MAAM,cACNgE,UAAWC,IACXC,GAAG,aACH/D,QAAQ,YAJV,uBAQA,cAAC,IAAD,CACEH,MAAM,cACNgE,UAAWC,IACXC,GAAG,uBAHL,6BAOA,cAAC,IAAD,CACElE,MAAM,cACNgE,UAAWC,IACXC,GAAG,uBACH/D,QAAQ,YAJV,uBAQA,cAAC,IAAD,CACEH,MAAM,cACNgE,UAAWC,IACXC,GAAG,4BACH/D,QAAQ,YAJV,4BAQA,cAAC,IAAD,CAAYH,MAAM,gBAAgBG,QAAQ,YAA1C,+BAIF,eAAC,IAAD,CACEjB,GAAI,CACFiF,IAAK,EACLC,IAAK,EACLjF,GAAI,GAJR,UAOE,cAAC,IAAD,CACEa,MAAM,UACNqE,UAAW,cAAC,IAAD,CAAYN,SAAS,UAChC7E,GAAI,CAAE8C,EAAG,GACT7B,QAAQ,OAJV,oBAQA,cAAC,IAAD,CACEH,MAAM,UACNqE,UAAW,cAAC,IAAD,CAAcN,SAAS,UAClC7E,GAAI,CAAE8C,EAAG,GACT7B,QAAQ,OAJV,4BAYN,eAAC,IAAD,CAAWf,UAAW1C,EAAQhB,MAA9B,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEc,eAAgBA,GAChBC,OAAQA,MAGZ,cAAC,IAAD,CACE6H,MAAO,CACLvI,QAAS,OACT4H,eAAgB,WAChB9H,MAAO,OAJX,SAOE,cAAC,IAAD,CAAQsE,QAAQ,YAAYoE,QAjIxB,WACd,IAAIC,EAAM,CACRjI,QAAS,GACTkI,UAAWrC,GACXsC,KAAM,QACNC,SAAU,IACVC,MAAO,IACPC,SAAU,MACVC,SAAU,MAEZpD,EAAW,GAAD,mBAAKnF,GAAL,CAAciI,MAuHd,2BAIF,cAAC,IAAD,CAAOpF,UAAW1C,EAAQuE,OAAQ4C,aAAW,mBAA7C,SACE,eAAC,IAAD,WACE,cAAC,IAAD,IACA,eAAC,IAAD,WACE,cAACzD,EAAD,sBAEA,cAACA,EAAD,mBACA,cAACA,EAAD,mBACA,cAACA,EAAD,uBACA,cAACA,EAAD,oBACA,cAACA,EAAD,4BAEA,cAACA,EAAD,2CAIN,eAAC,IAAD,CAAO4D,UAAWe,IAAKC,EAAG,EAA1B,UACE,sBAAM3G,SAAUgE,GAAhB,SAEI9F,EAAQ0I,OAAS,EACb1I,EAAQqD,KAAI,SAACsF,EAAM9B,GAEjB,OADAT,QAAQC,IAAIsC,EAAKR,MAEf,eAAC,IAAD,CACEhB,WAAS,EACT1C,QAAS,EAET5B,UAAW1C,EAAQyE,WAJrB,UAME,cAAC,IAAD,CAAMyC,MAAI,EAACuB,GAAI,EAAf,SACE,cAAC,IAAD,CAAajG,GAAI,CAAErD,MAAO,QAA1B,SACE,cAAC,IAAD,CACEyD,UAAU,OACVC,QAAQ,UACRC,MAAO0F,EAAK3I,QACZkD,SAAU,SAAC0D,GAAD,OACRD,GAAaC,EAAOC,IAEtB/D,GAAG,UACHM,KAAK,UARP,SAUG6B,EAAM5B,KAAI,SAACC,GAAD,OACT,cAAC,IAAD,CAA0BL,MAAOK,EAAOR,GAAxC,SACGQ,EAAOuF,aADKvF,EAAOR,aAMtB,IACR,cAAC,IAAD,CAAMuE,MAAI,EAACuB,GAAI,EAAf,SACE,cAAC,IAAD,CACExF,KAAK,OACLO,KAAK,OACLV,MAAO0F,EAAKR,KACZjF,SAAU,SAAC0D,GAAD,OAAWD,GAAaC,EAAOC,IACzCjD,QAAQ,WACRkF,UAAU,WAEN,IACR,cAAC,IAAD,CAAMzB,MAAI,EAAC1E,GAAI,CAAEa,GAAI,GAAKoF,GAAI,EAA9B,SACE,cAAC,IAAD,CACExF,KAAK,YACLO,KAAK,OACLV,MAAO8F,IAAOJ,EAAKT,WAAWc,OAC5B,cAEF9F,SAAU,SAAC0D,GAAD,OAAWD,GAAaC,EAAOC,IAEzCjD,QAAQ,WACRkF,UAAU,WAGd,cAAC,IAAD,CAAMzB,MAAI,EAAC1E,GAAI,CAAEa,GAAI,GAAKoF,GAAI,EAA9B,SACE,cAAC,IAAD,CACExF,KAAK,WACLH,MAAO0F,EAAKP,SACZlF,SAAU,SAAC0D,GAAD,OAAWD,GAAaC,EAAOC,IACzCjD,QAAQ,WACRkF,UAAU,WAEN,IACR,cAAC,IAAD,CAAMzB,MAAI,EAACuB,GAAI,EAAf,SACE,cAAC,IAAD,CACExF,KAAK,QACLH,MAAO0F,EAAKN,MACZnF,SAAU,SAAC0D,GAAD,OAAWD,GAAaC,EAAOC,IACzCjD,QAAQ,WACRkF,UAAU,WAEN,IACR,cAAC,IAAD,CAAMzB,MAAI,EAACuB,GAAI,EAAf,SACE,cAAC,IAAD,CACExF,KAAK,WACLH,MAAO0F,EAAKL,SACZpF,SAAU,SAAC0D,GAAD,OAAWD,GAAaC,EAAOC,IACzCjD,QAAQ,WACRkF,UAAU,WAEN,IACR,cAAC,IAAD,CAAMzB,MAAI,EAACuB,GAAI,EAAf,SACE,cAAC,IAAD,CACExF,KAAK,WACLH,MAAO0F,EAAKJ,SACZrF,SAAU,SAAC0D,GAAD,OAAWD,GAAaC,EAAOC,IACzCjD,QAAQ,WACRkF,UAAU,WAGd,cAAC,IAAD,CAAMzB,MAAI,EAACuB,GAAI,EAAGb,MAAO,CAAEpD,UAAW,GAAtC,SACE,eAAC,IAAD,CACEoD,MAAO,CAAEtE,MAAOwF,IAAI,MACpBjB,QAAS,kBA5NpB,SAACnB,GAClB,IAAMqC,EAAM,YAAOlJ,GACnBkJ,EAAOC,OAAOtC,EAAO,GACrB1B,EAAW+D,GAyNgCE,CAAWvC,IAC1BjD,QAAQ,YAHV,UAKG,IACD,cAAC,IAAD,WAzFCiD,MA+FX,OAMR,eAAC,IAAD,CAAQmB,QAASlC,GAAQlC,QAAQ,YAAjC,UACG,IADH,4B,iCC1Yd,mBAEMyF,EAAWC,YACf,qBACEC,MAAM,6BACNC,QAAQ,YACRC,KAAK,eAHP,SAKE,sBACEC,SAAS,UACTrE,EAAE,wLACFsE,SAAS,cAEL,YAGKN,O,iCChBf,mBAEMO,EAASN,YACb,qBACEC,MAAM,6BACNC,QAAQ,YACRC,KAAK,eAHP,SAKE,sBACEC,SAAS,UACTrE,EAAE,yLACFsE,SAAS,cAEL,UAGKC,O,gFChBf,qBAIIC,GAJJ,MAIYC,KAAKC,MAAMC,aAAaC,QAAQ,iBAM7B,eAAsB,IAC7BlJ,EAAcmJ,IAAMC,OAAO,CAC/BC,QAAS,yBACTC,QAAS,CACPC,cAAc,UAAD,OAAYT,MAsC7B,OAxBA9I,EAAYwJ,aAAaC,SAASC,KAChC,SAACD,GAAD,OACE,IAAIE,SAAQ,SAACC,EAASC,GACpBD,EAAQH,SAEZ,SAAClE,GACA,OAAKA,EAAMkE,UAKmB,KAAzBlE,EAAMkE,SAAS/D,QACjBL,QAAQC,IAAI,wBASPqE,QAAQE,OAAOtE,IAdd,IAAIoE,SAAQ,SAACC,EAASC,GAC3BA,EAAOtE,SAgBPvF,I,gHChDIK,G,OAAO,uCAAG,WAAOyJ,GAAP,iBAAA/J,EAAA,sEACEC,IAAY2F,QAAZ,UAAuBmE,IADzB,cACfC,EADe,gBAECA,EAFD,cAEfnK,EAFe,yBAGdA,GAHc,2CAAH,wD,iCCJpB,yGA2EeoK,IA7DA,SAACC,GACd,IAAQC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,SACd,OAEE,cAAC,IAAD,CACEnD,MAAO,CAAElD,cAAe,OAAOF,UAAU,IACzCwC,WAAS,EACTC,eAAe,gBACf3C,QAAS,EAJX,SAME,eAAC,IAAD,CAAM4C,MAAI,EAAV,UACE,cAAC,IAAD,CAAY5D,MAAM,cAAcG,QAAQ,KAAxC,SACGqH,IAEH,eAAC,IAAD,CACE3D,aAAW,aACXC,UAAW,cAAC,IAAD,CAAkBC,SAAS,UACtC7E,GAAI,CAAEC,GAAI,GAHZ,UAKE,cAAC,IAAD,CACEa,MAAM,cACNgE,UAAWC,IACXC,GAAG,sBACH/D,QAAQ,YAJV,uBASA,cAAC,IAAD,CAAYH,MAAM,gBAAgBG,QAAQ,YAA1C,SACGsH,OAGL,eAAC,IAAD,CACEvI,GAAI,CACFiF,IAAK,EACLC,IAAK,EACLjF,GAAI,GAJR,UAOE,cAAC,IAAD,CACEa,MAAM,UACNqE,UAAW,cAAC,IAAD,CAAYN,SAAS,UAChC7E,GAAI,CAAE8C,EAAG,GAHX,oBAOA,cAAC,IAAD,CACEhC,MAAM,UACNqE,UAAW,cAAC,IAAD,CAAcN,SAAS,UAClC7E,GAAI,CAAE8C,EAAG,GAHX","file":"static/js/71.52a1a196.chunk.js","sourcesContent":["import React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  TextField,\r\n  Typography,\r\n  MenuItem,\r\n  Button,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Formik } from \"formik\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Section } from \"../HelperFunction\";\r\nimport customAxios from \"../apis/Api\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n    // marginTop:10\r\n  },\r\n  hedds: {\r\n    width: \"20%\",\r\n    // padding: \"12px 20px\",\r\n    margin: \"8px 10px\",\r\n    display: \"inline-block\",\r\n    border: \"1px solid #ccc\",\r\n    borderRadius: \"4px\",\r\n    // box-sizing:,\r\n  },\r\n  feild: {\r\n    width: \"20%\",\r\n    marginLeft: 8,\r\n  },\r\n  feilds: {\r\n    width: \"20%\",\r\n    marginLeft: 8,\r\n    // marginTop: 8,\r\n    marginBottom: 10,\r\n  },\r\n});\r\nconst attend = [\r\n  {\r\n    value: \"5\",\r\n    label: \"All\",\r\n  },\r\n  {\r\n    label: \"Absent\",\r\n    value: \"2\",\r\n  },\r\n  {\r\n    label: \"Present\",\r\n    value: \"1\",\r\n  },\r\n  {\r\n    label: \"Late\",\r\n    value: \"3\",\r\n  },\r\n  {\r\n    value: \"4\",\r\n    label: \"Leave\",\r\n  },\r\n];\r\n\r\nconst ExamsSubjectForm1 = ({ subject, getSubjectData, setabc }) => {\r\n  const classes = useStyles();\r\n  const [examgroup, setExamgroup] = useState([]);\r\n  const [examsName, setExamsName] = useState([]);\r\n\r\n  const [classRoom, setClassRoom] = useState([]);\r\n  const [section, setSection] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    const examsGroupData = await customAxios().get(\r\n      \"http://localhost:8000/exams/examsgroup\"\r\n    );\r\n\r\n    setExamgroup(examsGroupData.data);\r\n\r\n    const examsNameData = await customAxios().get(\r\n      \"http://localhost:8000/exams/examsName\"\r\n    );\r\n    setExamsName(examsNameData.data);\r\n    const fun = Section(\"class/api\");\r\n    fun.then((res) => {\r\n      setClassRoom(res);\r\n    });\r\n    const fun1 = Section(\"class/api/section\");\r\n    fun1.then((res) => {\r\n      setSection(res);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          examsGroup: \"\",\r\n          examsName: \"\",\r\n          classid: \"\",\r\n          sectionid: \"\",\r\n        }}\r\n        validationSchema={Yup.object().shape({})}\r\n        onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n          // try {\r\n          // alert(JSON.stringify(values), null);\r\n         \r\n            getSubjectData(values);\r\n            setabc(values);\r\n       \r\n          //   Call API to store step data in server session\r\n      \r\n\r\n          // It is important to have it on server to be able to reuse it if user\r\n          // decides to continue later.\r\n          //   if (onNext) {\r\n          //     allStudentAttendence(data);\r\n          //     onNext();\r\n          //   }\r\n          //   setStatus({ success: true });\r\n          //   setSubmitting(false);\r\n          // } catch (err) {\r\n          //   console.error(err);\r\n          //   setStatus({ success: false });\r\n          //   setErrors({ submit: err.message });\r\n          //   setSubmitting(false);\r\n          // }\r\n        }}\r\n      >\r\n        {({\r\n          errors,\r\n          handleBlur,\r\n          handleChange,\r\n          handleSubmit,\r\n          isSubmitting,\r\n          setFieldValue,\r\n          setFieldTouched,\r\n          touched,\r\n          values,\r\n        }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            {/* <Card sx={{ p: 3 }}> */}\r\n            <Box sx={{ mt: 2 }}>\r\n              <FormControl className={classes.feilds}>\r\n                <InputLabel id=\"examsGroup\">Exams Group</InputLabel>\r\n\r\n                <Select\r\n                  fullWidth\r\n                  labelId=\"examsGroup\"\r\n                  value={values.examsGroup}\r\n                  onChange={handleChange}\r\n                  id=\"examsGroup\"\r\n                  label=\"exams Group\"\r\n                  name=\"examsGroup\"\r\n                >\r\n                  {examgroup.map((option) => (\r\n                    <MenuItem key={option.id} value={option.id}>\r\n                      {option.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <FormControl className={classes.feilds}>\r\n                <InputLabel id=\"examsName\">Exams Name</InputLabel>\r\n\r\n                <Select\r\n                  fullWidth\r\n                  labelId=\"examsName\"\r\n                  value={values.examsName}\r\n                  onChange={handleChange}\r\n                  id=\"examsName\"\r\n                  label=\"exams Name\"\r\n                  name=\"examsName\"\r\n                >\r\n                  {examsName.map((option) => (\r\n                    <MenuItem key={option.id} value={option.id}>\r\n                      {option.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl className={classes.feild}>\r\n                <InputLabel id=\"classid\">Department/Class</InputLabel>\r\n\r\n                <Select\r\n                  fullWidth\r\n                  labelId=\"classid\"\r\n                  value={values.classid}\r\n                  onChange={handleChange}\r\n                  id=\"classid\"\r\n                  label=\"Department/Class\"\r\n                  name=\"classid\"\r\n                >\r\n                  {classRoom.map((option) => (\r\n                    <MenuItem key={option.id} value={option.id}>\r\n                      {option.className}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl className={classes.feild}>\r\n                <InputLabel id=\"sectionid\">Section</InputLabel>\r\n\r\n                <Select\r\n                  fullWidth\r\n                  labelId=\"sectionid\"\r\n                  value={values.sectionid}\r\n                  onChange={handleChange}\r\n                  id=\"sectionid\"\r\n                  label=\"Section\"\r\n                  name=\"sectionid\"\r\n                >\r\n                  {section.map((option) => (\r\n                    <MenuItem key={option.id} value={option.id}>\r\n                      {option.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <Button\r\n                sx={{ mt: 1, mr: 2, ml: 2 }}\r\n                color=\"primary\"\r\n                disabled={isSubmitting}\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n              >\r\n                Search\r\n              </Button>\r\n            </Box>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\nexport default ExamsSubjectForm1;\r\n","import React from \"react\";\r\nimport Design from \"../Design\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  withStyles,\r\n  TableCell,\r\n  Paper,\r\n  Box,\r\n  TextField,\r\n  Button,\r\n  IconButton,\r\n  Breadcrumbs,\r\n  Link,\r\n  Typography,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport ChevronRightIcon from \"../../icons/ChevronRight\";\r\nimport UploadIcon from \"../../icons/Upload\";\r\nimport DownloadIcon from \"../../icons/Download\";\r\nimport useSettings from \"../../hooks/useSettings\";\r\nimport axios from \"axios\";\r\nimport ExamsSubjectForm1 from \"./ExamsSubjectForm1\";\r\nimport toast from \"react-hot-toast\";\r\nimport { divide } from \"lodash\";\r\nimport moment from \"moment/moment\";\r\nimport {customAxios} from \"../apis/Axios\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    // fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    width: \"100vw\",\r\n    // height: \"100vh\",\r\n    // backgroundColor: theme.palette.grey[300],\r\n    paddingTop: theme.spacing(1),\r\n    marginLeft: -30,\r\n  },\r\n  tables: {\r\n    minWidth: 700,\r\n    marginTop: 10,\r\n  },\r\n  inputGroup: {\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n}));\r\nconst ExamsSubject = () => {\r\n  const classes = useStyles();\r\n  const { settings } = useSettings();\r\n  const [books, setBooks] = useState([]);\r\n  const [subject, setSubject] = useState([]);\r\n  const [abc, setabc] = useState({});\r\n  const d = new Date();\r\n  const y = d.getFullYear();\r\n  const m = d.getMonth();\r\n  const dd = d.getDate();\r\n  const mm = `${y}-${m}-${dd}`;\r\n  // console.log(mm)\r\n  // const userTemplate = {\r\n  //   subject: \"\",\r\n  //   paperDate: mm,\r\n  //   time: \"09:05\",\r\n\r\n  //   duration: \"3\",\r\n  //   class: \"9\",\r\n  //   maxMarks: \"100\",\r\n  //   minMarks: \"33\",\r\n  // };\r\n\r\n  // console.log(\"sub\",subject)\r\n  const submit = async () => {\r\n    // console.log(users,subject)\r\n    // return\r\n    if (subject && abc != \"\") {\r\n      try {\r\n        await customAxios\r\n          .postCall(\"exams/post-exams-time\", {\r\n            ...abc,\r\n            subjecs: [...subject],\r\n          })\r\n          .then((res) => {\r\n            toast.success(res.message);\r\n            console.log(res);\r\n          });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    } else {\r\n      toast.error(\"Please fill the Input Feild\");\r\n    }\r\n  };\r\n\r\n  const getSubjectData = async (values) => {\r\n    await customAxios.\r\n      getCalls(\"exams/subject-list\", {\r\n        params: {\r\n          ...values,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status == 404) {\r\n          toast.error(res.message);\r\n        } else {\r\n          setSubject(res);\r\n        }\r\n      });\r\n    // console.log(Subjectdata.data);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    const data = await customAxios.getCall(\"books/subjects\");\r\n    setBooks(data);\r\n  }, []);\r\n\r\n  const addUser = () => {\r\n    let obj = {\r\n      subject: \"\",\r\n      paperDate: mm,\r\n      time: \"09:05\",\r\n      duration: \"3\",\r\n      class: \"9\",\r\n      maxMarks: \"100\",\r\n      minMarks: \"33\",\r\n    };\r\n    setSubject([...subject, obj]);\r\n  };\r\n  const onChangeform = (event, index) => {\r\n    // console.log(e.target.name,index)\r\n    // if (event.target.value) {\r\n    //   setHasValue(true);\r\n    // } else {\r\n    //   setHasValue(false);\r\n    // }\r\n    let data = [...subject];\r\n    data[index][event.target.name] = event.target.value;\r\n    setSubject(data);\r\n  };\r\n\r\n  const deleteUser = (index) => {\r\n    const filter = [...subject];\r\n    filter.splice(index, 1);\r\n    setSubject(filter);\r\n  };\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Dashboard: Examination </title>\r\n      </Helmet>\r\n\r\n      <Box\r\n        sx={{\r\n          backgroundColor: \"background.default\",\r\n          minHeight: \"100%\",\r\n          py: 1,\r\n        }}\r\n      >\r\n        <Container maxWidth={settings.compact ? \"xl\" : false}>\r\n          <Grid container justifyContent=\"space-between\" spacing={3}>\r\n            <Grid item>\r\n              <Typography color=\"textPrimary\" variant=\"h5\">\r\n                Exam Group List\r\n              </Typography>\r\n              <Breadcrumbs\r\n                aria-label=\"breadcrumb\"\r\n                separator={<ChevronRightIcon fontSize=\"small\" />}\r\n                sx={{ mt: 1 }}\r\n              >\r\n                <Link\r\n                  color=\"textPrimary\"\r\n                  component={RouterLink}\r\n                  to=\"/dashboard\"\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  Dashboard\r\n                </Link>\r\n                <Link\r\n                  color=\"textPrimary\"\r\n                  component={RouterLink}\r\n                  to=\"/dashboard/examslist\"\r\n                >\r\n                  Exam Group List\r\n                </Link>\r\n                <Link\r\n                  color=\"textPrimary\"\r\n                  component={RouterLink}\r\n                  to=\"/dashboard/examsList\"\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  Exam List\r\n                </Link>\r\n                <Link\r\n                  color=\"textPrimary\"\r\n                  component={RouterLink}\r\n                  to=\"/dashboard/assign-student\"\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  Assign Student\r\n                </Link>\r\n                <Typography color=\"textSecondary\" variant=\"subtitle2\">\r\n                  Exams Subjects\r\n                </Typography>\r\n              </Breadcrumbs>\r\n              <Box\r\n                sx={{\r\n                  mb: -1,\r\n                  mx: -1,\r\n                  mt: 1,\r\n                }}\r\n              >\r\n                <Button\r\n                  color=\"primary\"\r\n                  startIcon={<UploadIcon fontSize=\"small\" />}\r\n                  sx={{ m: 1 }}\r\n                  variant=\"text\"\r\n                >\r\n                  Import\r\n                </Button>\r\n                <Button\r\n                  color=\"primary\"\r\n                  startIcon={<DownloadIcon fontSize=\"small\" />}\r\n                  sx={{ m: 1 }}\r\n                  variant=\"text\"\r\n                >\r\n                  Export\r\n                </Button>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Container className={classes.table}>\r\n            <Box>\r\n              <ExamsSubjectForm1\r\n                getSubjectData={getSubjectData}\r\n                setabc={setabc}\r\n              />\r\n            </Box>\r\n            <Box\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"flex-end\",\r\n                width: \"82%\",\r\n              }}\r\n            >\r\n              <Button variant=\"contained\" onClick={addUser}>\r\n                Add Subject\r\n              </Button>\r\n            </Box>\r\n            <Table className={classes.tables} aria-label=\"customized table\">\r\n              <TableHead>\r\n                <TableRow></TableRow>\r\n                <TableRow>\r\n                  <StyledTableCell>Subject</StyledTableCell>\r\n\r\n                  <StyledTableCell>Time</StyledTableCell>\r\n                  <StyledTableCell>Date</StyledTableCell>\r\n                  <StyledTableCell>Duration</StyledTableCell>\r\n                  <StyledTableCell>Class</StyledTableCell>\r\n                  <StyledTableCell>Marks(...max)</StyledTableCell>\r\n\r\n                  <StyledTableCell>Marks(passing marks)</StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n            </Table>\r\n            <Paper component={Box} p={1}>\r\n              <form onSubmit={submit}>\r\n                {\r\n                  subject.length > 0\r\n                    ? subject.map((user, index) => {\r\n                        console.log(user.time);\r\n                        return (\r\n                          <Grid\r\n                            container\r\n                            spacing={1}\r\n                            key={index}\r\n                            className={classes.inputGroup}\r\n                          >\r\n                            <Grid item md={2}>\r\n                              <FormControl sx={{ width: \"100%\" }}>\r\n                                <Select\r\n                                  fullWidth=\"true\"\r\n                                  labelId=\"subject\"\r\n                                  value={user.subject}\r\n                                  onChange={(event) =>\r\n                                    onChangeform(event, index)\r\n                                  }\r\n                                  id=\"subject\"\r\n                                  name=\"subject\"\r\n                                >\r\n                                  {books.map((option) => (\r\n                                    <MenuItem key={option.id} value={option.id}>\r\n                                      {option.subjectName}\r\n                                    </MenuItem>\r\n                                  ))}\r\n                                </Select>\r\n                              </FormControl>\r\n                            </Grid>{\" \"}\r\n                            <Grid item md={1}>\r\n                              <TextField\r\n                                name=\"time\"\r\n                                type=\"time\"\r\n                                value={user.time}\r\n                                onChange={(event) => onChangeform(event, index)}\r\n                                variant=\"outlined\"\r\n                                fullwidth=\"true\"\r\n                              />\r\n                            </Grid>{\" \"}\r\n                            <Grid item sx={{ ml: 4 }} md={1}>\r\n                              <TextField\r\n                                name=\"paperDate\"\r\n                                type=\"date\"\r\n                                value={moment(user.paperDate).format(\r\n                                  \"YYYY-MM-DD\"\r\n                                )}\r\n                                onChange={(event) => onChangeform(event, index)}\r\n                                // placeholder=\"Enter your Fullname\"\r\n                                variant=\"outlined\"\r\n                                fullwidth=\"true\"\r\n                              />\r\n                            </Grid>\r\n                            <Grid item sx={{ ml: 8 }} md={1}>\r\n                              <TextField\r\n                                name=\"duration\"\r\n                                value={user.duration}\r\n                                onChange={(event) => onChangeform(event, index)}\r\n                                variant=\"outlined\"\r\n                                fullwidth=\"true\"\r\n                              />\r\n                            </Grid>{\" \"}\r\n                            <Grid item md={1}>\r\n                              <TextField\r\n                                name=\"class\"\r\n                                value={user.class}\r\n                                onChange={(event) => onChangeform(event, index)}\r\n                                variant=\"outlined\"\r\n                                fullwidth=\"true\"\r\n                              />\r\n                            </Grid>{\" \"}\r\n                            <Grid item md={1}>\r\n                              <TextField\r\n                                name=\"maxMarks\"\r\n                                value={user.maxMarks}\r\n                                onChange={(event) => onChangeform(event, index)}\r\n                                variant=\"outlined\"\r\n                                fullwidth=\"true\"\r\n                              />\r\n                            </Grid>{\" \"}\r\n                            <Grid item md={1}>\r\n                              <TextField\r\n                                name=\"minMarks\"\r\n                                value={user.minMarks}\r\n                                onChange={(event) => onChangeform(event, index)}\r\n                                variant=\"outlined\"\r\n                                fullwidth=\"true\"\r\n                              />\r\n                            </Grid>\r\n                            <Grid item md={1} style={{ marginTop: 4 }}>\r\n                              <IconButton\r\n                                style={{ color: red[500] }}\r\n                                onClick={() => deleteUser(index)}\r\n                                variant=\"contained\"\r\n                              >\r\n                                {\" \"}\r\n                                <DeleteIcon />\r\n                              </IconButton>\r\n                            </Grid>\r\n                          </Grid>\r\n                        );\r\n                      })\r\n                    : null\r\n                  // <div style={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\"}}>\r\n                  //   No data\r\n                  // </div>\r\n                }\r\n              </form>\r\n              <Button onClick={submit} variant=\"contained\">\r\n                {\" \"}\r\n                Submit\r\n              </Button>\r\n            </Paper>\r\n          </Container>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExamsSubject;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Download = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Download'\n);\n\nexport default Download;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Upload = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM6.293 6.707a1 1 0 010-1.414l3-3a1 1 0 011.414 0l3 3a1 1 0 01-1.414 1.414L11 5.414V13a1 1 0 11-2 0V5.414L7.707 6.707a1 1 0 01-1.414 0z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Upload'\n);\n\nexport default Upload;\n","import axios from \"axios\";\r\nimport wait from \"../../utils/wait\";\r\n//attach authorization token and other common stuffs\r\n\r\nlet token = JSON.parse(localStorage.getItem(\"accessToken\")) ;\r\n// let token = localStorage.getItem(\"accessToken\")\r\n//   ? JSON.parse(localStorage.getItem(\"accessToken\"))\r\n//   : null;\r\n\r\n  // console.log(token)\r\nexport default (navigate = null) => {\r\n  const customAxios = axios.create({\r\n    baseURL: \"http://localhost:8000/\",\r\n    headers: {\r\n      authorization: `bearer ${token}`,\r\n    },\r\n  });\r\n\r\nfunction getTokenFromLocalStorage() {\r\n  const token = localStorage.getItem(\"accessToken\");\r\n  console.log(\"the token from local storage is -> \" + token);\r\n  if (token === null) {\r\n    return undefined;\r\n  }\r\n  return token;\r\n}\r\n\r\n\r\n  customAxios.interceptors.response.use(\r\n    (response) =>\r\n      new Promise((resolve, reject) => {\r\n        resolve(response);\r\n      }),\r\n    (error) => {\r\n     if (!error.response) { \r\n       return new Promise((resolve, reject) => {\r\n         reject(error);\r\n       });\r\n     }\r\n      if (error.response.status == 401) {\r\n        console.log(\"your are not logedin\");\r\n        // localStorage.removeItem(\"accessToken\");\r\n        // localStorage.removeItem(\"user\");\r\n        // if(navigate){\r\n        //   navigate(\"/authentication/login-unguarded\");\r\n        // }else{\r\n        //   window.location.href = \"/authentication/login-unguarded\";\r\n        // }\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n  return customAxios\r\n};\r\n\r\n","import axios from \"axios\";\r\nimport {customAxios} from \"./apis/Axios\";\r\nimport userService from \"./apis/userService\";\r\n\r\nexport const Section = async (endpoint) => {\r\n  const responce = await customAxios.getCall(`${endpoint}`);\r\n  const section = await responce;\r\n  return section;\r\n};\r\n\r\n// export const getAPI = async (endpoint, params={}) => {\r\n//   const responce = await axios.get(`${URL}${endpoint}`, {params:{...params}});\r\n//   // console.log(b.data)\r\n//   const section = await responce.data;\r\n//   return section;\r\n// };\r\n\r\n// export const postAPI = async (endpoint, data= {}) => {\r\n//   const responce = await axios.post(`${URL}${endpoint}`, {...data});\r\n//   // console.log(b.data)\r\n//   const section = await responce.data;\r\n//   return section;\r\n// };\r\n","import React from 'react'\r\nimport {\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  Card,\r\n  MenuItem,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Breadcrumbs, Link } from \"@material-ui/core\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport UploadIcon from \"../icons/Upload\";\r\nimport DownloadIcon from \"../icons/Download\";\r\nimport ChevronRightIcon from \"../icons/ChevronRight\";\r\nconst Design = (props) => {\r\n  const { text, dashText } = props;\r\n  return (\r\n  \r\n    <Grid\r\n      style={{ paddingBottom: \"10px\",marginTop:10 }}\r\n      container\r\n      justifyContent=\"space-between\"\r\n      spacing={3}\r\n    >\r\n      <Grid item>\r\n        <Typography color=\"textPrimary\" variant=\"h5\">\r\n          {text}\r\n        </Typography>\r\n        <Breadcrumbs\r\n          aria-label=\"breadcrumb\"\r\n          separator={<ChevronRightIcon fontSize=\"small\" />}\r\n          sx={{ mt: 1}}\r\n        >\r\n          <Link\r\n            color=\"textPrimary\"\r\n            component={RouterLink}\r\n            to=\"/dashboard/maindash\"\r\n            variant=\"subtitle2\"\r\n          >\r\n            Dashboard\r\n          </Link>\r\n\r\n          <Typography color=\"textSecondary\" variant=\"subtitle2\">\r\n            {dashText}\r\n          </Typography>\r\n        </Breadcrumbs>\r\n        <Box\r\n          sx={{\r\n            mb: -1,\r\n            mx: -1,\r\n            mt: 1,\r\n          }}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            startIcon={<UploadIcon fontSize=\"small\" />}\r\n            sx={{ m: 1 }}\r\n          >\r\n            Import\r\n          </Button>\r\n          <Button\r\n            color=\"primary\"\r\n            startIcon={<DownloadIcon fontSize=\"small\" />}\r\n            sx={{ m: 1 }}\r\n          >\r\n            Export\r\n          </Button>\r\n        </Box>\r\n      </Grid>\r\n      \r\n    </Grid>\r\n \r\n  );\r\n}\r\n\r\nexport default Design"],"sourceRoot":""}