{"version":3,"sources":["mangement/Attendence/Attendece_List2.js","mangement/Attendence/Attendence_List.js","mangement/apis/Api.js","components/Label.js","mangement/HelperFunction.js"],"names":["StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","TableCell","StyledTableRow","root","action","hover","TableRow","useStyles","makeStyles","table","minWidth","hedds","width","margin","display","border","borderRadius","feild","marginLeft","feilds","marginTop","Attendece_List2","Data","console","log","classes","useState","search","setsearch","getStatusLabel","invoiceStatus","Leave","text","Present","Late","Absent","Label","length","Box","sx","alignItems","boxShadow","flexWrap","m","p","maxWidth","TextField","fullWidth","InputProps","startAdornment","InputAdornment","position","Search","fontSize","onChange","e","target","value","placeholder","variant","TableContainer","component","Paper","Table","className","aria-label","TableHead","TableBody","sort","a","b","rollno","filter","row","name","toLowerCase","includes","map","index","scope","align","secname","moment","date","format","attend","label","Attendence_List","classRoom","setClassRoom","section","setSection","setData","useEffect","Section","then","res","initialValues","classid","sectionid","attendence_list","Date","endDate","validationSchema","Yup","shape","onSubmit","values","setErrors","setStatus","setSubmitting","data","customAxios","getCalls","params","errors","handleBlur","handleChange","handleSubmit","isSubmitting","setFieldValue","setFieldTouched","touched","Card","Typography","mt","FormControl","InputLabel","id","Select","labelId","option","MenuItem","MobileDatePicker","fullwidth","onAccept","toLocaleDateString","inputFormat","onClose","renderInput","inputProps","Button","mr","ml","disabled","type","token","JSON","parse","localStorage","getItem","axios","create","baseURL","headers","authorization","interceptors","response","use","Promise","resolve","reject","error","status","LabelRoot","experimentalStyled","styleProps","main","contrastText","cursor","flexGrow","flexShrink","fontFamily","typography","pxToRem","fontWeight","fontWeightMedium","justifyContent","letterSpacing","paddingBottom","spacing","paddingLeft","paddingRight","paddingTop","textTransform","whiteSpace","props","children","other","endpoint","getCall","responce"],"mappings":"0cAcMA,EAAkBC,aAAW,SAACC,GAAD,MAAY,CAC7CC,KAAM,CACJC,gBAAiBF,EAAMG,QAAQC,OAAOC,MACtCC,MAAON,EAAMG,QAAQC,OAAOG,OAE9BC,KAAM,MALgBT,CAQpBU,KAEEC,EAAiBX,aAAW,SAACC,GAAD,MAAY,CAC5CW,KAAM,CACJ,qBAAsB,CACpBT,gBAAiBF,EAAMG,QAAQS,OAAOC,WAHrBd,CAMnBe,KAEEC,EAAYC,YAAW,CAC3BC,MAAO,CACLC,SAAU,KAGZC,MAAO,CACLC,MAAO,MAEPC,OAAQ,WACRC,QAAS,eACTC,OAAQ,iBACRC,aAAc,OAGhBC,MAAO,CACLL,MAAO,MACPM,WAAY,GAEdC,OAAQ,CACNP,MAAO,MACPM,WAAY,EACZE,UAAW,KAuIAC,EAnIS,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzBC,QAAQC,IAAIF,GACZ,IAAMG,EAAUlB,IAChB,EAA4BmB,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAKMC,EAAiB,SAACC,GAEtB,IAmBA,EAnBY,CACVC,MAAO,CACLjC,MAAO,UACPkC,KAAM,SAERC,QAAS,CACPnC,MAAO,UACPkC,KAAM,WAERE,KAAM,CACJpC,MAAO,UACPkC,KAAM,QAERG,OAAQ,CACNrC,MAAO,QACPkC,KAAM,WAIkBF,GAApBE,EAAR,EAAQA,KAAMlC,EAAd,EAAcA,MAEd,OAAO,cAACsC,EAAA,EAAD,CAAOtC,MAAOA,EAAd,SAAsBkC,KAG/B,OACE,sCACO,OAAJV,QAAI,IAAJA,OAAA,EAAAA,EAAMe,QAAS,EACd,cAACC,EAAA,EAAD,CACEC,GAAI,CACFC,WAAY,SAEZC,UAAW,EACX3B,QAAS,OACT4B,SAAU,OACVC,GAAI,EACJC,EAAG,GARP,SAWE,cAACN,EAAA,EAAD,CACEC,GAAI,CACFI,EAAG,EACH7C,MAAO,QACP+C,SAAU,OACVjC,MAAO,KALX,SAQE,cAACkC,EAAA,EAAD,CACEC,WAAS,EACTC,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACE,cAACC,EAAA,EAAD,CAAYC,SAAS,aAI3BC,SA7Dc,SAACC,GACzB3B,EAAU2B,EAAEC,OAAOC,QA6DTA,MAAO9B,EACP+B,YAAY,6BAEZC,QAAQ,iBAIZ,KACJ,cAACC,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACC,EAAA,EAAD,CAAOC,UAAWvC,EAAQhB,MAAOwD,aAAW,mBAA5C,UACE,eAACC,EAAA,EAAD,WACE,cAAC5D,EAAA,EAAD,IACA,eAACA,EAAA,EAAD,WACE,cAAChB,EAAD,mBAEA,cAACA,EAAD,sBACA,cAACA,EAAD,mBACA,cAACA,EAAD,oBACA,cAACA,EAAD,sBACA,cAACA,EAAD,mBAEA,cAACA,EAAD,+BAGJ,cAAC6E,EAAA,EAAD,UACG7C,EAAK8C,MAAK,SAAUC,EAAGC,GACtB,OAAOD,EAAEE,OAASD,EAAEC,OAAS,EAAIF,EAAEE,OAASD,EAAEC,QAAU,EAAI,KAE3DC,QAAO,SAACC,GACP,MAAc,IAAV9C,GAGF8C,EAAIC,KAAKC,cAAcC,SAASjD,EAAOgD,eAFhCF,OACF,KAMRI,KAAI,SAACJ,EAAKK,GAAN,OACH,eAAC5E,EAAD,WACE,cAACZ,EAAD,CAAiBuE,UAAU,KAAKkB,MAAM,MAAtC,SACGD,EAAQ,IAEX,cAACxF,EAAD,CAAiBuE,UAAU,KAAKkB,MAAM,MAAtC,SACGN,EAAIF,SAEP,cAACjF,EAAD,CAAiB0F,MAAM,QAAvB,mBAAmCP,EAAIC,KAAvC,OACA,cAACpF,EAAD,CAAiB0F,MAAM,QAAvB,SACGP,EAAIT,YAEP,cAAC1E,EAAD,CAAiB0F,MAAM,QAAvB,SAAgCP,EAAIQ,UACpC,cAAC3F,EAAD,CAAiB0F,MAAM,QAAvB,SACGE,IAAOT,EAAIU,MAAMC,OAAO,iBAE3B,cAAC9F,EAAD,CAAiB0F,MAAM,QAAvB,SACGnD,EAAe4C,EAAIY,YAhBHP,iB,kBCtI/BvE,EAAYC,YAAW,CAC3BC,MAAO,CACLC,SAAU,KAGZC,MAAO,CACLC,MAAO,MAEPC,OAAQ,WACRC,QAAS,eACTC,OAAQ,iBACRC,aAAc,OAGhBC,MAAO,CACLL,MAAO,MACPM,WAAY,GAEdC,OAAQ,CACNP,MAAO,MACPM,WAAY,EACZE,UAAW,KAITiE,EAAS,CACb,CACE5B,MAAO,IACP6B,MAAO,OAET,CACEA,MAAO,SACP7B,MAAO,KAET,CACE6B,MAAO,UACP7B,MAAO,KAET,CACE6B,MAAO,OACP7B,MAAO,KAET,CACEA,MAAO,IACP6B,MAAO,UA6NIC,UA1NS,WACtB,IAAM9D,EAAUlB,IAChB,EAAkCmB,mBAAS,IAA3C,mBAAO8D,EAAP,KAAkBC,EAAlB,KACA,EAA8B/D,mBAAS,IAAvC,mBAAOgE,EAAP,KAAgBC,EAAhB,KACA,EAAwBjE,mBAAS,IAAjC,mBAAOJ,EAAP,KAAasE,EAAb,KAmCA,OAhCAC,qBAAU,WAqBIC,YAAQ,aAChBC,MAAK,SAACC,GACRP,EAAaO,MAEFF,YAAQ,qBAChBC,MAAK,SAACC,GACTL,EAAWK,QAEZ,IAGE1E,EAEH,qCACE,cAAC,IAAD,CACE2E,cAAe,CACbC,QAAS,GACTC,UAAW,GAEXC,gBAAiB,GACjBjB,KAAM,IAAIkB,KACVC,QAAS,MAGXC,iBAAkBC,MAAaC,MAAM,IACrCC,SAAQ,uCAAE,WAAOC,EAAP,kBAAAtC,EAAA,+DAAiBuC,UAAjB,EAA4BC,UAA5B,EAAuCC,cAKzCC,EALE,eAKUJ,GALV,SAQFK,IACHC,SAAS,gCAAiC,CACzCC,OAAO,eACFH,KAGNhB,MAAK,SAACC,GACLJ,EAAQI,MAfJ,2CAAF,wDAXV,SA6CG,cACCmB,OADD,EAECC,WAFD,IAGCC,EAHD,EAGCA,aACAC,EAJD,EAICA,aACAC,EALD,EAKCA,aACAC,EAND,EAMCA,cACAC,EAPD,EAOCA,gBAEAd,GATD,EAQCe,QARD,EASCf,QATD,OAWC,sBAAMD,SAAUY,EAAhB,SACE,eAACK,EAAA,EAAD,CAAMpF,GAAI,CAAEK,EAAG,GAAf,UACE,cAACgF,EAAA,EAAD,CAAY9H,MAAM,cAAc6D,QAAQ,KAAxC,+CAGA,eAACrB,EAAA,EAAD,CAAKC,GAAI,CAAEsF,GAAI,GAAf,UACE,eAACC,EAAA,EAAD,CAAa9D,UAAWvC,EAAQR,MAAhC,UACE,cAAC8G,EAAA,EAAD,CAAYC,GAAG,UAAf,8BAEA,cAACC,EAAA,EAAD,CACElF,WAAS,EACTmF,QAAQ,UACRzE,MAAOkD,EAAOT,QACd5C,SAAU+D,EACVW,GAAG,UACH1C,MAAM,mBACNZ,KAAK,UAPP,SASGc,EAAUX,KAAI,SAACsD,GAAD,OACb,cAACC,EAAA,EAAD,CAA0B3E,MAAO0E,EAAOH,GAAxC,SACGG,EAAOnE,WADKmE,EAAOH,YAM5B,eAACF,EAAA,EAAD,CAAa9D,UAAWvC,EAAQR,MAAhC,UACE,cAAC8G,EAAA,EAAD,CAAYC,GAAG,YAAf,qBAEA,cAACC,EAAA,EAAD,CACElF,WAAS,EACTmF,QAAQ,YACRzE,MAAOkD,EAAOR,UACd7C,SAAU+D,EACVW,GAAG,YACH1C,MAAM,UACNZ,KAAK,YAPP,SASGgB,EAAQb,KAAI,SAACsD,GAAD,OACX,cAACC,EAAA,EAAD,CAA0B3E,MAAO0E,EAAOH,GAAxC,SACGG,EAAOzD,MADKyD,EAAOH,YAM5B,cAACF,EAAA,EAAD,CAAa9D,UAAWvC,EAAQR,MAAhC,SACE,cAACoH,EAAA,EAAD,CAEEC,WAAS,EACThD,MAAM,OACNiD,SAAU,kBAAMd,EAAgB,SAChCnE,SAAU,SAAC6B,GAAD,OACRqC,EAAc,OAAQrC,EAAKqD,uBAG7BC,YAAY,cACZC,QAAS,kBAAMjB,EAAgB,SAC/BkB,YAAa,SAACC,GAAD,OACX,cAAC9F,EAAA,EAAD,aAAWa,QAAQ,YAAeiF,KAEpCnF,MAAOkD,EAAOxB,SAGlB,cAAC2C,EAAA,EAAD,CAAa9D,UAAWvC,EAAQR,MAAhC,SACE,cAACoH,EAAA,EAAD,CAEEC,WAAS,EACThD,MAAM,WACNiD,SAAU,kBAAMd,EAAgB,YAChCnE,SAAU,SAACgD,GAAD,OACRkB,EAAc,UAAWlB,EAAQkC,uBAGnCC,YAAY,cACZC,QAAS,kBAAMjB,EAAgB,YAC/BkB,YAAa,SAACC,GAAD,OACX,cAAC9F,EAAA,EAAD,aAAWa,QAAQ,YAAeiF,KAEpCnF,MAAOkD,EAAOL,YAIlB,eAACwB,EAAA,EAAD,CAAa9D,UAAWvC,EAAQN,OAAhC,UACE,cAAC4G,EAAA,EAAD,CAAYC,GAAG,kBAAf,wBAEA,cAACC,EAAA,EAAD,CACElF,WAAS,EACTmF,QAAQ,kBACRzE,MAAOkD,EAAOP,gBACd9C,SAAU+D,EACVW,GAAG,kBACH1C,MAAM,aACNZ,KAAK,kBAPP,SASGW,EAAOR,KAAI,SAACsD,GAAD,OACV,cAACC,EAAA,EAAD,CAA6B3E,MAAO0E,EAAO1E,MAA3C,SACG0E,EAAO7C,OADK6C,EAAO7C,eAO5B,cAACuD,EAAA,EAAD,CACEtG,GAAI,CAAEsF,GAAI,EAAGiB,GAAI,EAAGC,GAAI,GACxBjJ,MAAM,UACNkJ,SAAUzB,EACV0B,KAAK,SACLtF,QAAQ,YALV,6BAeV,cAAC,EAAD,CAAiBrC,KAAMA,OA/KT,O,gFCjHpB,qBAII4H,GAJJ,MAIYC,KAAKC,MAAMC,aAAaC,QAAQ,iBAM7B,eAAsB,IAC7BtC,EAAcuC,IAAMC,OAAO,CAC/BC,QAAS,yBACTC,QAAS,CACPC,cAAc,UAAD,OAAYT,MAsC7B,OAxBAlC,EAAY4C,aAAaC,SAASC,KAChC,SAACD,GAAD,OACE,IAAIE,SAAQ,SAACC,EAASC,GACpBD,EAAQH,SAEZ,SAACK,GACA,OAAKA,EAAML,UAKmB,KAAzBK,EAAML,SAASM,QACjB5I,QAAQC,IAAI,wBASPuI,QAAQE,OAAOC,IAdd,IAAIH,SAAQ,SAACC,EAASC,GAC3BA,EAAOC,SAgBPlD,I,mECjDHoD,EAAYC,YAAmB,OAAnBA,EAA4B,YAA4B,IAAzB7K,EAAwB,EAAxBA,MAAO8K,EAAiB,EAAjBA,WAChD5K,EAAkBF,EAAMG,QAAQ2K,EAAWxK,OAAOyK,KAClDzK,EAAQN,EAAMG,QAAQ2K,EAAWxK,OAAO0K,aAE9C,MAAO,CACLhI,WAAY,SACZ9C,kBACAsB,aAAcxB,EAAMiH,MAAMzF,aAC1BlB,QACA2K,OAAQ,UACR3J,QAAS,cACT4J,SAAU,EACVC,WAAY,EACZC,WAAYpL,EAAMqL,WAAWD,WAC7BvH,SAAU7D,EAAMqL,WAAWC,QAAQ,IACnCC,WAAYvL,EAAMqL,WAAWG,iBAC7BC,eAAgB,SAChBC,cAAe,GACfxK,SAAU,GACVyK,cAAe3L,EAAM4L,QAAQ,IAC7BC,YAAa7L,EAAM4L,QAAQ,GAC3BE,aAAc9L,EAAM4L,QAAQ,GAC5BG,WAAY/L,EAAM4L,QAAQ,IAC1BI,cAAe,YACfC,WAAY,aA6BDrJ,IAzBD,SAACsJ,GACb,MAAkDA,EAA1C5L,aAAR,MAAgB,UAAhB,EAA2B6L,EAAuBD,EAAvBC,SAAaC,EAAxC,YAAkDF,EAAlD,sBAEMpB,EAAa,CAAExK,SAErB,OACE,cAACsK,EAAD,yBACEE,WAAYA,GACRsB,GAFN,aAIGD,O,gHCrCM7F,G,OAAO,uCAAG,WAAO+F,GAAP,iBAAAxH,EAAA,sEACE2C,IAAY8E,QAAZ,UAAuBD,IADzB,cACfE,EADe,gBAECA,EAFD,cAEfrG,EAFe,yBAGdA,GAHc,2CAAH","file":"static/js/84.19405a0b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Box, TextField, InputAdornment } from \"@material-ui/core\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { useState } from \"react\";\r\nimport Label from \"../../components/Label\";\r\nimport moment from \"moment/moment\";\r\nimport SearchIcon from \"../../icons/Search\";\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    // fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n    // marginTop:10\r\n  },\r\n  hedds: {\r\n    width: \"20%\",\r\n    // padding: \"12px 20px\",\r\n    margin: \"8px 10px\",\r\n    display: \"inline-block\",\r\n    border: \"1px solid #ccc\",\r\n    borderRadius: \"4px\",\r\n    // box-sizing:,\r\n  },\r\n  feild: {\r\n    width: \"20%\",\r\n    marginLeft: 8,\r\n  },\r\n  feilds: {\r\n    width: \"20%\",\r\n    marginLeft: 8,\r\n    marginTop: 8,\r\n  },\r\n});\r\n\r\nconst Attendece_List2 = ({ Data }) => {\r\n  console.log(Data)\r\n  const classes = useStyles();\r\n  const [search, setsearch] = useState(\"\");\r\n  const handleQueryChange = (e) => {\r\n    setsearch(e.target.value);\r\n  };\r\n\r\n  const getStatusLabel = (invoiceStatus) => {\r\n\r\n    const map = {\r\n      Leave: {\r\n        color: \"primary\",\r\n        text: \"Leave\",\r\n      },\r\n      Present: {\r\n        color: \"success\",\r\n        text: \"Present\",\r\n      },\r\n      Late: {\r\n        color: \"warning\",\r\n        text: \"Late\",\r\n      },\r\n      Absent: {\r\n        color: \"error\",\r\n        text: \"Absent\",\r\n      },\r\n    };\r\n\r\n    const { text, color } = map[invoiceStatus];\r\n\r\n    return <Label color={color}>{text}</Label>;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {Data?.length > 0 ? (\r\n        <Box\r\n          sx={{\r\n            alignItems: \"center\",\r\n\r\n            boxShadow: 3,\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            m: -1,\r\n            p: 2,\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              m: 1,\r\n              color: \"black\",\r\n              maxWidth: \"100%\",\r\n              width: 500,\r\n            }}\r\n          >\r\n            <TextField\r\n              fullWidth\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <SearchIcon fontSize=\"small\" />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              onChange={handleQueryChange}\r\n              value={search}\r\n              placeholder=\"Search class by Class Name\"\r\n              // value={query}\r\n              variant=\"outlined\"\r\n            />\r\n          </Box>\r\n        </Box>\r\n      ) : null}\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow></TableRow>\r\n            <TableRow>\r\n              <StyledTableCell>S No</StyledTableCell>\r\n\r\n              <StyledTableCell>Roll No</StyledTableCell>\r\n              <StyledTableCell>Name</StyledTableCell>\r\n              <StyledTableCell>Class</StyledTableCell>\r\n              <StyledTableCell>Subject</StyledTableCell>\r\n              <StyledTableCell>Date</StyledTableCell>\r\n\r\n              <StyledTableCell>Attendence</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {Data.sort(function (a, b) {\r\n              return a.rollno > b.rollno ? 1 : a.rollno < b.rollno ? -1 : 0;\r\n            })\r\n              .filter((row) => {\r\n                if (search == \"\") {\r\n                  return row;\r\n                } else if (\r\n                  row.name.toLowerCase().includes(search.toLowerCase())\r\n                ) {\r\n                  return row;\r\n                }\r\n              })\r\n              .map((row, index) => (\r\n                <StyledTableRow key={index}>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    {index + 1}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    {row.rollno}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"start\">{`${row.name} `}</StyledTableCell>\r\n                  <StyledTableCell align=\"start\">\r\n                    {row.className}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"start\">{row.secname}</StyledTableCell>\r\n                  <StyledTableCell align=\"start\">\r\n                    {moment(row.date).format(\"DD/MMM/YYYY\")}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"start\">\r\n                    {getStatusLabel(row.attend)}\r\n                  </StyledTableCell>\r\n                </StyledTableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Attendece_List2;\r\n","import React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  TextField,\r\n  Typography,\r\n  MenuItem,\r\n  Button,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { Formik } from \"formik\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Section } from \"../HelperFunction\";\r\nimport { MobileDatePicker } from \"@material-ui/lab\";\r\nimport Attendece_List2 from \"./Attendece_List2\";\r\nimport userService from \"../apis/userService\";\r\nimport {customAxios} from \"../apis/Axios\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n    // marginTop:10\r\n  },\r\n  hedds: {\r\n    width: \"20%\",\r\n    // padding: \"12px 20px\",\r\n    margin: \"8px 10px\",\r\n    display: \"inline-block\",\r\n    border: \"1px solid #ccc\",\r\n    borderRadius: \"4px\",\r\n    // box-sizing:,\r\n  },\r\n  feild: {\r\n    width: \"20%\",\r\n    marginLeft: 8,\r\n  },\r\n  feilds: {\r\n    width: \"20%\",\r\n    marginLeft: 8,\r\n    marginTop: 8,\r\n  },\r\n});\r\n\r\nconst attend = [\r\n  {\r\n    value: \"5\",\r\n    label: \"All\",\r\n  },\r\n  {\r\n    label: \"Absent\",\r\n    value: \"2\",\r\n  },\r\n  {\r\n    label: \"Present\",\r\n    value: \"1\",\r\n  },\r\n  {\r\n    label: \"Late\",\r\n    value: \"3\",\r\n  },\r\n  {\r\n    value: \"4\",\r\n    label: \"Leave\",\r\n  },\r\n];\r\nconst Attendence_List = () => {\r\n  const classes = useStyles();\r\n  const [classRoom, setClassRoom] = useState([]);\r\n  const [section, setSection] = useState([]);\r\n  const [Data, setData] = useState([]);\r\n \r\n \r\n  useEffect(() => {\r\n    // getAPI(\"class/api\",{id:123});\r\n    // getAPI(\"section/api\");\r\n\r\n    // const da = {\r\n    //   id:1,\r\n    //   name:'abc'\r\n    // }\r\n    // postAPI(\"abc/api\", da);\r\n    //   const daaa = {\r\n    //     id: 1,\r\n    //     name: \"abc\",\r\n    //     abc : ['1',2,3],\r\n    //     def: {\r\n    //       a: 'a',\r\n    //       b: 'b'\r\n    //     }\r\n    //   };\r\n    // postAPI(\"def/api\", daaa);\r\n    // classData();\r\n    // section_api();\r\n    const fun = Section(\"class/api\");\r\n    fun.then((res) => {\r\n      setClassRoom(res);\r\n    });\r\n    const fun1 = Section(\"class/api/section\");\r\n    fun1.then((res) => {\r\n      setSection(res);\r\n    });\r\n  }, []);\r\n\r\n  // const [first, setfirst] = useState(new Date().toLocaleDateString())\r\n  if (!Data) return null;\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          classid: \"\",\r\n          sectionid: \"\",\r\n          // date: \"\",\r\n          attendence_list: \"\",\r\n          date: new Date(),\r\n          endDate: null,\r\n          // submit: null,\r\n        }}\r\n        validationSchema={Yup.object().shape({})}\r\n        onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n          // try {\r\n          // alert(JSON.stringify(values), null);\r\n          // Call API to store step data in server session\r\n\r\n          const data = { ...values };\r\n\r\n          // await new Promise((r) => setTimeout(r, 500));\r\n          await customAxios\r\n            .getCalls(\"attendence/api/attendenceList\", {\r\n              params: {\r\n                ...data,\r\n              },\r\n            })\r\n            .then((res) => {\r\n              setData(res);\r\n            });\r\n\r\n          // It is important to have it on server to be able to reuse it if user\r\n          // decides to continue later.\r\n          //   if (onNext) {\r\n          //     allStudentAttendence(data);\r\n          //     onNext();\r\n          //   }\r\n          //   setStatus({ success: true });\r\n          //   setSubmitting(false);\r\n          // } catch (err) {\r\n          //   console.error(err);\r\n          //   setStatus({ success: false });\r\n          //   setErrors({ submit: err.message });\r\n          //   setSubmitting(false);\r\n          // }\r\n        }}\r\n      >\r\n        {({\r\n          errors,\r\n          handleBlur,\r\n          handleChange,\r\n          handleSubmit,\r\n          isSubmitting,\r\n          setFieldValue,\r\n          setFieldTouched,\r\n          touched,\r\n          values,\r\n        }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <Card sx={{ p: 3 }}>\r\n              <Typography color=\"textPrimary\" variant=\"h6\">\r\n                Select Attendence Info And Detail\r\n              </Typography>\r\n              <Box sx={{ mt: 2 }}>\r\n                <FormControl className={classes.feild}>\r\n                  <InputLabel id=\"classid\">Department/Class</InputLabel>\r\n\r\n                  <Select\r\n                    fullWidth\r\n                    labelId=\"classid\"\r\n                    value={values.classid}\r\n                    onChange={handleChange}\r\n                    id=\"classid\"\r\n                    label=\"Department/Class\"\r\n                    name=\"classid\"\r\n                  >\r\n                    {classRoom.map((option) => (\r\n                      <MenuItem key={option.id} value={option.id}>\r\n                        {option.className}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                <FormControl className={classes.feild}>\r\n                  <InputLabel id=\"sectionid\">Section</InputLabel>\r\n\r\n                  <Select\r\n                    fullWidth\r\n                    labelId=\"sectionid\"\r\n                    value={values.sectionid}\r\n                    onChange={handleChange}\r\n                    id=\"sectionid\"\r\n                    label=\"Section\"\r\n                    name=\"sectionid\"\r\n                  >\r\n                    {section.map((option) => (\r\n                      <MenuItem key={option.id} value={option.id}>\r\n                        {option.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                <FormControl className={classes.feild}>\r\n                  <MobileDatePicker\r\n                    // sx={{ margin: 8, width: \"20%\" }}\r\n                    fullwidth\r\n                    label=\"Date\"\r\n                    onAccept={() => setFieldTouched(\"date\")}\r\n                    onChange={(date) =>\r\n                      setFieldValue(\"date\", date.toLocaleDateString())\r\n                    }\r\n                    // inputFormat=\"yyyy-dd-MM\"\r\n                    inputFormat=\" yyyy/MM/dd\"\r\n                    onClose={() => setFieldTouched(\"date\")}\r\n                    renderInput={(inputProps) => (\r\n                      <TextField variant=\"outlined\" {...inputProps} />\r\n                    )}\r\n                    value={values.date}\r\n                  />\r\n                </FormControl>\r\n                <FormControl className={classes.feild}>\r\n                  <MobileDatePicker\r\n                    // sx={{ margin: 8, width: \"20%\" }}\r\n                    fullwidth\r\n                    label=\"End Date\"\r\n                    onAccept={() => setFieldTouched(\"endDate\")}\r\n                    onChange={(endDate) =>\r\n                      setFieldValue(\"endDate\", endDate.toLocaleDateString())\r\n                    }\r\n                    // inputFormat=\"yyyy-dd-MM\"\r\n                    inputFormat=\" yyyy/MM/dd\"\r\n                    onClose={() => setFieldTouched(\"endDate\")}\r\n                    renderInput={(inputProps) => (\r\n                      <TextField variant=\"outlined\" {...inputProps} />\r\n                    )}\r\n                    value={values.endDate}\r\n                  />\r\n                </FormControl>\r\n\r\n                <FormControl className={classes.feilds}>\r\n                  <InputLabel id=\"attendence_list\">Attendence</InputLabel>\r\n\r\n                  <Select\r\n                    fullWidth\r\n                    labelId=\"attendence_list\"\r\n                    value={values.attendence_list}\r\n                    onChange={handleChange}\r\n                    id=\"attendence_list\"\r\n                    label=\"Attendence\"\r\n                    name=\"attendence_list\"\r\n                  >\r\n                    {attend.map((option) => (\r\n                      <MenuItem key={option.label} value={option.value}>\r\n                        {option.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                {/* <Box sx={{ flexGrow: 1 }} /> */}\r\n                <Button\r\n                  sx={{ mt: 2, mr: 2, ml: 2 }}\r\n                  color=\"primary\"\r\n                  disabled={isSubmitting}\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                >\r\n                  Next\r\n                </Button>\r\n              </Box>\r\n            </Card>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n\r\n      <Attendece_List2 Data={Data} />\r\n    </>\r\n  );\r\n};\r\nexport default Attendence_List;\r\n","import axios from \"axios\";\r\nimport wait from \"../../utils/wait\";\r\n//attach authorization token and other common stuffs\r\n\r\nlet token = JSON.parse(localStorage.getItem(\"accessToken\")) ;\r\n// let token = localStorage.getItem(\"accessToken\")\r\n//   ? JSON.parse(localStorage.getItem(\"accessToken\"))\r\n//   : null;\r\n\r\n  // console.log(token)\r\nexport default (navigate = null) => {\r\n  const customAxios = axios.create({\r\n    baseURL: \"http://localhost:8000/\",\r\n    headers: {\r\n      authorization: `bearer ${token}`,\r\n    },\r\n  });\r\n\r\nfunction getTokenFromLocalStorage() {\r\n  const token = localStorage.getItem(\"accessToken\");\r\n  console.log(\"the token from local storage is -> \" + token);\r\n  if (token === null) {\r\n    return undefined;\r\n  }\r\n  return token;\r\n}\r\n\r\n\r\n  customAxios.interceptors.response.use(\r\n    (response) =>\r\n      new Promise((resolve, reject) => {\r\n        resolve(response);\r\n      }),\r\n    (error) => {\r\n     if (!error.response) { \r\n       return new Promise((resolve, reject) => {\r\n         reject(error);\r\n       });\r\n     }\r\n      if (error.response.status == 401) {\r\n        console.log(\"your are not logedin\");\r\n        // localStorage.removeItem(\"accessToken\");\r\n        // localStorage.removeItem(\"user\");\r\n        // if(navigate){\r\n        //   navigate(\"/authentication/login-unguarded\");\r\n        // }else{\r\n        //   window.location.href = \"/authentication/login-unguarded\";\r\n        // }\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n  return customAxios\r\n};\r\n\r\n","import PropTypes from 'prop-types';\nimport { experimentalStyled } from '@material-ui/core/styles';\n\nconst LabelRoot = experimentalStyled('span')((({ theme, styleProps }) => {\n  const backgroundColor = theme.palette[styleProps.color].main;\n  const color = theme.palette[styleProps.color].contrastText;\n\n  return {\n    alignItems: 'center',\n    backgroundColor,\n    borderRadius: theme.shape.borderRadius,\n    color,\n    cursor: 'default',\n    display: 'inline-flex',\n    flexGrow: 0,\n    flexShrink: 0,\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(11),\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    paddingBottom: theme.spacing(0.5),\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    paddingTop: theme.spacing(0.5),\n    textTransform: 'uppercase',\n    whiteSpace: 'nowrap'\n  };\n}));\n\nconst Label = (props) => {\n  const { color = 'success', children, ...other } = props;\n\n  const styleProps = { color };\n\n  return (\n    <LabelRoot\n      styleProps={styleProps}\n      {...other}\n    >\n      {children}\n    </LabelRoot>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.oneOf([\n   \"primary\",\n    'error',\n    'warning',\n    'success'\n  ])\n};\n\nexport default Label;\n","import axios from \"axios\";\r\nimport {customAxios} from \"./apis/Axios\";\r\nimport userService from \"./apis/userService\";\r\n\r\nexport const Section = async (endpoint) => {\r\n  const responce = await customAxios.getCall(`${endpoint}`);\r\n  const section = await responce;\r\n  return section;\r\n};\r\n\r\n// export const getAPI = async (endpoint, params={}) => {\r\n//   const responce = await axios.get(`${URL}${endpoint}`, {params:{...params}});\r\n//   // console.log(b.data)\r\n//   const section = await responce.data;\r\n//   return section;\r\n// };\r\n\r\n// export const postAPI = async (endpoint, data= {}) => {\r\n//   const responce = await axios.post(`${URL}${endpoint}`, {...data});\r\n//   // console.log(b.data)\r\n//   const section = await responce.data;\r\n//   return section;\r\n// };\r\n"],"sourceRoot":""}