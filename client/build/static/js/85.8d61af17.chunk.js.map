{"version":3,"sources":["icons/ArrowsExpand.js","components/dashboard/mail/MailComposer.js","components/dashboard/mail/MailReply.js","icons/ChevronLeft.js","components/dashboard/mail/MailToolbar.js","components/dashboard/mail/MailContent.js","components/dashboard/mail/MailItem.js","icons/ExclamationCircle.js","icons/Inbox.js","components/dashboard/mail/MailLabel.js","icons/Refresh.js","components/dashboard/mail/MailListToolbar.js","components/dashboard/mail/MailList.js","components/dashboard/mail/MailSidebar.js","pages/dashboard/Mail.js","icons/Trash.js","icons/DotsHorizontal.js","icons/ArrowLeft.js","components/QuillEditor.js"],"names":["ArrowsExpand","createSvgIcon","xmlns","viewBox","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","MailComposer","dispatch","useDispatch","isComposeOpen","useSelector","state","mail","useState","isFullScreen","setIsFullScreen","messageBody","setMessageBody","Portal","Backdrop","open","Paper","sx","bottom","display","flexDirection","margin","maxHeight","theme","spacing","maxWidth","minHeight","outline","position","right","width","zIndex","height","elevation","Box","alignItems","px","py","Typography","variant","color","flexGrow","IconButton","onClick","fontSize","closeCompose","X","Input","disableUnderline","fullWidth","placeholder","p","borderBottom","borderColor","QuillEditor","onChange","value","border","Divider","justifyContent","Button","Tooltip","title","size","ml","MailReplyTextarea","experimentalStyled","TextareaAutosize","backgroundColor","palette","background","paper","text","primary","fontFamily","typography","body1","lineHeight","resize","secondary","MailReply","props","user","useAuth","fileInputRef","useRef","setValue","handleAttach","current","click","Avatar","src","avatar","minRows","event","target","mt","mr","hidden","ref","type","ChevronLeft","fillRule","clipRule","MailToolbar","navigate","useNavigate","useParams","systemLabel","customLabel","flexShrink","ArrowLeft","md","xs","TextField","InputProps","startAdornment","InputAdornment","Search","ChevronRight","MarkdownWrapper","marginBottom","MailContent","emailId","email","emails","byId","useEffect","getEmail","overflowY","from","getInitials","name","Link","to","map","person","noWrap","format","createdAt","sm","Trash","DotsHorizontal","subject","source","message","Label","borderRadius","common","white","pxToRem","marginLeft","paddingBottom","paddingLeft","paddingRight","paddingTop","MailItem","onDeselect","onSelect","selected","other","params","labels","baseUrl","getTo","id","divider","isUnread","content","left","top","fontWeight","Checkbox","checked","isStarred","amber","isImportant","component","RouterLink","cursor","minWidth","textDecoration","flexBasis","overflow","textOverflow","whiteSpace","marginRight","labelIds","length","mx","labelId","label","find","_label","ExclamationCircle","Inbox","systemLabelIcons","all","MailIcon","inbox","InboxIcon","trash","TrashIcon","drafts","DraftsIcon","spam","sent","SendIcon","starred","StarIcon","important","LabelImportantIcon","MailLabel","Icon","LabelIcon","getIcon","getColor","displayUnreadCount","Boolean","unreadCount","ListItem","disableGutters","ButtonBase","activeClassName","borderBottomRightRadius","borderTopRightRadius","style","Refresh","MailListToolbar","onDeselectAll","onSelectAll","selectedEmails","selectedAllMails","selectedSomeMails","openSidebar","Menu","indeterminate","MailList","console","log","setSelectedEmails","getEmails","allIds","prevSelectedMails","filter","handleDeselectOneEmail","includes","handleSelectOneEmail","MailSidebarDesktop","Drawer","MailSidebarMobile","MailSidebar","containerRef","location","useLocation","isSidebarOpen","mdUp","useMediaQuery","breakpoints","up","closeSidebar","pathname","openCompose","pr","List","ModalProps","container","onClose","Mail","rootRef","gtm","push","getLabels","QuillEditorRoot","shape","borderStyle","borderLeft","borderRight","borderTop","main","boxShadow","shadows","padding","fontStyle"],"mappings":"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","file":"static/js/85.8d61af17.chunk.js","sourcesContent":["import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst ArrowsExpand = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      stroke=\"#374151\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n      d=\"M3 8V4m0 0h4M3 4l4 4m8 0V4m0 0h-4m4 0l-4 4m-8 4v4m0 0h4m-4 0l4-4m8 4l-4-4m4 4v-4m0 4h-4\"\n    />\n  </svg>, 'ArrowsExpand'\n);\n\nexport default ArrowsExpand;\n","import { useState } from 'react';\nimport {\n  Backdrop,\n  Box,\n  Button,\n  Divider,\n  IconButton,\n  Input,\n  Paper,\n  Portal,\n  Tooltip,\n  Typography\n} from '@material-ui/core';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport MinimizeIcon from '@material-ui/icons/Minimize';\nimport ArrowsExpandIcon from '../../../icons/ArrowsExpand';\nimport XIcon from '../../../icons/X';\nimport { closeCompose } from '../../../slices/mail';\nimport { useDispatch, useSelector } from '../../../store';\nimport QuillEditor from '../../QuillEditor';\n\nconst MailComposer = () => {\n  const dispatch = useDispatch();\n  const { isComposeOpen } = useSelector((state) => state.mail);\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  const [messageBody, setMessageBody] = useState('');\n\n  const handleChange = (value) => {\n    setMessageBody(value);\n  };\n\n  const handleExitFullScreen = () => {\n    setIsFullScreen(false);\n  };\n\n  const handleEnterFullScreen = () => {\n    setIsFullScreen(true);\n  };\n\n  const handleClose = () => {\n    dispatch(closeCompose());\n  };\n\n  if (!isComposeOpen) {\n    return null;\n  }\n\n  return (\n    <Portal>\n      <Backdrop open={isFullScreen} />\n      <Paper\n        sx={{\n          bottom: 0,\n          display: 'flex',\n          flexDirection: 'column',\n          margin: 3,\n          maxHeight: (theme) => `calc(100% - ${theme.spacing(6)})`,\n          maxWidth: (theme) => `calc(100% - ${theme.spacing(6)})`,\n          minHeight: 500,\n          outline: 'none',\n          position: 'fixed',\n          right: 0,\n          width: 600,\n          zIndex: 2000,\n          ...(isFullScreen && {\n            height: '100%',\n            width: '100%'\n          })\n        }}\n        elevation={12}\n      >\n        <Box\n          sx={{\n            alignItems: 'center',\n            display: 'flex',\n            px: 2,\n            py: 1\n          }}\n        >\n          <Typography\n            variant=\"h6\"\n            color=\"textPrimary\"\n          >\n            New Message\n          </Typography>\n          <Box sx={{ flexGrow: 1 }} />\n          {isFullScreen\n            ? (\n              <IconButton onClick={handleExitFullScreen}>\n                <MinimizeIcon fontSize=\"small\" />\n              </IconButton>\n            )\n            : (\n              <IconButton onClick={handleEnterFullScreen}>\n                <ArrowsExpandIcon fontSize=\"small\" />\n              </IconButton>\n            )}\n          <IconButton onClick={handleClose}>\n            <XIcon fontSize=\"small\" />\n          </IconButton>\n        </Box>\n        <Input\n          disableUnderline\n          fullWidth\n          placeholder=\"To\"\n          sx={{\n            p: 1,\n            borderBottom: 1,\n            borderColor: 'divider'\n          }}\n        />\n        <Input\n          disableUnderline\n          fullWidth\n          placeholder=\"Subject\"\n          sx={{\n            p: 1,\n            borderBottom: 1,\n            borderColor: 'divider'\n          }}\n        />\n        <QuillEditor\n          onChange={handleChange}\n          placeholder=\"Leave a message\"\n          sx={{\n            border: 'none',\n            flexGrow: 1\n          }}\n          value={messageBody}\n        />\n        <Divider />\n        <Box\n          sx={{\n            alignItems: 'center',\n            display: 'flex',\n            justifyContent: 'flex-end',\n            p: 2\n          }}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Send\n          </Button>\n          <Tooltip title=\"Attach image\">\n            <IconButton\n              size=\"small\"\n              sx={{ ml: 1 }}\n            >\n              <AddPhotoIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Attach file\">\n            <IconButton\n              size=\"small\"\n              sx={{ ml: 1 }}\n            >\n              <AttachFileIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </Paper>\n    </Portal>\n  );\n};\n\nexport default MailComposer;\n","import { useRef, useState } from 'react';\nimport {\n  Avatar,\n  Box,\n  Button,\n  IconButton,\n  Paper,\n  TextareaAutosize,\n  Tooltip\n} from '@material-ui/core';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport useAuth from '../../../hooks/useAuth';\n\nconst MailReplyTextarea = experimentalStyled(TextareaAutosize)(({ theme }) => ({\n  backgroundColor: theme.palette.background.paper,\n  border: 'none',\n  color: theme.palette.text.primary,\n  fontFamily: theme.typography.body1.fontFamily,\n  fontSize: theme.typography.body1.fontSize,\n  lineHeight: theme.typography.body1.lineHeight,\n  outline: 'none',\n  resize: 'none',\n  width: '100%',\n  '&::placeholder': {\n    color: theme.palette.text.secondary\n  }\n}));\n\nconst MailReply = (props) => {\n  const { user } = useAuth();\n  const fileInputRef = useRef(null);\n  const [value, setValue] = useState('');\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  const handleAttach = () => {\n    fileInputRef.current.click();\n  };\n\n  return (\n    <Box\n      sx={{\n        alignItems: 'center',\n        display: 'flex',\n        p: 3\n      }}\n      {...props}\n    >\n      <Avatar src={user.avatar} />\n      <Paper\n        sx={{\n          flexGrow: 1,\n          ml: 2,\n          p: 2\n        }}\n        variant=\"outlined\"\n      >\n        <MailReplyTextarea\n          minRows={3}\n          onChange={handleChange}\n          placeholder=\"Leave a message\"\n          value={value}\n        />\n        <Box\n          sx={{\n            alignItems: 'center',\n            display: 'flex',\n            justifyContent: 'flex-end',\n            mt: 2\n          }}\n        >\n          <Button\n            color=\"primary\"\n            sx={{ mr: 1 }}\n            variant=\"contained\"\n          >\n            Send\n          </Button>\n          <Tooltip title=\"Attach image\">\n            <IconButton\n              onClick={handleAttach}\n              size=\"small\"\n              sx={{ mr: 1 }}\n            >\n              <AddPhotoIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Attach file\">\n            <IconButton\n              onClick={handleAttach}\n              size=\"small\"\n              sx={{ mr: 1 }}\n            >\n              <AttachFileIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </Paper>\n      <input\n        hidden\n        ref={fileInputRef}\n        type=\"file\"\n      />\n    </Box>\n  );\n};\n\nexport default MailReply;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst ChevronLeft = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'ChevronLeft'\n);\n\nexport default ChevronLeft;\n","import { useNavigate, useParams } from 'react-router-dom';\nimport { Box, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\nimport ArrowLeftIcon from '../../../icons/ArrowLeft';\nimport SearchIcon from '../../../icons/Search';\nimport ChevronLeftIcon from '../../../icons/ChevronLeft';\nimport ChevronRightIcon from '../../../icons/ChevronRight';\n\nconst MailToolbar = (props) => {\n  const navigate = useNavigate();\n  const { systemLabel, customLabel } = useParams();\n\n  const handleBack = () => {\n    if (systemLabel) {\n      return navigate(`/dashboard/mail/${systemLabel}`);\n    }\n\n    if (customLabel) {\n      return navigate(`/dashboard/mail/label/${customLabel}`);\n    }\n\n    return navigate('/dashboard/mail/inbox');\n  };\n\n  return (\n    <Box\n      sx={{\n        alignItems: 'center',\n        backgroundColor: 'background.paper',\n        display: 'flex',\n        flexShrink: 0,\n        height: 68,\n        p: 2\n      }}\n      {...props}\n    >\n      <Tooltip title=\"Back\">\n        <IconButton onClick={handleBack}>\n          <ArrowLeftIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Box sx={{ flexGrow: 1 }} />\n      <Box\n        sx={{\n          display: {\n            md: 'block',\n            xs: 'none'\n          },\n          width: 200\n        }}\n      >\n        <TextField\n          fullWidth\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchIcon fontSize=\"small\" />\n              </InputAdornment>\n            )\n          }}\n          placeholder=\"Search message\"\n          size=\"small\"\n          variant=\"outlined\"\n        />\n      </Box>\n      <Tooltip title=\"Previous email\">\n        <IconButton>\n          <ChevronLeftIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title=\"Next email\">\n        <IconButton>\n          <ChevronRightIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n    </Box>\n  );\n};\n\nexport default MailToolbar;\n","import { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport Markdown from 'react-markdown/with-html';\nimport { Avatar, Box, Divider, IconButton, Link, Tooltip, Typography } from '@material-ui/core';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport ReplyAllIcon from '@material-ui/icons/ReplyAll';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DotsHorizontalIcon from '../../../icons/DotsHorizontal';\nimport TrashIcon from '../../../icons/Trash';\nimport { getEmail } from '../../../slices/mail';\nimport { useDispatch, useSelector } from '../../../store';\nimport getInitials from '../../../utils/getInitials';\nimport MailReply from './MailReply';\nimport MailToolbar from './MailToolbar';\n\nconst MarkdownWrapper = experimentalStyled('div')(({ theme }) => ({\n  color: theme.palette.text.secondary,\n  fontFamily: theme.typography.body1.fontFamily,\n  '& > p': {\n    fontSize: theme.typography.body1.fontSize,\n    lineHeight: theme.typography.body1.lineHeight,\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst MailContent = () => {\n  const dispatch = useDispatch();\n  const { emailId } = useParams();\n  const email = useSelector((state) => state.mail.emails.byId[emailId]);\n\n  useEffect(() => {\n    dispatch(getEmail(emailId));\n  }, [emailId]);\n\n  if (!email) {\n    return null;\n  }\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.paper',\n        display: 'flex',\n        flexDirection: 'column',\n        flexGrow: 1,\n        height: '100%',\n        overflowY: 'auto'\n      }}\n    >\n      <MailToolbar />\n      <Divider />\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          flexShrink: 0,\n          justifyContent: 'space-between',\n          p: 3\n        }}\n      >\n        <Box\n          sx={{\n            alignItems: 'center',\n            display: 'flex'\n          }}\n        >\n          <Avatar\n            src={email.from.avatar}\n            sx={{\n              height: 48,\n              width: 48\n            }}\n          >\n            {getInitials(email.from.name)}\n          </Avatar>\n          <Box sx={{ ml: 2 }}>\n            <Typography\n              color=\"textPrimary\"\n              display=\"inline\"\n              variant=\"subtitle2\"\n            >\n              {email.from.name}\n            </Typography>\n            {' '}\n            <Link\n              color=\"textSecondary\"\n              display=\"inline\"\n              variant=\"body2\"\n            >\n              {email.from.email}\n            </Link>\n            <Typography\n              variant=\"subtitle2\"\n              color=\"textSecondary\"\n            >\n              To:\n              {' '}\n              {email.to.map((person) => (\n                <Link\n                  color=\"inherit\"\n                  key={person.email}\n                >\n                  {person.email}\n                </Link>\n              ))}\n            </Typography>\n            <Typography\n              color=\"textSecondary\"\n              noWrap\n              variant=\"caption\"\n            >\n              {format(email.createdAt, 'MMMM Do yyyy, h:mm:ss a')}\n            </Typography>\n          </Box>\n        </Box>\n        <Box sx={{ flexGrow: 1 }} />\n        <Box\n          sx={{\n            alignItems: 'center',\n            display: {\n              xs: 'none',\n              sm: 'flex'\n            }\n          }}\n        >\n          <Tooltip title=\"Reply\">\n            <IconButton>\n              <ReplyIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Reply all\">\n            <IconButton>\n              <ReplyAllIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Delete\">\n            <IconButton>\n              <TrashIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </Box>\n        <Tooltip title=\"More options\">\n          <IconButton>\n            <DotsHorizontalIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      </Box>\n      <Divider />\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          flexGrow: 1,\n          px: 3,\n          py: 6\n        }}\n      >\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          {email.subject}\n        </Typography>\n        <Box sx={{ mt: 2 }}>\n          <MarkdownWrapper>\n            <Markdown source={email.message} />\n          </MarkdownWrapper>\n        </Box>\n      </Box>\n      <Divider />\n      <MailReply />\n    </Box>\n  );\n};\n\nexport default MailContent;\n","import { Link as RouterLink, useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { format } from 'date-fns';\nimport { Avatar, Box, Checkbox, IconButton, Tooltip, Typography } from '@material-ui/core';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport amber from '@material-ui/core/colors/amber';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\nimport { useSelector } from '../../../store';\nimport getInitials from '../../../utils/getInitials';\n\nconst Label = experimentalStyled('span')(({ theme }) => ({\n  borderRadius: 2,\n  color: theme.palette.common.white,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(12),\n  marginLeft: theme.spacing(1),\n  paddingBottom: 2,\n  paddingLeft: 4,\n  paddingRight: 4,\n  paddingTop: 2\n}));\n\nconst getTo = (params, emailId) => {\n  const { systemLabel, customLabel } = params;\n  const baseUrl = '/dashboard/mail';\n\n  if (systemLabel) {\n    return `${baseUrl}/${systemLabel}/${emailId}`;\n  }\n\n  if (customLabel) {\n    return `${baseUrl}/label/${customLabel}/${emailId}`;\n  }\n\n  return baseUrl;\n};\n\nconst MailItem = (props) => {\n  const { email, onDeselect, onSelect, selected, ...other } = props;\n  const params = useParams();\n  const { labels } = useSelector((state) => state.mail);\n\n  const handleCheckboxChange = (event) => {\n    const { checked } = event.target;\n\n    if (checked && onSelect) {\n      onSelect();\n    }\n\n    if (!checked && onDeselect) {\n      onDeselect();\n    }\n  };\n\n  const handleStarToggle = () => {\n    // dispatch action\n  };\n\n  const handleImportantToggle = () => {\n    // dispatch action\n  };\n\n  const to = getTo(params, email.id);\n\n  return (\n    <Box\n      sx={{\n        alignItems: 'center',\n        backgroundColor: 'background.paper',\n        borderBottom: (theme) => ` 1px solid ${theme.palette.divider}`,\n        display: 'flex',\n        p: 2,\n        ...(!email.isUnread && {\n          position: 'relative',\n          '&:before': {\n            backgroundColor: 'error.main',\n            content: '\" \"',\n            height: '100%',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 4\n          },\n          '& $name, & $subject': {\n            fontWeight: 600\n          }\n        }),\n        ...(selected && {\n          backgroundColor: 'action.selected'\n        }),\n        '&:hover': {\n          backgroundColor: 'action.hover'\n        }\n      }}\n      {...other}\n    >\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: {\n            md: 'flex',\n            xs: 'none'\n          },\n          mr: 1\n        }}\n      >\n        <Checkbox\n          checked={selected}\n          color=\"primary\"\n          onChange={handleCheckboxChange}\n        />\n        <Tooltip title=\"Starred\">\n          <IconButton onClick={handleStarToggle}>\n            {email.isStarred\n              ? (\n                <StarIcon\n                  fontSize=\"small\"\n                  sx={{ color: amber[400] }}\n                />\n              )\n              : (\n                <StarBorderIcon fontSize=\"small\" />\n              )}\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Important\">\n          <IconButton onClick={handleImportantToggle}>\n            {email.isImportant\n              ? (\n                <LabelImportantIcon\n                  fontSize=\"small\"\n                  sx={{ color: amber[400] }}\n                />\n              )\n              : <LabelImportantIcon fontSize=\"small\" />}\n          </IconButton>\n        </Tooltip>\n      </Box>\n      <Box\n        component={RouterLink}\n        to={to}\n        sx={{\n          cursor: 'pointer',\n          display: 'flex',\n          flexGrow: 1,\n          minWidth: '1px',\n          textDecoration: 'none'\n        }}\n      >\n        <Avatar src={email.from.avatar}>\n          {getInitials(email.from.name)}\n        </Avatar>\n        <Box\n          sx={{\n            alignItems: {\n              md: 'center'\n            },\n            display: {\n              md: 'flex'\n            },\n            flexGrow: {\n              md: 1\n            },\n            minWidth: '1px',\n            ml: 1\n          }}\n        >\n          <Typography\n            color=\"textPrimary\"\n            sx={{\n              flexBasis: {\n                md: 180\n              },\n              minWidth: {\n                md: 180\n              },\n              ...(!email.isUnread && {\n                fontWeight: 600\n              })\n            }}\n            variant=\"body2\"\n          >\n            {email.from.name}\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            sx={{\n              maxWidth: 400,\n              mr: 2,\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              whiteSpace: 'nowrap',\n              ...(!email.isUnread && {\n                fontWeight: 600\n              })\n            }}\n            variant=\"body2\"\n          >\n            {email.subject}\n          </Typography>\n          <Box\n            sx={{\n              display: {\n                xs: 'none',\n                sm: 'block'\n              }\n            }}\n          >\n            <Typography\n              color=\"textSecondary\"\n              sx={{\n                flexGrow: 1,\n                marginRight: 'auto',\n                maxWidth: 800,\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n                whiteSpace: 'nowrap'\n              }}\n              variant=\"body2\"\n            >\n              -\n              {email.message}\n            </Typography>\n            {email.labelIds.length > 0 && (\n              <Box\n                sx={{\n                  display: 'flex',\n                  mx: 2\n                }}\n              >\n                {email.labelIds.map((labelId) => {\n                  const label = labels.find((_label) => _label.id === labelId);\n\n                  if (!label) {\n                    return null;\n                  }\n\n                  return (\n                    <Label\n                      key={label.id}\n                      sx={{ backgroundColor: label.color }}\n                    >\n                      {label.name}\n                    </Label>\n                  );\n                })}\n              </Box>\n            )}\n          </Box>\n          <Typography\n            color=\"textSecondary\"\n            noWrap\n            variant=\"caption\"\n          >\n            {format(email.createdAt, 'dd MMM yyyy')}\n          </Typography>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nMailItem.propTypes = {\n  email: PropTypes.object.isRequired,\n  onDeselect: PropTypes.func,\n  onSelect: PropTypes.func,\n  selected: PropTypes.bool.isRequired\n};\n\nexport default MailItem;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst ExclamationCircle = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'ExclamationCircle'\n);\n\nexport default ExclamationCircle;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Inbox = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M5 3a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2V5a2 2 0 00-2-2H5zm0 2h10v7h-2l-1 2H8l-1-2H5V5z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Inbox'\n);\n\nexport default Inbox;\n","import { NavLink as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Box, ButtonBase, ListItem, Typography } from '@material-ui/core';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport LabelIcon from '@material-ui/icons/Label';\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\nimport SendIcon from '@material-ui/icons/Send';\nimport StarIcon from '@material-ui/icons/Star';\nimport ExclamationCircle from '../../../icons/ExclamationCircle';\nimport InboxIcon from '../../../icons/Inbox';\nimport MailIcon from '../../../icons/Mail';\nimport TrashIcon from '../../../icons/Trash';\n\nconst systemLabelIcons = {\n  all: MailIcon,\n  inbox: InboxIcon,\n  trash: TrashIcon,\n  drafts: DraftsIcon,\n  spam: ExclamationCircle,\n  sent: SendIcon,\n  starred: StarIcon,\n  important: LabelImportantIcon\n};\n\nconst getIcon = (label) => {\n  if (label.type === 'system_label') {\n    return systemLabelIcons[label.id];\n  }\n\n  return LabelIcon;\n};\n\nconst getTo = (label) => {\n  const baseUrl = '/dashboard/mail';\n\n  if (label.type === 'system_label') {\n    return `${baseUrl}/${label.id}`;\n  }\n\n  if (label.type === 'custom_label') {\n    return `${baseUrl}/label/${label.name}`;\n  }\n\n  return baseUrl;\n};\n\nconst getColor = (label) => {\n  if (label.type === 'custom_label') {\n    return label.color;\n  }\n\n  return null;\n};\n\nconst MailLabel = (props) => {\n  const { label, ...other } = props;\n\n  const Icon = getIcon(label);\n  const to = getTo(label);\n  const color = getColor(label);\n  const displayUnreadCount = Boolean(label.unreadCount && label.unreadCount > 0);\n\n  return (\n    <ListItem\n      disableGutters\n      sx={{ py: 1 }}\n      {...other}\n    >\n      <ButtonBase\n        activeClassName=\"exactMatch\"\n        component={RouterLink}\n        sx={{\n          borderBottomRightRadius: '18px',\n          borderTopRightRadius: '18px',\n          color: 'text.secondary',\n          flexGrow: 1,\n          fontWeight: 'fontWeightRegular',\n          height: '36px',\n          paddingLeft: '32px',\n          paddingRight: '18px',\n          '&:hover': {\n            backgroundColor: 'action.hover'\n          },\n          '&.exactMatch': {\n            backgroundColor: 'action.selected',\n            fontWeight: 'fontWeightMedium'\n          }\n        }}\n        to={to}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            mr: 1\n          }}\n        >\n          <Icon\n            color=\"inherit\"\n            style={{ color }}\n          />\n        </Box>\n        <Typography\n          sx={{\n            flexGrow: 1,\n            fontWeight: 'inherit'\n          }}\n          variant=\"body2\"\n        >\n          {label.name}\n        </Typography>\n        {displayUnreadCount && (\n          <Typography\n            color=\"inherit\"\n            variant=\"caption\"\n          >\n            {label.unreadCount}\n          </Typography>\n        )}\n      </ButtonBase>\n    </ListItem>\n  );\n};\n\nMailLabel.propTypes = {\n  label: PropTypes.object.isRequired\n};\n\nexport default MailLabel;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Refresh = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Refresh'\n);\n\nexport default Refresh;\n","import PropTypes from 'prop-types';\nimport {\n  Box,\n  Checkbox,\n  IconButton,\n  InputAdornment,\n  TextField,\n  Tooltip,\n  Typography\n} from '@material-ui/core';\nimport ChevronLeftIcon from '../../../icons/ChevronLeft';\nimport ChevronRightIcon from '../../../icons/ChevronRight';\nimport DotsHorizontalIcon from '../../../icons/DotsHorizontal';\nimport MenuIcon from '../../../icons/Menu';\nimport RefreshIcon from '../../../icons/Refresh';\nimport SearchIcon from '../../../icons/Search';\nimport { openSidebar } from '../../../slices/mail';\nimport { useDispatch } from '../../../store';\n\nconst MailListToolbar = (props) => {\n  const { emails, onDeselectAll, onSelectAll, selectedEmails, ...other } = props;\n  const dispatch = useDispatch();\n\n  const handleOpenSidebar = () => {\n    dispatch(openSidebar());\n  };\n\n  const handleCheckboxChange = (event) => {\n    const { checked } = event.target;\n\n    if (checked && onSelectAll) {\n      onSelectAll();\n    }\n\n    if (!checked && onDeselectAll) {\n      onDeselectAll();\n    }\n  };\n\n  const selectedAllMails = selectedEmails === emails && emails > 0;\n  const selectedSomeMails = selectedEmails > 0 && selectedEmails < emails;\n\n  return (\n    <Box\n      sx={{\n        alignItems: 'center',\n        backgroundColor: 'background.paper',\n        display: 'flex',\n        height: '68px',\n        p: 2\n      }}\n      {...other}\n    >\n      <IconButton\n        onClick={handleOpenSidebar}\n        sx={{\n          display: {\n            md: 'none'\n          }\n        }}\n      >\n        <MenuIcon fontSize=\"small\" />\n      </IconButton>\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: {\n            xs: 'none',\n            md: 'flex'\n          }\n        }}\n      >\n        <Checkbox\n          checked={selectedAllMails}\n          color=\"primary\"\n          indeterminate={selectedSomeMails}\n          onChange={handleCheckboxChange}\n        />\n        <Typography\n          color=\"textPrimary\"\n          variant=\"subtitle2\"\n        >\n          Select all\n        </Typography>\n      </Box>\n      <Box sx={{ flexGrow: 1 }} />\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: {\n            sm: 'flex',\n            xs: 'none'\n          }\n        }}\n      >\n        <Box sx={{ width: 200 }}>\n          <TextField\n            fullWidth\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon fontSize=\"small\" />\n                </InputAdornment>\n              )\n            }}\n            placeholder=\"Search email\"\n            size=\"small\"\n            variant=\"outlined\"\n          />\n        </Box>\n        <Tooltip title=\"Refresh\">\n          <IconButton>\n            <RefreshIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"More options\">\n          <IconButton>\n            <DotsHorizontalIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Next page\">\n          <IconButton>\n            <ChevronLeftIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n        {emails > 0 && (\n          <>\n            <Typography\n              color=\"textSecondary\"\n              noWrap\n              variant=\"body2\"\n            >\n              1 -\n              {' '}\n              {emails}\n              {' '}\n              of\n              {' '}\n              {emails}\n            </Typography>\n            <Tooltip title=\"Previous page\">\n              <IconButton>\n                <ChevronRightIcon fontSize=\"small\" />\n              </IconButton>\n            </Tooltip>\n          </>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nMailListToolbar.propTypes = {\n  emails: PropTypes.number.isRequired,\n  onDeselectAll: PropTypes.func,\n  onSelectAll: PropTypes.func,\n  selectedEmails: PropTypes.number.isRequired\n};\n\nexport default MailListToolbar;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Box, Divider } from '@material-ui/core';\nimport { getEmails } from '../../../slices/mail';\nimport { useDispatch, useSelector } from '../../../store';\nimport MailItem from './MailItem';\nimport MailListToolbar from './MailListToolbar';\n\nconst MailList = (props) => {\n  const dispatch = useDispatch();\n  const { customLabel, systemLabel } = useParams();\n  const { emails } = useSelector((state) => state.mail);\n  console.log(\"email\",emails)\n  const [selectedEmails, setSelectedEmails] = useState([]);\n\n  useEffect(() => {\n    dispatch(getEmails({ customLabel, systemLabel }));\n  }, [customLabel, systemLabel]);\n\n  const handleSelectAllEmails = () => {\n    setSelectedEmails(emails.allIds.map(((emailId) => emailId)));\n  };\n\n  const handleDeselectAllEmails = () => {\n    setSelectedEmails([]);\n  };\n\n  const handleSelectOneEmail = (emailId) => {\n    setSelectedEmails((prevSelectedMails) => {\n      if (!prevSelectedMails.includes(emailId)) {\n        return [...prevSelectedMails, emailId];\n      }\n\n      return prevSelectedMails;\n    });\n  };\n\n  const handleDeselectOneEmail = (emailId) => {\n    setSelectedEmails((prevSelectedMails) => prevSelectedMails.filter((id) => id !== emailId));\n  };\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        flexGrow: 1,\n        overflow: 'hidden'\n      }}\n      {...props}\n    >\n      <MailListToolbar\n        emails={emails.allIds.length}\n        onDeselectAll={handleDeselectAllEmails}\n        onSelectAll={handleSelectAllEmails}\n        selectedEmails={selectedEmails.length}\n      />\n      <Divider />\n      {emails.allIds.map((emailId) => {\n        console.log(\"ID\",emailId)\n        return(\n        <MailItem\n          email={emails.byId[emailId]}\n          key={emailId}\n          onDeselect={() => handleDeselectOneEmail(emailId)}\n          onSelect={() => handleSelectOneEmail(emailId)}\n          selected={selectedEmails.includes(emailId)}\n        />\n      )})}\n    </Box>\n  );\n};\n\nexport default MailList;\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { Box, Button, Divider, Drawer, List } from '@material-ui/core';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useDispatch, useSelector } from '../../../store';\nimport { closeSidebar, openCompose } from '../../../slices/mail';\nimport MailLabel from './MailLabel';\n\nconst MailSidebarDesktop = experimentalStyled(Drawer)({\n  width: 280,\n  '& .MuiDrawer-paper': {\n    position: 'relative'\n  }\n});\n\nconst MailSidebarMobile = experimentalStyled(Drawer)({\n  '& .MuiBackdrop-root': {\n    position: 'absolute'\n  },\n  '& .MuiDrawer-paper': {\n    position: 'relative',\n    width: 280\n  }\n});\n\nconst MailSidebar = ({ containerRef }) => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const { labels, isSidebarOpen } = useSelector((state) => state.mail);\n  const mdUp = useMediaQuery((theme) => theme.breakpoints.up('md'));\n\n  useEffect(() => {\n    if (isSidebarOpen) {\n      dispatch(closeSidebar());\n    }\n  }, [location.pathname]);\n\n  const handleCloseSidebar = () => {\n    dispatch(closeSidebar());\n  };\n\n  const handleComposeClick = () => {\n    dispatch(openCompose());\n  };\n\n  const content = (\n    <div>\n      <Box\n        sx={{\n          px: 3,\n          py: 2\n        }}\n      >\n        <Button\n          color=\"primary\"\n          fullWidth\n          onClick={handleComposeClick}\n          variant=\"contained\"\n        >\n          Compose\n        </Button>\n      </Box>\n      <Divider />\n      <Box\n        sx={{\n          py: 2,\n          pr: 2\n        }}\n      >\n        <List>\n          {labels.map((label) => (\n            <MailLabel\n              key={label.id}\n              label={label}\n            />\n          ))}\n        </List>\n      </Box>\n    </div>\n  );\n\n  if (mdUp) {\n    return (\n      <MailSidebarDesktop variant=\"permanent\">\n        {content}\n      </MailSidebarDesktop>\n    );\n  }\n\n  return (\n    <MailSidebarMobile\n      ModalProps={{ container: () => containerRef.current }}\n      onClose={handleCloseSidebar}\n      open={isSidebarOpen}\n      variant=\"temporary\"\n    >\n      {content}\n    </MailSidebarMobile>\n  );\n};\n\nMailSidebar.propTypes = {\n  containerRef: PropTypes.any.isRequired\n};\n\nexport default MailSidebar;\n","import { useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport { Box } from '@material-ui/core';\nimport { MailComposer, MailDetails, MailList, MailSidebar } from '../../components/dashboard/mail';\nimport gtm from '../../lib/gtm';\nimport { getLabels } from '../../slices/mail';\nimport { useDispatch } from '../../store';\n\nconst Mail = () => {\n  const dispatch = useDispatch();\n  const { emailId } = useParams();\n  const rootRef = useRef(null);\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  useEffect(() => {\n    dispatch(getLabels());\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Dashboard: Mail | Material Kit Pro</title>\n      </Helmet>\n      <Box\n        ref={rootRef}\n        sx={{\n          display: 'flex',\n          height: '100%',\n          overflow: 'hidden',\n          position: 'relative'\n        }}\n      >\n        <MailSidebar containerRef={rootRef} />\n        {emailId ? <MailDetails /> : <MailList />}\n        <MailComposer />\n      </Box>\n    </>\n  );\n};\n\nexport default Mail;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Trash = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Trash'\n);\n\nexport default Trash;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst DotsHorizontal = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z\" />\n  </svg>, 'DotsHorizontal'\n);\n\nexport default DotsHorizontal;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst ArrowLeft = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'ArrowLeft'\n);\n\nexport default ArrowLeft;\n","import Quill from 'react-quill';\nimport { experimentalStyled } from '@material-ui/core/styles';\n\nconst QuillEditorRoot = experimentalStyled((props) => (\n  <Quill {...props} />\n))(({ theme }) => ({\n  border: 1,\n  borderColor: theme.palette.divider,\n  borderRadius: theme.shape.borderRadius,\n  borderStyle: 'solid',\n  display: 'flex',\n  flexDirection: 'column',\n  '& .ql-snow.ql-toolbar': {\n    borderColor: theme.palette.divider,\n    borderLeft: 'none',\n    borderRight: 'none',\n    borderTop: 'none',\n    '& .ql-picker-label:hover': {\n      color: theme.palette.primary.main\n    },\n    '& .ql-picker-label.ql-active': {\n      color: theme.palette.primary.main\n    },\n    '& .ql-picker-item:hover': {\n      color: theme.palette.primary.main\n    },\n    '& .ql-picker-item.ql-selected': {\n      color: theme.palette.primary.main\n    },\n    '& button:hover': {\n      color: theme.palette.primary.main,\n      '& .ql-stroke': {\n        stroke: theme.palette.primary.main\n      }\n    },\n    '& button:focus': {\n      color: theme.palette.primary.main,\n      '& .ql-stroke': {\n        stroke: theme.palette.primary.main\n      }\n    },\n    '& button.ql-active': {\n      '& .ql-stroke': {\n        stroke: theme.palette.primary.main\n      }\n    },\n    '& .ql-stroke': {\n      stroke: theme.palette.text.primary\n    },\n    '& .ql-picker': {\n      color: theme.palette.text.primary\n    },\n    '& .ql-picker-options': {\n      backgroundColor: theme.palette.background.paper,\n      border: 'none',\n      borderRadius: theme.shape.borderRadius,\n      boxShadow: theme.shadows[10],\n      padding: theme.spacing(2)\n    }\n  },\n  '& .ql-snow.ql-container': {\n    borderBottom: 'none',\n    borderColor: theme.palette.divider,\n    borderLeft: 'none',\n    borderRight: 'none',\n    flexGrow: 1,\n    '& .ql-editor': {\n      color: theme.palette.text.primary,\n      fontFamily: theme.typography.body1.fontFamily,\n      fontSize: theme.typography.body1.fontSize,\n      padding: theme.spacing(2),\n      '&.ql-blank::before': {\n        color: theme.palette.text.secondary,\n        fontStyle: 'normal',\n        left: theme.spacing(2)\n      }\n    }\n  }\n}));\n\nconst QuillEditor = (props) => {\n  // const {handleChange,value,}=props\n  // console.log(props)\n  return <QuillEditorRoot  {...props} />;\n\n}\n  \n;\n\nexport default QuillEditor;\n"],"sourceRoot":""}