{"version":3,"sources":["mangement/Finance/IncomeStatment/IncomeStatementForm.js","mangement/Finance/IncomeStatment/IncomeStatment.js","icons/Download.js","icons/Upload.js","mangement/Finance/Head.jsx"],"names":["createData","name","calories","fat","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","TableCell","StyledTableRow","root","action","hover","TableRow","useStyles","makeStyles","table","minWidth","marginTop","feild","width","marginLeft","borderBottomWidth","borderBottomColor","borderBottomStyle","TableCell1","type","IncomeStatementForm","classes","useState","rows","setRow","ccyFormat","num","toFixed","Numeric","test","sum","sum2","initialValues","startDate","Date","endDate","validationSchema","Yup","shape","onSubmit","values","a","setErrors","setStatus","setSubmitting","data","customAxios","getCalls","params","then","res","console","log","errors","handleSubmit","handleBlur","handleChange","isSubmitting","setFieldValue","setFieldTouched","touched","Box","sx","mt","display","mr","MobileDatePicker","label","inputFormat","onAccept","onChange","date","toLocaleDateString","onClose","renderInput","inputProps","TextField","variant","value","Boolean","FormHelperText","error","Button","ml","disabled","TableContainer","Table","className","aria-label","TableHead","align","TableBody","map","row","ind","showStatus","amount","component","scope","teacherName","expenseHead","undefined","IncomeStatment","settings","useSettings","minHeight","py","Container","maxWidth","compact","Grid","container","justifyContent","spacing","Head","finance","expense","incomeList","balanceSta","Download","createSvgIcon","xmlns","viewBox","fill","fillRule","d","clipRule","Upload","props","ImportData","item","separator","fontSize","RouterLink","to","mb","mx","onClick","startIcon","m"],"mappings":"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","file":"static/js/91.a0e991ae.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  makeStyles,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport { Formik } from \"formik\";\r\nimport { MobileDatePicker } from \"@material-ui/lab\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport axios from \"axios\";\r\nimport {customAxios} from \"../../apis/Axios\";\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Frozen yoghurt\", 159, 60),\r\n  createData(\"Ice cream sandwich\", 237, 90),\r\n];\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 700,\r\n    marginTop: 15,\r\n  },\r\n\r\n  feild: {\r\n    width: \"20%\",\r\n    marginLeft: 5,\r\n  },\r\n  TableRow: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: \"#eff2f5\",\r\n    borderBottomStyle: \"dashed\",\r\n    marginLeft: 1,\r\n  },\r\n  TableCell1:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          backgroundColor: \"#B2D2A4\",\r\n        }\r\n      : {\r\n          backgroundColor: \"#B2D2A4\",\r\n          color: \"black\",\r\n        },\r\n}));\r\nconst IncomeStatementForm = () => {\r\n  const classes = useStyles();\r\n  const [rows, setRow] = useState([]);\r\n  function ccyFormat(num) {\r\n    return `${num.toFixed(1)}`;\r\n  }\r\n  function subTotal(nums) {\r\n    return nums.reduce((acc, i) => acc + i, 0);\r\n  }\r\n\r\n  // let Totol = subTotal(rows.map((ele) => ele.amount));\r\n  // const invoiceTaxes = Totol;\r\n\r\n  function Numeric(num) {\r\n    return /^-?\\d+$/.test(num);\r\n  }\r\n\r\n  var sum = 0;\r\n  var sum2 = 0;\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          startDate: new Date(),\r\n          endDate: new Date(),\r\n          // submit: null,\r\n        }}\r\n        validationSchema={Yup.object().shape({})}\r\n        onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n          try {\r\n            const data = { ...values };\r\n            await customAxios\r\n              .getCalls(\"finance/income/statement\", {\r\n                params: { ...data },\r\n              })\r\n              .then((res) => {\r\n                setRow(res);\r\n              });\r\n          } catch (e) {\r\n            console.log(e);\r\n          }\r\n          // Call API to store step data in server session\r\n        }}\r\n      >\r\n        {({\r\n          errors,\r\n          handleBlur,\r\n          handleChange,\r\n          handleSubmit,\r\n          isSubmitting,\r\n          setFieldValue,\r\n          setFieldTouched,\r\n          touched,\r\n          values,\r\n        }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <Box sx={{ mt: 2 }}>\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  mt: 4,\r\n                }}\r\n              >\r\n                <Box sx={{ mr: 2 }}>\r\n                  <MobileDatePicker\r\n                    label=\"Start Date\"\r\n                    inputFormat=\"dd/MMM/yy\"\r\n                    onAccept={() => setFieldTouched(\"startDate\")}\r\n                    onChange={(date) =>\r\n                      setFieldValue(\"startDate\", date.toLocaleDateString())\r\n                    }\r\n                    onClose={() => setFieldTouched(\"startDate\")}\r\n                    renderInput={(inputProps) => (\r\n                      <TextField variant=\"outlined\" {...inputProps} />\r\n                    )}\r\n                    value={values.startDate}\r\n                  />\r\n                </Box>\r\n                <MobileDatePicker\r\n                  label=\"End Date\"\r\n                  inputFormat=\"dd/MMM/yy\"\r\n                  onAccept={() => setFieldTouched(\"endDate\")}\r\n                  onChange={(date) =>\r\n                    setFieldValue(\"endDate\", date.toLocaleDateString())\r\n                  }\r\n                  onClose={() => setFieldTouched(\"endDate\")}\r\n                  renderInput={(inputProps) => (\r\n                    <TextField variant=\"outlined\" {...inputProps} />\r\n                  )}\r\n                  value={values.endDate}\r\n                />\r\n                {Boolean(touched.startDate && errors.startDate) && (\r\n                  <Box sx={{ mt: 2 }}>\r\n                    <FormHelperText error>{errors.startDate}</FormHelperText>\r\n                  </Box>\r\n                )}\r\n                {Boolean(touched.endDate && errors.endDate) && (\r\n                  <Box sx={{ mt: 2 }}>\r\n                    <FormHelperText error>{errors.endDate}</FormHelperText>\r\n                  </Box>\r\n                )}\r\n                <Button\r\n                  sx={{ mt: 1, mr: 2, ml: 2 }}\r\n                  color=\"primary\"\r\n                  disabled={isSubmitting}\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                >\r\n                  Search\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n      <TableContainer>\r\n        <Table className={classes.table} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell>Account Number</StyledTableCell>\r\n              <StyledTableCell>Account Title</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Amount(.Rs)</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            <TableRow className={classes.TableRow}>\r\n              <TableCell className={classes.TableCell1}>Income</TableCell>\r\n              <TableCell className={classes.TableCell1} />\r\n              <TableCell className={classes.TableCell1} />\r\n            </TableRow>\r\n\r\n            {rows.map((row, ind) => {\r\n              if (row.showStatus == 2) {\r\n                sum = sum + row.amount;\r\n                return (\r\n                  <>\r\n                    <StyledTableRow key={ind}>\r\n                      <StyledTableCell component=\"th\" scope=\"row\">\r\n                        {!Numeric(row.name) ? row.name : row.teacherName}\r\n                      </StyledTableCell>\r\n                      <StyledTableCell align=\"start\">{`${row.expenseHead} `}</StyledTableCell>\r\n                      <StyledTableCell align=\"center\">\r\n                        {row.amount}\r\n                      </StyledTableCell>\r\n                    </StyledTableRow>\r\n                  </>\r\n                );\r\n              }\r\n            })}\r\n            <TableRow>\r\n              <TableCell />\r\n              <TableCell>Total Collection</TableCell>\r\n              <TableCell align=\"center\">{ccyFormat(sum)}</TableCell>\r\n            </TableRow>\r\n            <TableRow className={classes.TableRow}>\r\n              <TableCell className={classes.TableCell1}>Expense</TableCell>\r\n              <TableCell className={classes.TableCell1} />\r\n              <TableCell className={classes.TableCell1} />\r\n            </TableRow>\r\n            {rows.map((row, ind) => {\r\n              if (row.showStatus == undefined) {\r\n                sum2 = sum2 + row.amount;\r\n                return (\r\n                  <>\r\n                    <StyledTableRow key={ind}>\r\n                      <StyledTableCell component=\"th\" scope=\"row\">\r\n                        {!Numeric(row.name) ? row.name : row.teacherName}\r\n                      </StyledTableCell>\r\n                      <StyledTableCell align=\"start\">{`${row.expenseHead} `}</StyledTableCell>\r\n                      <StyledTableCell align=\"center\">\r\n                        {row.amount}\r\n                      </StyledTableCell>\r\n                    </StyledTableRow>\r\n                  </>\r\n                );\r\n              }\r\n              //   return(\r\n\r\n              // )\r\n            })}\r\n           \r\n                <TableRow>\r\n                  <TableCell />\r\n                  <TableCell>Total Expense</TableCell>\r\n                  <TableCell align=\"center\">{ccyFormat(sum2)}</TableCell>\r\n                </TableRow>\r\n              \r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IncomeStatementForm;\r\n","import { Box, Container, Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport useSettings from \"../../../hooks/useSettings\";\r\nimport Head from \"../Head\";\r\nimport IncomeStatementForm from \"./IncomeStatementForm\";\r\n\r\nconst IncomeStatment = () => {\r\n  const settings = useSettings();\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Dashboard: Finance</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: \"background.default\",\r\n          minHeight: \"100%\",\r\n          py: 8,\r\n        }}\r\n      >\r\n        <Container maxWidth={settings.compact ? \"xl\" : false}>\r\n          <Grid container justifyContent=\"space-between\" spacing={3}>\r\n            <Head\r\n              finance=\"Finance\"\r\n              expense=\"Expense List\"\r\n              incomeList=\"Income List\"\r\n              balanceSta=\"Balance Statement\"\r\n            />\r\n          </Grid>\r\n          <IncomeStatementForm />\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IncomeStatment;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Download = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Download'\n);\n\nexport default Download;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Upload = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM6.293 6.707a1 1 0 010-1.414l3-3a1 1 0 011.414 0l3 3a1 1 0 01-1.414 1.414L11 5.414V13a1 1 0 11-2 0V5.414L7.707 6.707a1 1 0 01-1.414 0z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Upload'\n);\n\nexport default Upload;\n","import react from \"react\";\r\n\r\nimport {\r\n    Box,\r\n    Breadcrumbs,\r\n    Button,\r\n    Grid,\r\n    Typography,\r\n    Link,\r\n} from \"@material-ui/core\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport ChevronRightIcon from \"../../icons/ChevronRight\";\r\nimport UploadIcon from \"../../icons/Upload\";\r\nimport DownloadIcon from \"../../icons/Download\";\r\n\r\n\r\nconst Head = (props) => {\r\n    const { finance, expense, incomeList, ImportData, balanceSta } = props\r\n    return (\r\n        <Grid item>\r\n            <Typography color=\"textPrimary\" variant=\"h5\">\r\n                {finance}\r\n            </Typography>\r\n            <Breadcrumbs\r\n                aria-label=\"breadcrumb\"\r\n                separator={<ChevronRightIcon fontSize=\"small\" />}\r\n                sx={{ mt: 1 }}\r\n            >\r\n                <Link\r\n                    color=\"textPrimary\"\r\n                    component={RouterLink}\r\n                    to=\"/dashboard\"\r\n                    variant=\"subtitle2\"\r\n                >\r\n                    Dashboard\r\n                </Link>\r\n                <Link\r\n                    color=\"textPrimary\"\r\n                    component={RouterLink}\r\n                    to=\"/dashboard/IncomeList\"\r\n                    variant=\"subtitle2\"\r\n                >\r\n                    {incomeList}\r\n                </Link>\r\n                <Link\r\n                    color=\"textPrimary\"\r\n                    component={RouterLink}\r\n                    to=\"/dashboard/expenseList\"\r\n                    variant=\"subtitle2\"\r\n                >\r\n                    {expense}\r\n                </Link>\r\n                <Link\r\n                    color=\"textPrimary\"\r\n                    component={RouterLink}\r\n                    to=\"/dashboard/Income-statment\"\r\n                    variant=\"subtitle2\"\r\n                >\r\n                    {balanceSta}\r\n                </Link>\r\n            </Breadcrumbs>\r\n            <Box\r\n                sx={{\r\n                    mb: -1,\r\n                    mx: -1,\r\n                    mt: 1,\r\n                }}\r\n            >\r\n                <Button\r\n                    onClick={ImportData}\r\n                    color=\"primary\"\r\n                    startIcon={<UploadIcon fontSize=\"small\" />}\r\n                    sx={{ m: 1 }}\r\n                >\r\n                    Import\r\n                </Button>\r\n\r\n                <Button\r\n                    color=\"primary\"\r\n                    startIcon={<DownloadIcon fontSize=\"small\" />}\r\n                    sx={{ m: 1 }}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </Box>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Head"],"sourceRoot":""}