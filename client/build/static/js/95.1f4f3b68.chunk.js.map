{"version":3,"sources":["../node_modules/@material-ui/core/colors/blueGrey.js","icons/DotsVertical.js","pages/dashboard/SocialProfile.js","../node_modules/@material-ui/core/internal/svg-icons/KeyboardArrowRight.js","../node_modules/@material-ui/core/internal/svg-icons/KeyboardArrowLeft.js"],"names":["blueGrey","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","DotsVertical","createSvgIcon","xmlns","viewBox","fill","d","tabs","label","value","SocialProfile","mounted","useMounted","useState","currentTab","setCurrentTab","profile","setProfile","connectedStatus","setConnectedStatus","useEffect","gtm","push","event","getProfile","useCallback","a","socialApi","data","current","console","error","handleConnectToggle","prevConnectedStatus","Box","sx","backgroundColor","minHeight","style","backgroundImage","cover","backgroundPosition","backgroundRepeat","backgroundSize","height","position","content","left","top","width","visibility","Button","startIcon","fontSize","bottom","lg","xs","color","right","variant","Container","maxWidth","alignItems","display","mt","Avatar","src","avatar","border","theme","palette","background","default","ml","Typography","bio","name","flexGrow","md","onClick","size","component","RouterLink","to","Tooltip","title","IconButton","Tabs","indicatorColor","onChange","scrollButtons","textColor","map","tab","Tab","Divider","py","_jsx"],"mappings":"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","file":"static/js/95.1f4f3b68.chunk.js","sourcesContent":["const blueGrey = {\n  50: '#eceff1',\n  100: '#cfd8dc',\n  200: '#b0bec5',\n  300: '#90a4ae',\n  400: '#78909c',\n  500: '#607d8b',\n  600: '#546e7a',\n  700: '#455a64',\n  800: '#37474f',\n  900: '#263238',\n  A100: '#cfd8dc',\n  A200: '#b0bec5',\n  A400: '#78909c',\n  A700: '#455a64'\n};\nexport default blueGrey;","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst DotsVertical = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z\" />\n  </svg>, 'DotsVertical'\n);\n\nexport default DotsVertical;\n","import { useCallback, useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Container,\n  Divider,\n  IconButton,\n  Tab,\n  Tabs,\n  Tooltip,\n  Typography\n} from '@material-ui/core';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport { socialApi } from '../../__fakeApi__/socialApi';\nimport { SocialConnections, SocialTimeline } from '../../components/dashboard/social';\nimport useMounted from '../../hooks/useMounted';\nimport DotsVerticalIcon from '../../icons/DotsVertical';\nimport gtm from '../../lib/gtm';\n\nconst tabs = [\n  { label: 'Timeline', value: 'timeline' },\n  { label: 'Connections', value: 'connections' }\n];\n\nconst SocialProfile = () => {\n  const mounted = useMounted();\n  const [currentTab, setCurrentTab] = useState('timeline');\n  const [profile, setProfile] = useState(null);\n  const [connectedStatus, setConnectedStatus] = useState('not_connected');\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  const getProfile = useCallback(async () => {\n    try {\n      const data = await socialApi.getProfile();\n\n      if (mounted.current) {\n        setProfile(data);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [mounted]);\n\n  useEffect(() => {\n    getProfile();\n  }, [getProfile]);\n\n  const handleConnectToggle = () => {\n    setConnectedStatus((prevConnectedStatus) => (prevConnectedStatus === 'not_connected'\n      ? 'pending'\n      : 'not_connected'));\n  };\n\n  const handleTabsChange = (event, value) => {\n    setCurrentTab(value);\n  };\n\n  if (!profile) {\n    return null;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Dashboard: Social Profile | Material Kit Pro</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%'\n        }}\n      >\n        <Box\n          style={{ backgroundImage: `url(${profile.cover})` }}\n          sx={{\n            backgroundPosition: 'center',\n            backgroundRepeat: 'no-repeat',\n            backgroundSize: 'cover',\n            height: 460,\n            position: 'relative',\n            '&:before': {\n              backgroundImage: 'linear-gradient(-180deg, rgba(0,0,0,0.00) 58%, rgba(0,0,0,0.32) 100%)',\n              content: '\" \"',\n              height: '100%',\n              left: 0,\n              position: 'absolute',\n              top: 0,\n              width: '100%'\n            },\n            '&:hover': {\n              '& button': {\n                visibility: 'visible'\n              }\n            }\n          }}\n        >\n          <Button\n            startIcon={<AddPhotoIcon fontSize=\"small\" />}\n            sx={{\n              backgroundColor: blueGrey[900],\n              bottom: {\n                lg: 24,\n                xs: 'auto'\n              },\n              color: 'common.white',\n              position: 'absolute',\n              right: 24,\n              top: {\n                lg: 'auto',\n                xs: 24\n              },\n              visibility: 'hidden',\n              '&:hover': {\n                backgroundColor: blueGrey[900]\n              }\n            }}\n            variant=\"contained\"\n          >\n            Change Cover\n          </Button>\n        </Box>\n        <Container maxWidth=\"lg\">\n          <Box\n            sx={{\n              alignItems: 'center',\n              display: 'flex',\n              mt: 1,\n              position: 'relative'\n            }}\n          >\n            <Avatar\n              src={profile.avatar}\n              sx={{\n                border: (theme) => `4px solid ${theme.palette.background.default}`,\n                height: 120,\n                left: 24,\n                position: 'absolute',\n                top: -60,\n                width: 120\n              }}\n            />\n            <Box sx={{ ml: '160px' }}>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"overline\"\n              >\n                {profile.bio}\n              </Typography>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"h5\"\n              >\n                {profile.name}\n              </Typography>\n            </Box>\n            <Box sx={{ flexGrow: 1 }} />\n            <Box\n              sx={{\n                display: {\n                  md: 'block',\n                  xs: 'none'\n                }\n              }}\n            >\n              {connectedStatus === 'not_connected' && (\n                <Button\n                  color=\"primary\"\n                  onClick={handleConnectToggle}\n                  size=\"small\"\n                  sx={{ ml: 1 }}\n                  variant=\"outlined\"\n                >\n                  Connect\n                </Button>\n              )}\n              {connectedStatus === 'pending' && (\n                <Button\n                  color=\"primary\"\n                  onClick={handleConnectToggle}\n                  size=\"small\"\n                  sx={{ ml: 1 }}\n                  variant=\"outlined\"\n                >\n                  Pending\n                </Button>\n              )}\n              <Button\n                color=\"primary\"\n                component={RouterLink}\n                size=\"small\"\n                sx={{ ml: 1 }}\n                to=\"/dashboard/chat\"\n                variant=\"contained\"\n              >\n                Send Message\n              </Button>\n            </Box>\n            <Tooltip title=\"More options\">\n              <IconButton sx={{ ml: 1 }}>\n                <DotsVerticalIcon fontSize=\"small\" />\n              </IconButton>\n            </Tooltip>\n          </Box>\n        </Container>\n        <Box sx={{ mt: 3 }}>\n          <Container maxWidth=\"lg\">\n            <Tabs\n              indicatorColor=\"primary\"\n              onChange={handleTabsChange}\n              scrollButtons=\"auto\"\n              textColor=\"primary\"\n              value={currentTab}\n              variant=\"scrollable\"\n            >\n              {tabs.map((tab) => (\n                <Tab\n                  key={tab.value}\n                  label={tab.label}\n                  value={tab.value}\n                />\n              ))}\n            </Tabs>\n            <Divider />\n            <Box sx={{ py: 3 }}>\n              {currentTab === 'timeline' && <SocialTimeline profile={profile} />}\n              {currentTab === 'connections' && <SocialConnections />}\n            </Box>\n          </Container>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default SocialProfile;\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');"],"sourceRoot":""}